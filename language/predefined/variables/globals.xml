<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d58ee8eaaa7f716c51f66f5f1058ab3c42376d98 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes Maintainer: PhilDaiguille -->

<refentry role="variable" xml:id="reserved.variables.globals" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>$GLOBALS</refname>
  <refpurpose>Hace referencia a todas las variables disponibles en un contexto global</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>
   Un array asociativo que contiene referencias a todas las variables
   globales actualmente definidas en el contexto de ejecución global del
   script. Los nombres de las variables son los índices del array.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="variable.globals.basic">
    <title>Ejemplo con <varname>$GLOBALS</varname></title>
    <programlisting role="php">
<![CDATA[
<?php

function test()
{
    $foo = "variable local";

    echo '$foo en el contexto global : ' . $GLOBALS["foo"] . "\n";
    echo '$foo en el contexto actual : ' . $foo . "\n";
}

$foo = "Contenido de ejemplo";
test();

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
$foo en el contexto global : Contenido de ejemplo
$foo en el contexto actual : variable local
]]>
    </screen>
   </example>
  </para>
  <warning>
   <para>
    A partir de PHP 8.1.0, el acceso en escritura al array entero
    <varname>$GLOBALS</varname> ya no es soportado:
    <example xml:id="variable.globals.entire_write_error">
     <title>Escribir en el array entero <varname>$GLOBALS</varname> resultará en un error.</title>
     <programlisting role="php">
<![CDATA[
<?php

// Genera un error durante la compilación:
$GLOBALS = [];
$GLOBALS += [];
$GLOBALS =& $x;
$x =& $GLOBALS;
unset($GLOBALS);
array_pop($GLOBALS);
// ...y cualquier otra operación de escritura/lectura-escritura en $GLOBALS

?>
]]>
     </programlisting>
    </example>
   </para>
  </warning>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.is-superglobal;
  <note>
   <title>Disponibilidad de las variables</title>
   <para>
    A diferencia de todas las demás
    <link linkend="language.variables.superglobals">superglobales</link>,
    <varname>$GLOBALS</varname> siempre ha estado disponible en PHP.
   </para>
  </note>
  <note>
   <para>
    A partir de PHP 8.1.0, <varname>$GLOBALS</varname> es ahora una
    copia de solo lectura del <link linkend="features.gc.refcounting-basics">array de símbolos</link>
    global.
    Es decir, las variables globales no pueden ser modificadas a través de su copia.
    Anteriormente, el array <varname>$GLOBALS</varname> estaba excluido del
    comportamiento habitual por valor de los arrays de PHP y las variables globales
    podían ser modificadas a través de su copia.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php

// Antes de PHP 8.1.0
$a = 1;

$globals = $GLOBALS; // Copia ostensiblemente por valor
$globals['a'] = 2;
var_dump($a); // int(2)

// A partir de PHP 8.1.0
// esto ya no modifica $a. El comportamiento anterior violaba la semántica por valor.
$globals = $GLOBALS;
$globals['a'] = 1;

// Para restaurar el comportamiento anterior, iterar su copia y asignar cada propiedad de vuelta a $GLOBALS.
foreach ($globals as $key => $value) {
    $GLOBALS[$key] = $value;
}

?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
