<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1ffbadf2906a5c85d2f9437b87da3e204ea41b7a Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<chapter xml:id="language.types" xmlns="http://docbook.org/ns/docbook">
 <title>Tipos</title>

 <sect1 xml:id="language.types.intro">
  <title>Introducción</title>

  <para>
   Cada expresión en PHP tiene uno de los siguientes
   tipos incorporados dependiendo de su valor:
   <itemizedlist>
    <listitem><simpara><type>null</type></simpara></listitem>
    <listitem><simpara><type>bool</type></simpara></listitem>
    <listitem><simpara><type>int</type></simpara></listitem>
    <listitem><simpara><type>float</type> (número de punto flotante, también conocido como <type>double</type>)</simpara></listitem>
    <listitem><simpara><type>string</type></simpara></listitem>
    <listitem><simpara><type>array</type></simpara></listitem>
    <listitem><simpara><type>object</type></simpara></listitem>
    <listitem><simpara><type>callable</type></simpara></listitem>
    <listitem><simpara><type>resource</type></simpara></listitem>
   </itemizedlist>
  </para>

  <simpara>
   Puede que existan aún algunas referencias al tipo "double" en el manual. Considere
   al tipo double como float; los dos nombres existen sólo por razones históricas.
  </simpara>

  <simpara>
   El tipo de una variable usualmente no lo declara el programador; al contrario, es
   decidido en tiempo de ejecución por PHP dependiendo del contexto en el que se emplea
   dicha variable.
  </simpara>

  <note>
   <simpara>
    Para comprobar el tipo y el valor de una
    <link linkend="language.expressions">expresión</link>,
    utilice la función <function>var_dump</function>.
   </simpara>

   <para>
    Para obtener una representación legible por humanos de un tipo con propósitos de depuración, use
    la función <function>gettype</function>. Para comprobar un cierto tipo,
    <emphasis>no</emphasis> emplee <function>gettype</function>, si no las funciones
    <literal>is_<replaceable>tipo</replaceable></literal>. Algunos
    ejemplos:
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$un_bool = true;   // un valor booleano
$un_str  = "foo";  // una cadena de caracteres
$un_str2 = 'foo';  // una cadena de caracteres
$un_int  = 12;     // un número entero

echo gettype($un_bool); // imprime: boolean
echo gettype($un_str);  // imprime: string

// Si este valor es un entero, incrementarlo en cuatro
if (is_int($un_int)) {
    $un_int += 4;
}

// Si $un_bool es una cadena, imprimirla
// (no imprime nada)
if (is_string($un_bool)) {
    echo "Cadena: $un_bool";
}
?>
]]>
    </programlisting>
   </informalexample>
  </note>

  <simpara>
   Para forzar la conversión de una variable a un cierto tipo, puede <link
   linkend="language.types.typecasting">amoldar</link> la variable o usar la
   función <function>settype</function> con ella.
  </simpara>

  <simpara>
   Observe que una variable puede ser evaluada con valores diferentes en ciertas
   situaciones, dependiendo del tipo que posea en cada momento. Para más información,
   lea la sección sobre <link linkend="language.types.type-juggling">Manipulación
   de tipos</link>. <link linkend="types.comparisons">Las tablas de comparación de
   tipos</link> pueden resultar útiles también, ya que muestran ejemplos de varias
   comparaciones relacionadas con tipos.
  </simpara>
 </sect1>

 &language.types.type-system;
 &language.types.null;
 &language.types.boolean;
 &language.types.integer;
 &language.types.float;
 &language.types.string;
 &language.types.numeric-strings;
 &language.types.array;
 &language.types.object;
 &language.types.enumerations;
 &language.types.resource;
 &language.types.callable;
 &language.types.mixed;
 &language.types.void;
 &language.types.never;
 &language.types.relative-class-types;
 &language.types.value;
 &language.types.iterable;
 &language.types.declarations;
 &language.types.type-juggling;

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
