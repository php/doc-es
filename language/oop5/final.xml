<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1ae887f71cee9a2b171e8344cef33af689cfcde0 Maintainer: chuso Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->
<sect1 xml:id="language.oop5.final" xmlns="http://docbook.org/ns/docbook">
 <title>Palabra clave Final</title>
 <para>
  PHP introduce la palabra clave final, que impide que las clases
  hijas sobrescriban un método, antecediendo su definición con <emphasis>final</emphasis>.
  Si la propia clase se define como final, entonces no se podrá heredar de ella.
 </para>
 <para>
  <example>
   <title>Ejemplo de métodos Final</title>
   <programlisting role="php">
<![CDATA[
<?php
class BaseClass {
   public function test() {
       echo "llamada a BaseClass::test()\n";
   }
   
   final public function moreTesting() {
       echo "llamada a BaseClass::moreTesting()\n";
   }
}

class ChildClass extends BaseClass {
   public function moreTesting() {
       echo "llamada a ChildClass::moreTesting()\n";
   }
}
// Devuelve un error Fatal: Cannot override final method BaseClass::moreTesting()
?> 
]]>
   </programlisting>
  </example>
 </para>
 <para>
  <example>
   <title>Ejemplo de clase Final</title>
   <programlisting role="php">
<![CDATA[
<?php
final class BaseClass {
   public function test() {
       echo "llamada a BaseClass::test()\n";
   }

   // Aquí no importa si definimos una función como final o no
   final public function moreTesting() {
       echo "llamada a BaseClass::moreTesting()\n";
   }
}

class ChildClass extends BaseClass {
}
// Devuelve un error Fatal: Class ChildClass may not inherit from final class (BaseClass)
?> 
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example xml:id="language.oop5.final.example.php81">
    <title>Ejemplo de constantes finales a partir de PHP 8.1.0</title>
    <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    final public const X = "foo";
}

class Bar extends Foo
{
    public const X = "bar";
}

// Fatal error: Bar::X cannot override final constant Foo::X
?>
]]>
    </programlisting>
   </example>
  </para>

  <note>
   <simpara>
    Las propiedades no pueden declararse como finales: sólo las clases, métodos y constantes (a partir de PHP 8.1.0) pueden declararse como finales.
   </simpara>
   <simpara>
    A partir de PHP 8.0.0, los métodos privados no pueden ser declarados finales excepto el constructor.
   </simpara>
  </note>
 </sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
