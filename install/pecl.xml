<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: cb6d65ebe2412bbaef6d1edd076911539f1aceda Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<chapter xml:id="install.pecl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Instalación de extensiones PECL</title>

 <sect1 xml:id="install.pecl.intro">
  <title>Introducción a las instalaciones PECL</title>
  &pecl.moving.to.pie;
  <simpara>
   &link.pecl; es un depósito de extensiones PHP
   que están disponibles a través del sistema de paquetes
   <link xlink:href="&url.php.pear;">PEAR</link>. Esta sección del manual tiene como objetivo presentar
   la manera de obtener e instalar las extensiones de PECL.
  </simpara>
  <simpara>
   Estas instrucciones suponen que <literal>/path/to/php/src/dir/</literal> es la
   ruta hasta las fuentes de la distribución PHP, y <literal>extname</literal> es el nombre
   de la extensión PECL. Ajuste las siguientes instrucciones en consecuencia.
   Estas instrucciones también suponen una familiaridad con el uso de
   los <link xlink:href="&url.php.pear.cli;">comandos pear</link>.
   La información en el manual PEAR para el comando <command>pear</command>
   también es aplicable al comando <command>pecl</command>.
  </simpara>
  <simpara>
   Una extensión compartida debe ser compilada, instalada y cargada para ser
   utilizada. Los métodos descritos a continuación proporcionan diversas
   instrucciones sobre cómo compilar e instalar extensiones, pero no las cargan automáticamente. Las extensiones pueden ser cargadas
   agregando una directiva de <link linkend="ini.extension">extensión</link>
   al fichero &php.ini; o utilizando la función <function>dl</function>.
  </simpara>
  <simpara>
   Al compilar módulos PHP, es importante tener las herramientas en sus versiones apropiadas, tales como autoconf, automake, libtool, etc. Consulte las
   <link xlink:href="&url.php.anongit;">Instrucciones para el Git anónimo</link>, para
   conocer las utilidades necesarias y sus versiones.
  </simpara>
 </sect1>

 <sect1 xml:id="install.pecl.downloads">
  <title>Descargar extensiones PECL</title>
  &pecl.moving.to.pie;
  <simpara>
   Existen varias maneras de descargar extensiones PECL:
  </simpara>
  <itemizedlist>
   <simpara>
    El comando <command>pecl install extname</command> descarga el código
    de las extensiones automáticamente, lo que evita realizar
    una descarga particular.
   </simpara>
   <listitem>
    <simpara>
     <link xlink:href="&url.pecl;">&url.pecl;</link>
    </simpara>
    <simpara>
     El sitio web de PECL contiene diversa información sobre las diferentes extensiones
     ofrecidas por el equipo de desarrollo de PHP.
     Varias informaciones están disponibles, incluyendo los cambios
     entre las versiones, las notas de versiones, lo que es requerido para hacer funcionar la extensión
     así como otros detalles similares.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <command>pecl download extname</command>
    </simpara>
    <simpara>
     Las extensiones PECL listadas en el sitio web de PECL están disponibles
     y pueden ser descargadas e instaladas utilizando la
     <link xlink:href="&url.php.pear.cli;">comando pecl</link>.
     La versión específica de la extensión también puede ser especificada.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>git</acronym>
    </simpara>
    <simpara>
     Muchas extensiones PECL permanecen en GitHub.
     <!-- TODO Expand -->
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>SVN</acronym>
    </simpara>
    <simpara>
     Algunas extensiones PECL permanecen en <acronym>SVN</acronym>.
     Una interfaz web está disponible en <link xlink:href="&url.php.svn;pecl/">&url.php.svn;pecl/</link>.
     Para descargar directamente desde <acronym>SVN</acronym>, la siguiente secuencia de instrucciones
     puede ser utilizada:
    </simpara>
    <screen>
<![CDATA[
$ svn checkout https://svn.php.net/repository/pecl/extname/trunk extname
]]>
    </screen>
   </listitem>
   <listitem>
    <simpara>
     Descargas para Windows:
    </simpara>
    <simpara>
     El proyecto PHP compila y ofrece DLLs de Windows para la mayoría de las
     extensiones PECL disponibles en la página del paquete.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="install.pecl.windows">
  <title>Instalar una extensión PHP en Windows</title>
  <para>
   Existen dos maneras de cargar una extensión PHP en Windows:
   o bien compilarla en PHP, o bien cargar una DLL. Cargar una
   extensión precompilada es el método más práctico y recomendado.
  </para>
  <para>
   Para cargar una extensión, su fichero <filename>.dll</filename> debe estar disponible en el sistema.
   Todas las extensiones son automáticamente y periódicamente compiladas por el grupo PHP
   (ver la sección de descargas).
  </para>
  <para>
   Para compilar una extensión en PHP, consulte la
   documentación sobre <link linkend="install.windows.building">
   la compilación de las fuentes</link>.
  </para>
  <para>
   Para compilar una extensión autónoma, (es decir, un fichero DLL), consulte la
   documentación sobre <link linkend="install.windows.building">
   la compilación de las fuentes</link>. Si el fichero DLL no está presente en la distribución
   PHP y PECL, puede ser necesario compilarlo antes de poder utilizarlo.
  </para>

  <sect2 xml:id="install.pecl.windows.find">
   <title>¿Dónde encontrar una extensión?</title>
   &pecl.moving.to.pie;
   <para>
    Las extensiones PHP generalmente se llaman <filename>php_*.dll</filename> (donde los asteriscos
    representan el nombre de la extensión) y se encuentran en la carpeta
    <filename>PHP\ext</filename>.
   </para>
   <para>
    PHP se entrega con las extensiones que son más útiles para la mayoría de los usuarios.
    Se llaman extensiones <emphasis>integradas</emphasis>, o <emphasis>bundled</emphasis>.
   </para>
   <para>
    Sin embargo, si las extensiones integradas no proporcionan la funcionalidad necesaria,
    una extensión que lo haga puede encontrarse en &link.pecl;.
    La Biblioteca de Extensiones Comunitarias de PHP (PECL, también llamada Biblioteca de Extensiones Comunitarias de PHP)
    es un depósito para las extensiones PHP, proporcionando un directorio de todas las extensiones conocidas y
    facilidades de alojamiento para la descarga y el desarrollo de extensiones PHP.
   </para>
   <para>
    Si una extensión ha sido desarrollada para un uso particular, puede ser alojada en PECL para que
    otras personas con las mismas necesidades puedan beneficiarse de ella.
    Un efecto secundario interesante es que es una buena oportunidad para recibir comentarios,
    (con un poco de suerte) agradecimientos, informes de errores y, a veces, correcciones. Antes de
    enviar una extensión para alojamiento en PECL, por favor lea
    <link xlink:href="&url.pecl.submit;">PECL submit</link>.
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.which">
   <title>¿Qué extensiones descargar?</title>
   <para>
    <emphasis>A menudo hay varias versiones de cada DLL:</emphasis>
    <itemizedlist>
     <listitem>
      <simpara>
       Diferentes números de versiones (al menos, los dos primeros dígitos deben ser los mismos)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Diferentes configuraciones de seguridad de hilos
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Diferentes arquitecturas de procesadores (x86, x64...)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Diferentes configuraciones de depuración
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>etc.</literal>
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Se recomienda elegir las extensiones para que se adapten
    a la máquina servidor en la que se utiliza PHP. El siguiente script
    mostrará <emphasis>todas</emphasis> las configuraciones de PHP:
   </para>
   <para>
    <example>
     <title>Llamada a la función <function>phpinfo</function></title>
     <programlisting role="php">
<![CDATA[
<?php
phpinfo();
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    O bien, en línea de comandos:
    <screen>
<![CDATA[
drive:\path\to\php\executable\php.exe -i
]]>
    </screen>
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.loading">
   <title>Cargar una extensión</title>
   <para>
    La manera más común de cargar una extensión PHP es incluirla en el
    fichero de configuración &php.ini;. Se debe tener en cuenta que muchas extensiones
    ya están presentes en el fichero &php.ini; y que simplemente se debe eliminar el punto y coma para activarlas.
   </para>
   <para>
    A partir de PHP 7.2.0, el nombre de la extensión puede ser utilizado en lugar
    del nombre del fichero de la extensión. Como es independiente del sistema operativo y más fácil,
    especialmente para los nuevos usuarios, se convierte en la manera recomendada
    de especificar las extensiones a cargar. Los nombres de los ficheros siguen siendo soportados para la compatibilidad con las versiones anteriores.
   </para>
    <screen>
<![CDATA[
;extension=php_extname.dll
]]>
    </screen>
    <screen>
<![CDATA[
extension=php_extname.dll
]]>
    </screen>
    <screen>
<![CDATA[
; A partir de PHP 7.2, favorizar:
extension=extname
zend_extension=another_extension
]]>
    </screen>
   <para>
    Sin embargo, algunos servidores web son confusos, ya que no utilizan el fichero
    &php.ini; almacenado con el ejecutable PHP. Para saber más sobre el verdadero
    &php.ini; utilizado, es posible buscar su ubicación utilizando <function>phpinfo</function>:
   </para>
    <screen>
<![CDATA[
Configuration File (php.ini) Path   C:\WINDOWS
]]>
    </screen>
    <screen>
<![CDATA[
Loaded Configuration File   C:\Program Files\PHP\8.2\php.ini
]]>
    </screen>
   <para>
    Después de activar una extensión, guarde el fichero &php.ini;, y
    reinicie el servidor web, luego verifique nuevamente el fichero <function>phpinfo</function>.
    La nueva extensión debería tener su sección allí.
   </para>
  </sect2>

  <sect2 xml:id="install.pecl.windows.problemsolving">
   <title>Resolución de problemas</title>
   <para>
    Si la extensión no aparece en <function>phpinfo</function>,
    es conveniente verificar los registros para saber de dónde viene el problema.
   </para>
   <para>
    Si PHP se utiliza en línea de comandos (CLI), el error de carga de la extensión
    debería ser legible directamente en la pantalla.
   </para>
   <para>
    Si PHP se utiliza en un servidor web, la posición y el formato de los registros
    varían considerablemente de un servidor a otro. Lea la documentación del
    servidor web para saber dónde se encuentran: PHP no tiene control sobre esta ubicación.
   </para>
   <para>
    Los problemas más comunes son la ubicación del fichero DLL y
    las DLLs de las que depende, el valor de la directiva
    "<link linkend="ini.extension-dir">extension_dir</link>"
    en el &php.ini; y las inconsistencias de compilación.
   </para>
   <para>
    Si el problema es una inconsistencia de compilación, la DLL descargada probablemente no es
    la correcta. Intente descargar una nueva, con las configuraciones correctas del servidor. <function>phpinfo</function> será muy útil.
   </para>
  </sect2>

 </sect1>

 <sect1 xml:id="install.pecl.pear">
  <title>Compilación de extensiones PECL compartidas con el comando pecl</title>
  <simpara>
   PECL facilita la creación de extensiones PHP compartidas. Utilizando la
   <link xlink:href="&url.php.pear.cli;">comando pecl</link>, haga lo siguiente:
  </simpara>
  <screen>
<![CDATA[
$ pecl install extname
]]>
  </screen>
  <simpara>
   Esto descargará el fichero fuente de la extensión <emphasis>extname</emphasis>,
   lo compilará e instalará el fichero <filename>extname.so</filename> en el
   directorio <link linkend="ini.extension-dir">extension_dir</link>.
   <filename>extname.so</filename> debe luego ser cargado a través de &php.ini;.
  </simpara>
  <simpara>
   Por defecto, el comando <command>pecl</command> no instalará los paquetes
   marcados como <literal>alpha</literal> o
   <literal>beta</literal>. Si no hay ningún paquete <literal>stable</literal> disponible,
   es posible instalar un paquete <literal>beta</literal> utilizando el siguiente comando:
  </simpara>
  <screen>
<![CDATA[
$ pecl install extname-beta
]]>
  </screen>
  <para>
   También es posible instalar una versión específica utilizando el siguiente comando:
  </para>
  <screen>
<![CDATA[
$ pecl install extname-0.1
]]>
  </screen>
  <note>
   <para>
    Después de activar la extensión en el &php.ini;, es necesario reiniciar el servidor web
    para que se tenga en cuenta.
   </para>
  </note>
 </sect1>

 <sect1 xml:id="install.pecl.phpize">
  <title>Compilación de extensiones compartidas con phpize</title>
  <simpara>
   A veces, el uso del instalador <command>pecl</command> no es una opción.
   Esto puede deberse a la presencia de un cortafuegos o al hecho de que la extensión en curso
   de instalación no está disponible como un paquete PECL compatible, como las
   extensiones no publicadas provenientes de git. Si se debe construir una extensión de este tipo,
   las herramientas de construcción de nivel inferior pueden ser utilizadas para realizar
   la construcción manualmente.
  </simpara>
  <simpara>
   El comando <command>phpize</command> se utiliza para preparar
   el entorno de compilación para una extensión PHP. En el siguiente ejemplo, las
   fuentes de la extensión están en una carpeta llamada <filename>extname</filename>:
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd extname
$ phpize
$ ./configure
$ make
# make install
]]>
   </screen>
  </para>
  <simpara>
   Una instalación exitosa creará un fichero <filename>extname.so</filename>
   y lo colocará en el <link linkend="ini.extension-dir">directorio de extensiones</link>
   de PHP. El &php.ini; deberá ser ajustado, y la línea <literal>extension=extname.so</literal>
   agregada antes de poder utilizar la extensión.
  </simpara>
  <simpara>
   Si el sistema no posee el comando <command>phpize</command> y se utilizan paquetes precompilados (como RPM), es necesario asegurarse de instalar
   también la versión de desarrollo apropiada de los paquetes PHP ya que
   incluye también el comando <literal>phpize</literal> así como los encabezados
   apropiados para construir PHP y sus extensiones.
  </simpara>
  <simpara>
   Ejecute el comando <command>phpize --help</command> para mostrar información
   de uso adicional.
  </simpara>
 </sect1>

 <sect1 xml:id="install.pecl.php-config">
  <title>
   <command>php-config</command>
  </title>

  <para>
   <command>php-config</command> es un pequeño script shell para obtener información
   sobre la configuración instalada de PHP.
  </para>

  <para>
   Al compilar extensiones, si se instalan varias versiones de PHP,
   la instalación para la cual se debe construir puede ser especificada utilizando la opción
   <option role="configure">--with-php-config</option> durante la configuración, definiendo
   la ruta del script <command>php-config</command> correspondiente.
  </para>

  <para>
   La lista de opciones de línea de comandos proporcionadas por el script
   <command>php-config</command> puede ser obtenida ejecutando el script <command>php-config</command>
   con la opción <option>-h</option>:
   <screen>
<![CDATA[
Usage: /usr/local/bin/php-config [OPTION]
Options:
  --prefix            [...]
  --includes          [...]
  --ldflags           [...]
  --libs              [...]
  --extension-dir     [...]
  --include-dir       [...]
  --php-binary        [...]
  --php-sapis         [...]
  --configure-options [...]
  --version           [...]
  --vernum            [...]
]]>
   </screen>
  </para>

  <para>
   <table>
    <title>Opciones de línea de comandos</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Opción</entry>
       <entry>Descripción</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>--prefix</entry>
       <entry>Prefijo del directorio donde PHP está instalado, i.e. /usr/local</entry>
      </row>
      <row>
       <entry>--includes</entry>
       <entry>Lista de las opciones <literal>-I</literal> con todos los ficheros incluidos</entry>
      </row>
      <row>
       <entry>--ldflags</entry>
       <entry>Banderas <literal>LD</literal> que han sido compiladas con PHP</entry>
      </row>
      <row>
       <entry>--libs</entry>
       <entry>Bibliotecas adicionales que han sido compiladas con PHP</entry>
      </row>
      <row>
       <entry>--extension-dir</entry>
       <entry>Directorios donde las extensiones son buscadas por defecto</entry>
      </row>
      <row>
       <entry>--include-dir</entry>
       <entry>Prefijo del directorio donde los encabezados de ficheros son
        instalados por defecto</entry>
      </row>
      <row>
       <entry>--php-binary</entry>
       <entry>Ruta completa hacia el CLI PHP o el binario CGI</entry>
      </row>
      <row>
       <entry>--php-sapis</entry>
       <entry>Muestra todos los módulos SAPI disponibles</entry>
      </row>
      <row>
       <entry>--configure-options</entry>
       <entry>Opciones de configuración para recrear la configuración
        de la instalación actual de PHP</entry>
      </row>
      <row>
       <entry>--version</entry>
       <entry>Versión de PHP</entry>
      </row>
      <row>
       <entry>--vernum</entry>
       <entry>Versión de PHP en forma de entero</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </sect1>

 <sect1 xml:id="install.pecl.static">
  <title>Compilación de extensiones PECL estáticamente en PHP</title>
  <simpara>
   Puede ser necesario construir una extensión PECL estáticamente en el binario PHP.
   Para ello, las fuentes de la extensión deben ser colocadas en el directorio
   <filename>/path/to/php/src/dir/ext/</filename>, y el sistema de compilación de PHP debe
   regenerar su script de configuración.
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd /path/to/php/src/dir/ext
$ pecl download extname
$ gzip -d < extname.tgz | tar -xvf -
$ mv extname-x.x.x extname
]]>
   </screen>
  </para>
  <simpara>
   Esto generará el siguiente directorio:
  </simpara>
  <screen>
<![CDATA[
/path/to/php/src/dir/ext/extname
]]>
   </screen>
  <simpara>
   A partir de aquí, PHP debe ser forzado a reconstruir el script de configuración,
   y luego puede ser construido normalmente:
  </simpara>
  <screen>
<![CDATA[
$ cd /path/to/php/src/dir
$ rm configure
$ ./buildconf --force
$ ./configure --help
$ ./configure --with-extname --enable-someotherext --with-foobar
$ make
$ make install
]]>
   </screen>
  <note>
   <simpara>
    Para ejecutar el script <command>buildconf</command>,
    <command>autoconf</command>
    <literal>2.68</literal>
    y
    <command>automake</command>
    <literal>1.4+</literal>
    serán necesarios.
    Las versiones más recientes de <command>autoconf</command> pueden funcionar pero no son soportadas.
   </simpara>
  </note>
  <simpara>
   El uso de
   <option role="configure">--enable-extname</option>
   o
   <option role="configure">--with-extname</option>
   depende de la extensión.
   En general, una extensión que no requiere bibliotecas externas utiliza
   <option role="configure">--enable</option>.
   Para asegurarse, ejecute el siguiente comando después de <command>buildconf</command>:
  </simpara>
  <screen>
<![CDATA[
$ ./configure --help | grep extname
]]>
  </screen>
 </sect1>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
