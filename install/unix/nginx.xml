<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f374919ddde3a726890a867fdab02babc1a37fc1 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="install.unix.nginx" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Nginx 1.4.x en sistemas Unix</title>
 
 <para>
  Esta documentación cubre la instalación y configuración de PHP con
  PHP-FPM para un servidor HTTP de Nginx 1.4.x.
 </para>
 
 <para>
  En esta guía se asume que se ha construido Nginx desde el código fuente, por lo que
  todos los ficheros binarios y de configuración están ubicados en
  <literal>/usr/local/nginx</literal>. Si este no es el caso y se ha
  obtenido Nginx a través de otros medios, consúltese la
  <link xlink:href="&url.nginx;">Wiki de Nginx</link> para traducir
  este manual a una configuración propia.
 </para>
 
 <para>
  Esta guía cubre la configuración básica de un servidor Nginx para
  procesar aplicaciones de PHP y servirlas en el puerto 80. Se recomienda
  estudiar la documentación de Nginx y de PHP-FPM para poder
  optimizar la configuración más allá del ámbito de esta documentación.
 </para>
 
 <para>
  Obsérvese que en esta documentación se han reemplazado los números
  de versión con una 'x' para asegurarse de que sea correcta en el futuro;
  se han de reemplazar estos con los números de versión correspondiente cuando sea necesario.
 </para>
 
 <orderedlist>
  <listitem>
   <para>
    Se recomienda visitar la página de
    <link xlink:href="&url.nginx.wiki.install;">instalación</link> de la Wiki de Nginx 
    para obtener e instalar Nginx en un sistema propio.
   </para>
  </listitem>
  
  <listitem>
   <para>
    Obtener y desempaquetar el código fuente de PHP:
   </para>
   
   <informalexample xml:id="install.unix.nginx.extract.php">
    <screen>
<![CDATA[
tar zxf php-x.x.x
]]>
    </screen>
   </informalexample>
  </listitem>
  
  <listitem>
   <para>
    Configurar y construir PHP. Aquí es donde se personaliza PHP
    con varias opciones, como qué extensiones se habilitarán. Ejecutar
    ./configure --help para enumerar las opciones disponibles. En este ejemplo
    se realiza una configuración sencilla con soporte para PHP-FPM y MySQL.
   </para>
   
   <informalexample xml:id="install.unix.nginx.build.php">
    <screen>
<![CDATA[
cd ../php-x.x.x
./configure --enable-fpm --with-mysql
make
sudo make install
]]>
    </screen>
   </informalexample>
  </listitem>
  
  <listitem>
   <para>
    Obtener y mover los ficheros de configuración a sus ubicaciones correctas
   </para>
   
   <informalexample xml:id="install.unix.nginx.configure.php">
    <screen>
<![CDATA[
cp php.ini-development /usr/local/php/php.ini
cp /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf
cp sapi/fpm/php-fpm /usr/local/bin
]]>
    </screen>
   </informalexample>
  </listitem>
  
  <listitem>
   <para>
    Es importante prevenir que Nginx pase peticiones al
    «backend» de PHP-FPM si el fichero no existe, evitando así
    la inyección arbitraria de scripts.
   </para>
   <para>
    Esto se puede corregir estableciendo la directiva
    <link linkend="ini.cgi.fix-pathinfo">cgi.fix_pathinfo</link>
    a <literal>0</literal> dentro del fichero php.ini.
   </para>
   <para>
    Cargar el php.ini:
   </para>
   
   <informalexample xml:id="install.unix.nginx.configure.ini">
    <screen>
<![CDATA[
vim /usr/local/php/php.ini
]]>
    </screen>
   </informalexample>
   
   <para>
    Localizar <literal>cgi.fix_pathinfo=</literal> y modificarla como sigue:
   </para>
   
   <informalexample xml:id="install.unix.nginx.configure.pathinfo">
    <screen>
<![CDATA[
cgi.fix_pathinfo=0
]]>
    </screen>
   </informalexample>
  </listitem>
  
  <listitem>
   <para>
    Se debe modificar php-fpm.conf para especificar que php-fpm debe ejecutarse como el usuario
    www-data y el grupo www-data antes de poder iniciar el servicio:
   </para>
   
   <informalexample xml:id="install.unix.nginx.modify.phpfpm">
    <screen>
<![CDATA[
vim /usr/local/etc/php-fpm.conf
]]>
    </screen>
   </informalexample>
   
   <para>
    Buscar y modificar lo siguiente: 
   </para>
   
   <informalexample xml:id="install.unix.nginx.modify.phpfpm.usergroup">
    <screen>
<![CDATA[
; Usuario/grupo de procesos de Unix
; Nota: El usuario es obligatorio. Si el grupo no se establece, se utilizará
;       el grupo predeterminado del usuario.
user = www-data
group = www-data
]]>
    </screen>
   </informalexample>
   
   <para>
    Ahora se puede iniciar el servicio de php-fpm:
   </para>
   
   <informalexample xml:id="install.unix.nginx.start.phpfpm">
    <screen>
<![CDATA[
/usr/local/bin/php-fpm
]]>
    </screen>
   </informalexample>
   
   <para>
    Esta guía no continua configurando php-fpm; si se tiene interés en
    una configuración mayor de php-fpm, consulte la documentación.
   </para>
  </listitem>
  
  <listitem>
   <para>
    Ahora Nginx debe configurarse para que pueda procesar aplicaciones de PHP:
   </para>
   
   <informalexample xml:id="install.unix.nginx.configure.nginx">
    <programlisting>
<![CDATA[
vim /usr/local/nginx/conf/nginx.conf
]]>
    </programlisting>
   </informalexample>
   
   <para>
    Modificar el bloque de ubicaciones predeterminado para que intente
    servir ficheros .php:
   </para>
   
   <informalexample xml:id="install.unix.nginx.configure.nginx.location">
    <programlisting role="nginx-conf">
<![CDATA[
location / {
    root   html;
    index  index.php index.html index.htm;
}
]]>
    </programlisting>
   </informalexample>
   
   <para>
    El siguiente paso es asegurarse de que los ficheros .php se pasan al
    «backend» de PHP-FPM. Bajo el bloque de ubicaciones predeterminado de PHP
    comentado, añadir lo siguiente:
   </para>
   
   <informalexample xml:id="install.unix.nginx.configure.nginx.php">
    <programlisting role="nginx-conf">
<![CDATA[
location ~* \.php$ {
    fastcgi_index   index.php;
    fastcgi_pass    127.0.0.1:9000;
    include         fastcgi_params;
    fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
    fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
}
]]>
    </programlisting>
   </informalexample>
   
   <para>
    Reiniciar Nginx.
   </para>
   
   <informalexample xml:id="install.unix.nginx.restart.nginx">
    <screen>
<![CDATA[
sudo /usr/local/nginx/sbin/nginx -s stop
sudo /usr/local/nginx/sbin/nginx
]]>
    </screen>
   </informalexample>
  </listitem>
  
  <listitem>
   <para>
    Crear un fichero de prueba
   </para>
   
   <informalexample xml:id="install.unix.nginx.test.nginx.php">
    <screen>
<![CDATA[
rm /usr/local/nginx/html/index.html
echo "<?php phpinfo(); ?>" >> /usr/local/nginx/html/index.php
]]>
    </screen>
   </informalexample>
   
   <para>
    Ahora, navegar a http://localhost. phpinfo() debería mostrarse.
   </para>
  </listitem>
 </orderedlist>
 
 <para>
  Siguiendo los pasos anteriores se tendrá un servidor web Nginx funcionando con
  soporte para PHP como módulo <literal>SAPI</literal>. Por supuesto, existen
  muchas más opciones de configuración disponibles para Nginx y PHP. Para más
  información, teclear <command>./configure --help</command> en el árbol de código
  fuente correspondiente.
 </para>
 
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
