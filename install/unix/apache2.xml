<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 445962cfde047efd759cfc37006a5c5864864ef5 Maintainer: aeoris Status: ready -->
<!-- Reviewed: yes -->
<sect1 xml:id="install.unix.apache2" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Apache 2.x sobre sistemas Unix</title>
 <para>
  Esta sección contiene notas y consejos específicos a las instalaciones de Apache 2.x
  de PHP sobre sistemas Unix.
 </para>
 
 &warn.apache2.compat;
 
 <para>
  La <link xlink:href="&url.apache2.docs;">Documentación de Apache</link> 
  es la fuente de información más autorizada acerca del servidor Apache 2.x.
  Ahí se puede encontrar más información acerca de las opciones de
  instalación.
 </para>
 
 <para>
  La versión más reciente de Apache HTTP Server puede obtenerse del
  <link xlink:href="&url.apache;">Sitio de descargas de Apache</link>,
  y una versión apropiada de PHP de los lugares anteriormente mencionados.
  Esta guía rápida solamente cubre lo básico para comenzar con Apache 2.x
  y PHP. Para obtener más información lea la
  <link xlink:href="&url.apache2.docs;">Documentación de Apache</link>.
  Los números de versión han sido omitidos aquí, para asegurar que las
  instrucciones no sean incorrectas. En los ejemplos siguientes, 'NN' deberá ser
  reemplazado con la versión específica de Apache que se está utilizando.
 </para>
 
 <para>
  Existen actualmente dos versiones de Apache 2.x - está la 2.0 y la 2.2.
  Mientras que existen varias razones para elegir cada una, la 2.2 es actualmente
  la versión más reciente, y la que se recomienda, si es que esa opción está
  disponible. Sin embargo, las instrucciones aquí funcionarán ya sea para
  2.0 ó 2.2.
 </para>
 
 <orderedlist>
  <listitem>
   <para>Obténgase el servidor HTTP Apache de la ubicación listada con anterioridad,
    y desempáquese:</para>
   
   <informalexample>
    <screen>
<![CDATA[
gzip -d httpd-2_x_NN.tar.gz
tar -xf httpd-2_x_NN.tar
]]>
      </screen>
      </informalexample>
      </listitem>
      
      <listitem>
       <para>De la misma manera, obtener y desempacar las fuentes de PHP:</para>
       
       <informalexample>
        <screen>
<![CDATA[
gunzip php-NN.tar.gz
tar -xf php-NN.tar
]]>
      </screen>
      </informalexample>
      </listitem>
      
      <listitem>
       <para>
        Compilar e instalar Apache. Consúltese la documentación de instalación de Apache para
        mayores detalles sobre la compilación de Apache.
       </para>
       
       <informalexample>
        <screen>
<![CDATA[
cd httpd-2_x_NN
./configure --enable-so
make
make install
]]>
      </screen>
      </informalexample>
      </listitem>
      
      <listitem>
       <para>
        Ahora se tiene Apache 2.x.NN disponible debajo de /usr/local/apache2,
        configurado con soporte para módulos cargables y con el MPM (Módulo de multiproceso) prefork estándar.
        Para probar la instalación úsese el procedimiento para iniciar
        el servidor Apache, por ej.:
        
        <informalexample>
         <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl start
]]>
     </screen>
  </informalexample>
  
  y deténgase el servidor para proceder con la configuración para PHP:
  
  <informalexample>
   <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl stop
]]>
     </screen>
  </informalexample>
      </para>
      </listitem>
      
      <listitem>
       
       <para>
        Ahora, configure y compile PHP.  Aquí es donde se personaliza PHP
        con varias opciones, como qué extensiones se han de habilitar. Ejecute
        ./configure --help para obtener una lista de opciones disponibles.  En el ejemplo
        se realiza un simple configure con soporte para Apache 2 y MySQL. 
       </para>
       
       <para>
        Si se compila Apache a partir de los fuentes, tal como se describe anteriormente, el siguiente ejemplo
        coincidirá con la trayectoria para apxs, pero si se ha instalado Apache de alguna otra manera, será
        necesario ajustar la trayectoria a apxs apropiadamente. Nótese que algunas distribuciones pueden renombrar
        apxs cómo apxs2.
       </para>
       <informalexample>
        <screen>
<![CDATA[
cd ../php-NN
./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql
make
make install
]]>
      </screen>
  </informalexample>
  
  <para>
   Si se decide a cambiar las opciones de configuración después de la instalación,
   se deben volver a ejecutar los pasos configure, make, y make install. 
   Solamente se necesita
   reiniciar apache para que el nuevo módulo tenga efecto. Una recompilación de
   Apache no es necesaria.
  </para>
  
  <para>
   Nótese que a menos que se indique lo contrario, 'make install' también instalará PEAR,
   varias herramientas de PHP tales como phpize, instalará la interfaz de línea de comando (CLI) de PHP, y más.
  </para>
  
      </listitem>
      
      <listitem>
       <para>
        Configurar php.ini 
       </para>
       
       <informalexample>
        <screen>
<![CDATA[
cp php.ini-development /usr/local/lib/php.ini
]]>
      </screen>
   </informalexample>
   
   <para>
    Se puede editar el fichero .ini para fijar las opciones de PHP.  Si se prefiere tener
     php.ini en otra ubicación, utilice --with-config-file-path=/alguna/trayectoria en el
     paso 5.
   </para>
   
   <para>
    Si en vez de eso se elige php.ini-production, asegúrese de leer la lista
     de cambios al interior, ya que afectan como se comporta PHP.
   </para>
   
   </listitem>
      
   <listitem>

 <para>
  Edítese httpd.conf para cargar el módulo PHP.  La trayectoria a la derecha
   de la sentencia LoadModule debe apuntar a la trayectoria  del módulo PHP
   en el sistema.  El make install anterior podría ya haber agregado
   esto automáticamente, pero asegúrese de revisar.
</para>
       
      <informalexample>
       <para>
        Para PHP 7:
       </para>
       <programlisting role="apache-conf">
<![CDATA[
LoadModule php7_module modules/libphp7.so
]]>
       </programlisting>
     </informalexample>

       <informalexample>
        <para>
         Para PHP 5:
        </para>
        <programlisting role="apache-conf">
<![CDATA[
LoadModule php5_module modules/libphp5.so
]]>
       </programlisting>
     </informalexample>
     
      </listitem>
      
      <listitem>
       
       <para>
        Indicar a Apache que procese ciertas extensiones como PHP.  Por ejemplo, hágase que
        Apache procese ficheros .php como PHP.  En vez de solamente utilizar la directiva de Apache
        AddType, se desea evitar subidas de ficheros potencialmente peligrosas y que ficheros
        creados tal como exploit.php.jpg sean ejecutados como PHP.  Utilizando este
        ejemplo, se puede hacer que cualquier extensión o extensiones sean procesadas como PHP simplemente
        añadiéndolas.  Se agregará .php para demostrarlo.
       </para>
       
       
       <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
<FilesMatch \.php$>
    SetHandler application/x-httpd-php
</FilesMatch>
]]>
    </programlisting>
   </informalexample>
       
       <para>
        O, si se deseara permitir que ficheros .php, .php2, .php3, .php4, .php5, .php6, y
        .phtml fuesen ejecutados como PHP, pero nada más, se utilizaría esto:
       </para>
       
       <informalexample>
        <programlisting role="apache-conf">
<![CDATA[
<FilesMatch "\.ph(p[2-1]?|tml)$">
    SetHandler application/x-httpd-php
</FilesMatch>
]]>
       </programlisting>
       </informalexample>
       
       <para>
        Y para permitir que ficheros .phps sean manejados por el filtro de fuentes de php, y 
        desplegado como código fuente con sintaxis resaltada, se utiliza esto:
       </para>
       
       <informalexample>
        <programlisting role="apache-conf">
<![CDATA[
<FilesMatch "\.phps$">
    SetHandler application/x-httpd-php-source
</FilesMatch>
]]>
       </programlisting>
       </informalexample>
       
       <para>
        mod_rewrite puede ser utilizado para permitir que cualquier fichero .php arbitrario sea desplegado
        como código fuente con sintaxis resaltada, sin tener que renombrarlo o copiarlo
        a un fichero .phps:
       </para>
       
       <informalexample>
        <programlisting role="apache-conf">
<![CDATA[
RewriteEngine On
RewriteRule (.*\.php)s$ $1 [H=application/x-httpd-php-source]
]]>
       </programlisting>
       </informalexample>
       
       <para>
        El filtro de código fuente php no debe habilitarse en sistemas de producción, donde
        podría exponer información confidencial o de alguna otra manera sensible incluida en
        código fuente.
       </para>
       
      </listitem>
      
      <listitem>
       <para>
        Utilícese el procedimiento normal para iniciar el servidor Apache, por ej.:
       </para>
       
       <informalexample>
        <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl start
]]>
    </screen>
     </informalexample>
     
     <para>O</para>
     
     <informalexample>
      <screen>
<![CDATA[
service httpd restart
]]>
    </screen>
     </informalexample>
     
      </listitem>
    </orderedlist>
    
    <para>
     Siguiendo los pasos anteriores se tendrá corriendo un servidor web Apache2 con
     soporte para PHP como un módulo <literal>SAPI</literal>.  Por supuesto existen
     muchas opciones más de configuración disponibles para Apache y PHP.  Para más
     información teclee <command>./configure --help</command> en el árbol de fuentes
     correspondiente.
    </para>
    <para>
     Apache se puede compilar con soporte multihilos seleccionando el
     <filename>worker</filename> MPM, en vez del
     <filename>prefork</filename> MPM standard, cuando Apache se compila. Esto se realiza
     agregando la siguiente opción al argumento pasado a ./configure, en el
     paso 3 anterior:
    </para>
    <informalexample>
     <screen>
<![CDATA[
--with-mpm=worker
]]>
     </screen>
    </informalexample>
    <para>
     Esto no debe llevarse a cabo sin ser consciente de las consecuencias de
     esta decisión, y tener al menos un ligero entendimiento acerca de
     las implicaciones. La documentación de Apache
     al respecto de <link xlink:href="&url.apache2.mpm;">MPM-Modules</link>
     discute los MPM en forma mucho más detallada.
    </para>
    <note>
     <para>
      Las <link linkend="faq.installation.apache.multiviews">Preguntas frecuentes
      de Apache MultiViews</link> discute acerca del uso de multiviews con PHP.
     </para>
    </note>
    <note>
     <para>
      Para compilar una versión multihilo de Apache, el sistema destino debe soportar hilos.
      En este caso, PHP también debe compilarse con la opción Zend Thread Safety (ZTS)
      experimental. Bajo esta configuración, no todas las extensiones se encontrarán disponibles.
      La configuración recomendada es compilar Apache con el MPM-module 
      <filename>prefork</filename> por omisión.
     </para>
    </note>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:0
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=0 si
vim: et tw=0 syn=sgml
vi: ts=1 sw=1
-->
