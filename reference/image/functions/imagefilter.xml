<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9960a09a5705102bf4dd0ce63e03d9ec716d0015 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.imagefilter" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagefilter</refname>
  <refpurpose>Aplica un filtro a una imagen</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagefilter</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam><type>int</type><parameter>filter</parameter></methodparam>
   <methodparam rep="repeat"><type class="union"><type>array</type><type>int</type><type>float</type><type>bool</type></type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
  <function>imagefilter</function> aplica el filtro dado
   <parameter>filter</parameter> sobre la <parameter>image</parameter>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>filter</parameter></term>
     <listitem>
      <para>
       <parameter>filter</parameter> puede ser uno de los siguientes:
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_NEGATE</constant> : Invierte todos los colores de
          la imagen.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_GRAYSCALE</constant> : Convierte la imagen a
          niveles de gris cambiando las componentes roja, verde y azul a su
          suma ponderada utilizando los mismos coeficientes que el cálculo luma REC.601 (Y').
          Las componentes alfa se conservan. Para imágenes de paleta, el
          resultado puede ser diferente debido a las limitaciones de la paleta.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_BRIGHTNESS</constant> : Modifica el brillo
          de la imagen. Utilice <parameter>args</parameter> para definir el nivel de
          brillo. El rango de brillo está entre -255 y 255.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_CONTRAST</constant> : Modifica el contraste de
          la imagen. Utilice <parameter>args</parameter> para definir el nivel de
          contraste.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant> : similar a
          <constant>IMG_FILTER_GRAYSCALE</constant>, excepto que es posible especificar el
          color. Utilice <parameter>args</parameter>, <parameter>arg2</parameter> y
          <parameter>arg3</parameter> en forma de
          <parameter>red</parameter>, <parameter>green</parameter>,
          <parameter>blue</parameter> y <parameter>arg4</parameter> para el canal
          <parameter>alpha</parameter>. El rango de cada color está entre 0 y 255.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_EDGEDETECT</constant> : Utiliza la detección de bordes para
          resaltar los bordes de la imagen.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_EMBOSS</constant> : Permite embosar la imagen.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_GAUSSIAN_BLUR</constant> : Desenfoca la imagen utilizando el
          método gaussiano.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SELECTIVE_BLUR</constant> : Desenfoca la imagen.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_MEAN_REMOVAL</constant> : Utiliza la supresión de la media
          para obtener un efecto "croquis".
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SMOOTH</constant> : Hace la imagen más suave.
          Utilice <parameter>args</parameter> para definir el nivel de suavizado.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant> : Aplica un efecto de pixeles a
          la imagen, utilice <parameter>args</parameter> para definir el tamaño del bloque
          y <parameter>arg2</parameter> para definir el modo de efecto de pixeles.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant> : Aplica un efecto de dispersión
          a la imagen, utilice <parameter>args</parameter> y
          <parameter>arg2</parameter> para definir la intensidad del efecto y
          <parameter>arg3</parameter> para aplicar el efecto solo
          sobre ciertos colores de píxeles.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_BRIGHTNESS</constant> : Nivel de brillo.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_CONTRAST</constant> : Nivel de contraste.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant> : &gd.value.red;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SMOOTH</constant> : Nivel de suavizado.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant> : Tamaño del bloque en píxeles.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant> : Nivel de sustracción del efecto.
          No debe ser superior o igual al nivel de adición definido con
          <parameter>arg2</parameter>.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg2</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant> : &gd.value.green;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant> : Uso o no del efecto de pixeles
          avanzado (el valor por omisión es &false;).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant> : Nivel de adición del efecto.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg3</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant> : &gd.value.blue;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant> : Array opcional de valores de color indexados
          para aplicar el efecto.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg4</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant> canal Alpha, un valor
          entre 0 y 127. 0 indica opacidad total mientras que 127 indica transparencia total.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simpara>
   Genera un <classname>ValueError</classname>
   si <parameter>sub</parameter> o <parameter>plus</parameter> provoca un desbordamiento o
   un subdesbordamiento con el <constant>IMG_FILTER_SCATTER</constant> <parameter>filter</parameter>.
  </simpara>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.4.0</entry>
       <entry>
        Genera ahora un <classname>ValueError</classname>
        si <parameter>sub</parameter> o <parameter>plus</parameter> provoca un desbordamiento o
        un subdesbordamiento con el <constant>IMG_FILTER_SCATTER</constant> <parameter>filter</parameter>.
       </entry>
      </row>
      &gd.changelog.image-param;
      <row>
       <entry>7.4.0</entry>
       <entry>
        Se añadió el soporte para la dispersión (<constant>IMG_FILTER_SCATTER</constant>).
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de niveles de gris con <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('dave.png');

if($im && imagefilter($im, IMG_FILTER_GRAYSCALE))
{
    echo 'Imagen convertida a escala de grises.';

    imagepng($im, 'dave.png');
}
else
{
    echo 'Conversión a escala de grises fallida.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo de brillo con <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('sean.png');

if($im && imagefilter($im, IMG_FILTER_BRIGHTNESS, 20))
{
    echo 'Brillo de la imagen cambiado.';

    imagepng($im, 'sean.png');
}
else
{
    echo 'Cambio de brillo fallido.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo de colorización con <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('philip.png');

/* R, G, B, así que 0, 255, 0 es verde */
if($im && imagefilter($im, IMG_FILTER_COLORIZE, 0, 255, 0))
{
    echo 'Imagen teñida de verde con éxito.';

    imagepng($im, 'philip.png');
}
else
{
    echo 'Teñido de verde fallido.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo de negativo con <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Define la función negate para que sea portable para
// versiones de php sin imagefilter()
function negate($im)
{
    if(function_exists('imagefilter'))
    {
        return imagefilter($im, IMG_FILTER_NEGATE);
    }

    for($x = 0; $x < imagesx($im); ++$x)
    {
        for($y = 0; $y < imagesy($im); ++$y)
        {
            $index = imagecolorat($im, $x, $y);
            $rgb = imagecolorsforindex($index);
            $color = imagecolorallocate($im, 255 - $rgb['red'], 255 - $rgb['green'], 255 - $rgb['blue']);

            imagesetpixel($im, $x, $y, $color);
        }
    }

    return(true);
}

$im = imagecreatefromjpeg('kalle.jpg');

if($im && negate($im))
{
    echo 'Imagen convertida a colores negativos con éxito.';

    imagejpeg($im, 'kalle.jpg', 100);
}
else
{
    echo 'Conversión a colores negativos fallida.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo de pixeles con <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Carga el logo PHP, debemos crear dos instancias
// para ver las diferencias
$logo1 = imagecreatefrompng('./php.png');
$logo2 = imagecreatefrompng('./php.png');

// Creación de la instancia de imagen sobre la cual queremos
// ver las diferencias
$output = imagecreatetruecolor(imagesx($logo1) * 2, imagesy($logo1));

// Aplica el efecto de pixeles a cada instancia con un
// tamaño de bloque de 3
imagefilter($logo1, IMG_FILTER_PIXELATE, 3);
imagefilter($logo2, IMG_FILTER_PIXELATE, 3, true);

// Fusiona las diferencias sobre la imagen de salida
imagecopy($output, $logo1, 0, 0, 0, 0, imagesx($logo1) - 1, imagesy($logo1) - 1);
imagecopy($output, $logo2, imagesx($logo2), 0, 0, 0, imagesx($logo2) - 1, imagesy($logo2) - 1);

// Muestra las diferencias
header('Content-Type: image/png');
imagepng($output);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Salida del ejemplo de pixeles con imagefilter</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagefilterpixelate.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo de dispersión con <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Carga la imagen
$logo = imagecreatefrompng('./php.png');

// Aplica un efecto de dispersión muy suave a la imagen
imagefilter($logo, IMG_FILTER_SCATTER, 3, 5);

// Muestra la imagen con el efecto de dispersión
header('Content-Type: image/png');
imagepng($logo);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Salida del ejemplo de dispersión con imagefilter</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/scatter.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    El resultado de <constant>IMG_FILTER_SCATTER</constant> siempre es aleatorio.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imageconvolution</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
