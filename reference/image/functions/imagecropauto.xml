<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9960a09a5705102bf4dd0ce63e03d9ec716d0015 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.imagecropauto" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagecropauto</refname>
  <refpurpose>Recorta una imagen automáticamente utilizando uno de los modos disponibles</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>GdImage</type><type>false</type></type><methodname>imagecropauto</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>IMG_CROP_DEFAULT</constant></initializer></methodparam>
   <methodparam choice="opt"><type>float</type><parameter>threshold</parameter><initializer>0.5</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>color</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Recorta automáticamente una imagen según el <parameter>mode</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   &gd.image.description;
   <varlistentry>
    <term><parameter>mode</parameter></term>
    <listitem>
     <para>
      Una constante entre:
     </para>
     <variablelist>
      <varlistentry>
       <term><constant>IMG_CROP_DEFAULT</constant></term>
       <listitem>
        <simpara>
         Idéntico a <constant>IMG_CROP_TRANSPARENT</constant>.
         Anterior a PHP 7.4.0, la biblioteca libgd integrada utilizaba
         <constant>IMG_CROP_SIDES</constant> como solución de respaldo,
         si la imagen no tenía color de transparencia.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_TRANSPARENT</constant></term>
       <listitem>
        <simpara>
         Recorta el fondo transparente.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_BLACK</constant></term>
       <listitem>
        <simpara>
         Recorta el fondo negro.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_WHITE</constant></term>
       <listitem>
        <simpara>
         Recorta el fondo blanco.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_SIDES</constant></term>
       <listitem>
        <simpara>
         Utiliza las 4 esquinas de la imagen para intentar detectar el fondo
         a recortar.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>IMG_CROP_THRESHOLD</constant></term>
       <listitem>
        <simpara>
         Recorta la imagen utilizando el umbral <parameter>threshold</parameter> y
         <parameter>color</parameter>.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>

    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>threshold</parameter></term>
    <listitem>
     <para>
      Especifica la tolerancia en porcentaje a utilizar durante la comparación de
      la color de la imagen y la color a recortar. El método utilizado para
      calcular la diferencia de color se basa en la distancia de colores
      en el cubo RVB(a).
     </para>
     <para>
      Utilizado únicamente en modo <constant>IMG_CROP_THRESHOLD</constant>.
     </para>
     <note>
      <simpara>
       Anterior a PHP 7.4.0, la biblioteca libgd integrada utilizaba un algoritmo
       algo diferente, por lo que el mismo <parameter>threshold</parameter> producía
       resultados diferentes para libgd sistema e integrado.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>color</parameter></term>
    <listitem>
     <para>
      Puede ser un valor de color RVB o un índice de paleta.
     </para>
     <para>
      Utilizado únicamente en modo <constant>IMG_CROP_THRESHOLD</constant>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el objeto de la imagen recortada en caso de éxito&return.falseforfailure;.
   &false; también será devuelto si toda la imagen ha sido recortada.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &gd.changelog.image-param;
     <row>
      <entry>8.0.0</entry>
      <entry>
       En caso de éxito, esta función devuelve ahora una instancia de
       <classname>GDImage</classname>; anteriormente,
       se devolvía un <type>resource</type>.
      </entry>
     </row>
     <row>
      <entry>7.4.0</entry>
      <entry>
       El comportamiento de imagecropauto de la biblioteca libgd integrada ha sido
       sincronizado con la de libgd sistema: <constant>IMG_CROP_DEFAULT</constant>
       ya no utiliza <constant>IMG_CROP_SIDES</constant> como solución de respaldo y
       la tolerancia de recorte utiliza ahora el mismo algoritmo que libgd sistema.
      </entry>
     </row>
     <row>
      <entry>7.4.0</entry>
      <entry>
       El valor por omisión de <parameter>mode</parameter> ha sido modificado a
       <constant>IMG_CROP_AUTO</constant>. Anteriormente, el valor por omisión era
       <literal>-1</literal> que corresponde a <constant>IMG_CROP_DEFAULT</constant>,
       pero pasar <literal>-1</literal> está ahora obsoleto.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Recorte automático correcto</title>
    <para>
     Como se indica en la sección valor de retorno, <function>imagecropauto</function>
     devuelve &false; si toda la imagen ha sido recortada. En este ejemplo, tenemos
     un objeto de imagen <literal>$im</literal> que solo debería ser
     automáticamente recortado si hay algo que recortar; de lo contrario,
     se desea conservar la imagen original.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$cropped = imagecropauto($im, IMG_CROP_DEFAULT);
if ($cropped !== false) { // Si se ha devuelto un nuevo objeto de imagen
    $im = $cropped;       // y asigna la imagen recortada a $im
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagecrop</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
