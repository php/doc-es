<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: da55bd31bced1b766a553d3a3d3f560f046ce48e Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<reference xml:id="class.worker" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>La clase Worker</title>
 <titleabbrev>Worker</titleabbrev>

 <partintro>

  <!-- {{{ Worker intro -->
  <section xml:id="worker.intro">
   &reftitle.intro;
   <para>
    Los Threads Worker tienen un contexto persistente, por lo tanto,
    pueden ser utilizados mediante Threads en la mayoría de los casos.
   </para>
   <para>
    Cuando un Worker es iniciado, el método <methodname>run</methodname> será
    ejecutado, pero el <classname>Thread</classname> no
    se detendrá hasta que una de las siguientes condiciones se cumpla:
   </para>
   <itemizedlist>
    <listitem>
     <para>el Worker está fuera de alcance (no hay referencias restantes);</para>
    </listitem>
    <listitem>
     <para>el desarrollador llama a <methodname>shutdown</methodname>;</para>
    </listitem>
    <listitem>
     <para>el script muere.</para>
    </listitem>
   </itemizedlist>
   <para>
    Esto significa que el desarrollador puede reutilizar el contexto durante
    toda la ejecución; colocar objetos en la pila del
    <classname>Worker</classname> hará que el <classname>Worker</classname>
    ejecute el método <methodname>run</methodname> sobre los objetos apilados.
   </para>
  </section>
  <!-- }}} -->

  <section xml:id="worker.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Worker</classname></ooclass>

    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Worker</classname>
     </ooclass>

     <ooclass>
      <modifier>extends</modifier>
      <classname>Thread</classname>
     </ooclass>

     <oointerface>
      <interfacename>Traversable</interfacename>
     </oointerface>

     <oointerface>
      <interfacename>Countable</interfacename>
     </oointerface>

     <oointerface>
      <interfacename>ArrayAccess</interfacename>
     </oointerface>
    </classsynopsisinfo>
    <!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.worker')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />

    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.thread')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />

   </classsynopsis>
   <!-- }}} -->

  </section>

 </partintro>

 &reference.pthreads.entities.worker;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
