<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 61374bbe228e8e9c55a24aba59a1e2bb2a871148 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="sqlite3.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SQLite3::__construct</refname>
  <refpurpose>
   Instancia un objeto SQLite3 y abre la base de datos SQLite 3
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="SQLite3">
   <modifier>public</modifier> <methodname>SQLite3::__construct</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>encryptionKey</parameter><initializer>""</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Inicializa un objeto SQLite3 y abre una conexión a la base de datos
   SQLite 3. Si el cifrado ha sido incluido durante la compilación, entonces esta
   función intentará utilizar la clave correspondiente.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Ruta hacia la base de datos SQLite, o <literal>:memory:</literal> para utilizar
       la base de datos que se encuentra en la memoria RAM.
       Si <parameter>filename</parameter> es una cadena vacía, se creará una base de
       datos temporal privada en el disco. Esta base de datos
       privada será automáticamente eliminada tan pronto como la conexión de la base de
       datos sea cerrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Bandera opcional utilizada para determinar la manera de apertura de la
       base de datos SQLite. Por omisión, la apertura se efectúa utilizando
       <literal>SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</literal>.
       <itemizedlist>
        <listitem>
         <para>
          <constant>SQLITE3_OPEN_READONLY</constant> : Abre la base de datos
          en modo solo lectura.
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_OPEN_READWRITE</constant> : Abre la base de datos
          en modo lectura y escritura.
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_OPEN_CREATE</constant> : Crea la base de datos si
          no existe.
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>encryptionKey</parameter></term>
     <listitem>
      <para>
       Una clave de cifrado opcional, a utilizar durante el cifrado/descifrado
       de la base de datos SQLite. Si el módulo SQLite no está instalado,
       este parámetro no tendrá ningún efecto.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una <classname>Exception</classname> en caso de error.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.0.10</entry>
      <entry>
       El <parameter>filename</parameter> puede ahora estar vacío para utilizar una base de datos privada, temporal en disco.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>SQLite3::__construct</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$db = new SQLite3('mysqlitedb.db');

$db->exec('CREATE TABLE foo (bar TEXT)');
$db->exec("INSERT INTO foo (bar) VALUES ('This is a test')");

$result = $db->query('SELECT bar FROM foo');
var_dump($result->fetchArray());
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
