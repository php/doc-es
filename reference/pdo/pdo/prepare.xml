<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 7ed327e1437810b073a0d4fb0e862717558ce608 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdo.prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::prepare</refname>
  <refpurpose>
   Prepara una sentencia para su ejecución y devuelve un objeto sentencia
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>PDOStatement</type><methodname>PDO::prepare</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>driver_options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>

  <para>
   Prepara una sentencia SQL para ser ejecutada por el método
   <function>PDOStatement::execute</function>. La sentencia SQL puede
   contener cero o más marcadores de parámetros con nombre (:name) o signos de interrogación (?)
   por los cuales los valores reales serán sustituidos cuando la sentencia sea ejecutada.
   No se pueden usar marcadores de parámetros con nombre y signos de interrogación en
   la misma sentencia SQL; se debe elegir uno de los dos estilos de parámetros.
   Se deben usar estos parámetros para sustituir cualquier dato de usuario, y no usarlos
   directamente en la consulta.
  </para>
  <para>
   Se debe incluir un único marcador de parámetro para cada valor que se desee pasar
   a la sentencia cuando se llame a <function>PDOStatement::execute</function>.
   No se puede usar un marcador de parámetro con nombre con el mismo nombre más de una vez en una
   sentencia preparada, a menos que el modo de emulación esté activado.
  </para>
  <note>
   <para>
    Los marcadores de parámetros solamente pueden representar un literal de datos completo.
    No se pueden vincular usando parámetros una parte del literal, ni una palabra clave, ni un
    identificador, ni ninguna parte arbitraria de una consulta. Por ejemplo, no se puede vincular valores
    múltiples a un único parámetro en la cláusula IN() de una sentencia SQL.
   </para>
  </note>
  <para>
   Llamar a <function>PDO::prepare</function> y a
   <function>PDOStatement::execute</function> para sentencias que serán
   ejecutadas en múltiples ocasiones con diferentes parámetros optimiza el
   rendimiento de la aplicación permitiendo al driver negociar en lado del
   cliente y/o servidor el almacenamiento en caché del plan de consulta y meta información,
   y ayuda a prevenir inyecciones SQL eliminando la necesidad de
   entrecomillar manualmente los parámetros.
  </para>
  <para>
   PDO emulará sentencias preparadas/parámetros de sustitución para drivers que
   no lo soporten nativamente, y puede reescribir el estilo de los parámetros de
   sustitución por una forma más apropiada, si el driver
   soporta un estilo pero no el otro.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       Debe ser una plantilla de sentencia SQL válida para el servidor de base de datos destino.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>driver_options</parameter></term>
     <listitem>
      <para>
       Este array guarda uno o más pares clave=&gt;valor para establecer
       el valor de los atributos del objeto PDOStatement que este método
       devuelve. Comúnmente se establece el valor <constant>PDO::ATTR_CURSOR</constant> a
       <constant>PDO::CURSOR_SCROLL</constant> para solicitar el cursor desplazable.
       Algunos drivers tienen opciones específicas que pueden ser establecidas
       en el momento de la preparación.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si el servidor de la base de datos prepara con éxito la sentencia,
   <function>PDO::prepare</function> devuelve un objeto <classname>PDOStatement</classname>.
   Si no es posible, <function>PDO::prepare</function> devuelve &false;
   o emite una excepción<classname>PDOException</classname> (dependiendo del <link
   linkend="pdo.error-handling">manejo de errores</link>).
  </para>
  <note>
   <para>
    Las sentencias preparadas emuladas no se comunican con el servidor de la base de datos
    con lo cual  <function>PDO::prepare</function> no comprueba la sentencia.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Prepara una sentencia SQL con parámetros de sustitución nombrados</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Ejecuta una sentencia preparada pasando un array de valores */
$sql = 'SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour';
$sth = $dbh->prepare($sql, array(PDO::ATTR_CURSOR => PDO::CURSOR_FWDONLY));
$sth->execute(array(':calories' => 150, ':colour' => 'red'));
$red = $sth->fetchAll();
$sth->execute(array(':calories' => 175, ':colour' => 'yellow'));
$yellow = $sth->fetchAll();
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Prepara una sentencia SQL con parámetros de signos de interrogación</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Ejecuta una sentencia preparada pasando un array de valores */
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$sth->execute(array(150, 'red'));
$red = $sth->fetchAll();
$sth->execute(array(175, 'yellow'));
$yellow = $sth->fetchAll();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::exec</function></member>
    <member><function>PDO::query</function></member>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
