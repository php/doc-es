<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 082ddc19f53e6e254010de1a1fbbe485ff744ec1 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdo.query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::query</refname>
  <refpurpose>
   Prepara y ejecuta una consulta SQL sin marcadores de sustitución
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>

  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>PDO::FETCH_COLUMN</initializer></methodparam>
   <methodparam><type>int</type><parameter>colno</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>PDO::FETCH_CLASS</initializer></methodparam>
   <methodparam><type>string</type><parameter>classname</parameter></methodparam>
   <methodparam><type>array</type><parameter>constructorArgs</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>PDO::FETCH_INTO</initializer></methodparam>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
  </methodsynopsis>

  <para>
   <methodname>PDO::query</methodname> prepara y ejecuta una consulta SQL
   en una sola llamada de función, retornando la consulta como
   objeto <classname>PDOStatement</classname>.
  </para>
  <para>
   Para una consulta que debe ejecutarse varias veces, se obtendrán
   mejores resultados si se prepara el objeto <classname>PDOStatement</classname> utilizando
   la función <methodname>PDO::prepare</methodname> y se ejecuta la consulta
   mediante múltiples llamadas a la función <methodname>PDOStatement::execute</methodname>.
  </para>
  <para>
   Si no se recuperan todos los datos del conjunto de resultados antes de ejecutar
   la siguiente llamada a <methodname>PDO::query</methodname>, la llamada puede fallar.
   Llamar a <methodname>PDOStatement::closeCursor</methodname> para liberar los
   recursos de la base de datos asociados al objeto <classname>PDOStatement</classname> antes de ejecutar
   la siguiente llamada a la función <methodname>PDO::query</methodname>.
  </para>
  <note>
   <para>
    Si <parameter>query</parameter> contiene marcadores de sustitución,
    la consulta debe prepararse y ejecutarse por separado utilizando las
    funciones <methodname>PDO::prepare</methodname> y <methodname>PDOStatement::execute</methodname>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>query</parameter></term>
      <listitem>
       <para>
        La consulta SQL a preparar y ejecutar.
       </para>
       <para>
        Si el SQL contiene marcadores de sustitución, <methodname>PDO::prepare</methodname> y
        <methodname>PDOStatement::execute</methodname> deben ser utilizados en su lugar.
        Alternativamente, el SQL puede ser preparado manualmente antes de llamar
        a <methodname>PDO::query</methodname>, con los datos correctamente formateados
        utilizando <methodname>PDO::quote</methodname> si el controlador lo soporta.
       </para>
      </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>fetchMode</parameter></term>
     <listitem>
      <para>
       El modo de recuperación por omisión para el
       <classname>PDOStatement</classname> retornado.
       Esto debe ser una de las constantes
       <link linkend="pdo.constants"><literal>PDO::FETCH_*</literal></link>.
      </para>
      <para>
       Si este argumento es pasado a la función, el resto de los argumentos serán
       tratados como si <methodname>PDOStatement::setFetchMode</methodname>
       hubiera sido llamado sobre el objeto de la consulta resultante.
       Los argumentos siguientes dependen del modo de recuperación
       seleccionado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna un objeto <classname>PDOStatement</classname> &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>SQL sin marcadores de sustitución puede ser ejecutado utilizando <methodname>PDO::query</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
$sql =  'SELECT name, color, calories FROM fruit ORDER BY name';
foreach  ($conn->query($sql) as $row) {
    print $row['name'] . "\t";
    print  $row['color'] . "\t";
    print $row['calories'] . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
apple   red     150
banana  yellow  250
kiwi    brown   75
lemon   yellow  25
orange  orange  300
pear    green   150
watermelon      pink    90
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::exec</methodname></member>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDOStatement::execute</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
