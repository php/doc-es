<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 661e6858acade9f5a08fc8f9c07b605f42f4a700 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdo.rollback" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::rollBack</refname>
  <refpurpose>
   Anula una transacción
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type>bool</type><methodname>PDO::rollBack</methodname>
   <void/>
  </methodsynopsis>

  <para>
   Anula la transacción actual, iniciada por la función
   <methodname>PDO::beginTransaction</methodname>.
  </para>
  <para>
   Si la base de datos está en modo autocommit, esta función
   restaurará el modo autocommit después de la anulación de la transacción.
  </para>
  <para>
   Algunas bases de datos, incluyendo MySQL, ejecutarán automáticamente un COMMIT
   cuando se ejecute una consulta de definición de lenguaje de base de datos (DDL) como
   DROP TABLE o CREATE TABLE en una transacción. Este COMMIT implícito impedirá anular
   cualquier otra modificación realizada en esta transacción.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Se lanzará una excepción <classname>PDOException</classname> si no hay
   ninguna transacción activa.
  </para>
  &pdo.errors.exception-not-errmode;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Anulación de una transacción</title>
    <para>
     El siguiente ejemplo comienza una transacción y ejecuta dos consultas
     que modifican la base de datos antes de anular las modificaciones. En MySQL,
     sin embargo, la consulta DROP TABLE validará automáticamente la transacción,
     por lo que ninguna de las modificaciones de la transacción será anulada.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Inicio de una transacción, desactivación del modo autocommit */
$dbh->beginTransaction();

/* Modifica el esquema de la base de datos así como los datos */
$sth = $dbh->exec("DROP TABLE fruit");
$sth = $dbh->exec("UPDATE dessert
    SET name = 'hamburger'");

/* Se detecta un error y se anulan las modificaciones */
$dbh->rollBack();

/* La conexión a la base de datos vuelve al modo autocommit */
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::beginTransaction</methodname></member>
    <member><methodname>PDO::commit</methodname></member>
    <member><link linkend="pdo.transactions">Transacciones y auto-commit</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
