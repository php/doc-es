<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a8863b0123dc5348c91e67198b995222878a7e65 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<appendix xml:id="pdo.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry xml:id="pdo.constants.param-bool">
   <term>
    <constant>PDO::PARAM_BOOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa el tipo de datos booleano.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-null">
   <term>
    <constant>PDO::PARAM_NULL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa el tipo de datos NULL SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-int">
   <term>
    <constant>PDO::PARAM_INT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa el tipo de datos INTEGER SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str">
   <term>
    <constant>PDO::PARAM_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa los tipos de datos CHAR, VARCHAR o los otros tipos de datos
     en forma de string SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-natl">
   <term>
    <constant>PDO::PARAM_STR_NATL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indicador para designar un string que utiliza el juego de caracteres nacional.
    </simpara>
    <simpara>
     &php.version.added; 7.2.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-char">
   <term>
    <constant>PDO::PARAM_STR_CHAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indicador para designar un string que utiliza el juego de caracteres normal.
    </simpara>
    <simpara>
     &php.version.added; 7.2.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-lob">
   <term>
    <constant>PDO::PARAM_LOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa el tipo de datos "objeto grande" SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-stmt">
   <term>
    <constant>PDO::PARAM_STMT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa un tipo de juego de resultados. Actualmente no es soportado
     por todos los controladores.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-input-output">
   <term>
    <constant>PDO::PARAM_INPUT_OUTPUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el argumento es un argumento INOUT para un
     procedimiento almacenado. Debe utilizarse el operador OR con
     un tipo de datos explícito PDO::PARAM_*.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-default">
   <term>
    <constant>PDO::FETCH_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que debe utilizarse el método de recuperación por defecto.
     Disponible a partir de PHP 8.0.7.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-lazy">
   <term>
    <constant>PDO::FETCH_LAZY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de recuperación debe devolver cada línea como
     un objeto con los nombres de propiedades correspondientes a los nombres de columnas devueltas en el juego de resultados.
     <constant>PDO::FETCH_LAZY</constant> devuelve un objeto <classname>PDORow</classname>
     que crea los nombres de propiedad del objeto a medida que se acceden.
     No es válido con <methodname>PDOStatement::fetchAll</methodname>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-assoc">
   <term>
    <constant>PDO::FETCH_ASSOC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de recuperación debe devolver cada línea en
     un array indexado por los nombres de las columnas como se devuelven
     en el juego de resultados correspondiente. Si el juego de resultados contiene
     múltiples columnas con el mismo nombre,
     <constant>PDO::FETCH_ASSOC</constant> devuelve un solo valor
     por nombre de columna.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-named">
   <term>
    <constant>PDO::FETCH_NAMED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de recuperación debe devolver cada línea en
     un array indexado por los nombres de las columnas como se devuelven
     en el juego de resultados correspondiente. Si el juego de resultados contiene
     múltiples columnas con el mismo nombre,
     <constant>PDO::FETCH_NAMED</constant> devuelve un
     array de valores por nombre de columna.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-num">
   <term>
    <constant>PDO::FETCH_NUM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de recuperación debe devolver cada línea en
     un array indexado por el número de las columnas como se devuelven
     en el juego de resultados correspondiente, comenzando en 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-both">
   <term>
    <constant>PDO::FETCH_BOTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de recuperación debe devolver cada línea en
     un array indexado por los nombres de las columnas así como sus números,
     como se devuelven en el juego de resultados correspondiente, comenzando en 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-obj">
   <term>
    <constant>PDO::FETCH_OBJ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de recuperación debe devolver cada línea
     en un objeto con los nombres de propiedades correspondientes a los nombres
     de las columnas como se devuelven en el juego de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-bound">
   <term>
    <constant>PDO::FETCH_BOUND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de recuperación debe devolver &true; y asignar
     los valores de las columnas del juego de resultados a las variables PHP a las que
     están ligadas con el método
     <methodname>PDOStatement::bindParam</methodname> o el método
     <methodname>PDOStatement::bindColumn</methodname>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-column">
   <term>
    <constant>PDO::FETCH_COLUMN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de recuperación debe devolver únicamente una sola
     columna solicitada desde la próxima línea del juego de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-class">
   <term>
    <constant>PDO::FETCH_CLASS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de recuperación debe devolver una
     nueva instancia de la clase solicitada.
    </simpara>
    <note>
     <simpara>
      El objeto es inicializado mapeando las columnas del juego de resultados a
      las propiedades de la clase. Este proceso ocurre antes de que el constructor sea
      llamado, permitiendo la población de las propiedades, independientemente de su
      visibilidad o su marcador como <literal>readonly</literal>. Si
      una propiedad no existe en la clase, el método mágico
      <link linkend="object.set">__set()</link>
      será invocado si existe; de lo contrario, se creará una propiedad pública dinámica.
      Sin embargo, cuando <constant>PDO::FETCH_PROPS_LATE</constant>
      también está especificado, el constructor es llamado <emphasis>antes</emphasis> de que
      las propiedades sean pobladas.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-into">
   <term>
    <constant>PDO::FETCH_INTO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de recuperación debe actualizar una instancia existente
     de la clase solicitada, ligando las columnas a las propiedades nombradas en la clase.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-func">
   <term>
    <constant>PDO::FETCH_FUNC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Permite personalizar la forma en que se procesan los datos al vuelo
     (solo válido en el método <methodname>PDOStatement::fetchAll</methodname>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-group">
   <term>
    <constant>PDO::FETCH_GROUP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Agrupa el resultado por los valores. Normalmente combinado con
     <constant>PDO::FETCH_COLUMN</constant> o
     <constant>PDO::FETCH_KEY_PAIR</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-unique">
   <term>
    <constant>PDO::FETCH_UNIQUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Recupera únicamente los valores únicos.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.fetch-key-pair">
   <term>
    <constant>PDO::FETCH_KEY_PAIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Recupera un resultado de dos columnas en un array donde la primera columna
     es la clave, y la segunda columna es el valor.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.fetch-classtype">
   <term>
    <constant>PDO::FETCH_CLASSTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Determina el nombre de la clase desde el valor de la primera columna.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-serialize">
   <term>
    <constant>PDO::FETCH_SERIALIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Idéntico a <constant>PDO::FETCH_INTO</constant>,
     pero el objeto es proporcionado en forma de string serializado.
     El constructor de la clase nunca es llamado si esta bandera está definida.
     Obsoleto a partir de PHP 8.1.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-props-late">
   <term>
    <constant>PDO::FETCH_PROPS_LATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Llama al constructor antes de definir las propiedades.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-autocommit">
   <term>
    <constant>PDO::ATTR_AUTOCOMMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Si el valor es &false;, PDO intenta desactivar la validación automática
     cuando la conexión comienza una transacción.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-prefetch">
   <term>
    <constant>PDO::ATTR_PREFETCH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Definir el tamaño de la prérécuparación permite aumentar el rendimiento
     de su aplicación. No todas las combinaciones bases de datos / controladores soportan
     esta funcionalidad. Esto aumenta el rendimiento a costa del consumo de memoria.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-timeout">
   <term>
    <constant>PDO::ATTR_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Define el valor de espera en segundos para las comunicaciones
     con la base de datos.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-errmode">
   <term>
    <constant>PDO::ATTR_ERRMODE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Ver la sección sobre los <link linkend="pdo.error-handling">errores
     y la gestión de errores</link> para más información sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-version">
   <term>
    <constant>PDO::ATTR_SERVER_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Atributo de solo lectura; devuelve información sobre la versión de
     la base de datos a la que PDO está conectado.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-client-version">
   <term>
    <constant>PDO::ATTR_CLIENT_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Atributo de solo lectura; devuelve información sobre la versión
     de la biblioteca cliente utilizada por PDO.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-info">
   <term>
    <constant>PDO::ATTR_SERVER_INFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Atributo de solo lectura; devuelve algunas meta-informaciones
     sobre el servidor de base de datos al que PDO está conectado.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-connection-status">
   <term>
    <constant>PDO::ATTR_CONNECTION_STATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-case">
   <term>
    <constant>PDO::ATTR_CASE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Fuerza los nombres de las columnas en una casilla especificada por las constantes
     <literal>PDO::CASE_*</literal>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor-name">
   <term>
    <constant>PDO::ATTR_CURSOR_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Recupera o define el nombre a utilizar para un cursor. Muy útil al
     utilizar cursores desplazables y actualizaciones posicionadas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor">
   <term>
    <constant>PDO::ATTR_CURSOR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Selecciona el tipo de cursor. PDO actualmente soporta
     <constant>PDO::CURSOR_FWDONLY</constant> o
     <constant>PDO::CURSOR_SCROLL</constant>. Mantenga
     <constant>PDO::CURSOR_FWDONLY</constant> mientras sepa que necesita
     un cursor desplazable.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.attr-driver-name">
   <term>
    <constant>PDO::ATTR_DRIVER_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Devuelve el nombre del controlador.
    </simpara>
    <para>
     <example><title>Uso de <constant>PDO::ATTR_DRIVER_NAME</constant></title>
      <programlisting role="php">
<![CDATA[
<?php
if ($db->getAttribute(PDO::ATTR_DRIVER_NAME) == 'mysql') {
   echo "Uso de mysql; hacer algo específico de mysql aquí\n";
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-oracle-nulls">
   <term>
    <constant>PDO::ATTR_ORACLE_NULLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Convierte las cadenas vacías en valores NULL SQL en los datos recuperados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-persistent">
   <term>
    <constant>PDO::ATTR_PERSISTENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Solicita una conexión persistente, en lugar de crear una nueva conexión.
     Ver las <link linkend="pdo.connections">conexiones y el gestor de conexión</link>
     para más información sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-statement-class">
   <term>
    <constant>PDO::ATTR_STATEMENT_CLASS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Define el nombre de la clase bajo la cual los datos son devueltos.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-catalog-names">
   <term>
    <constant>PDO::ATTR_FETCH_CATALOG_NAMES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Añade el contenido del catálogo de nombres en cada nombre de columna devuelto
     en el juego de resultados. El catálogo de nombres y los nombres de columnas
     están separados por un punto (.). La soporte de este atributo no es hecho
     por todos los controladores; puede no estar disponible para su controlador.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-table-names">
   <term>
    <constant>PDO::ATTR_FETCH_TABLE_NAMES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Añade el contenido de la tabla de nombres en cada nombre de columna devuelto
     en el juego de resultados. La tabla de nombres y los nombres de columnas están
     separados por un punto (.). La soporte de este atributo no es hecho
     por todos los controladores; puede no estar disponible para su controlador.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-stringify-fetches">
   <term>
    <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Fuerza todas las valores recuperados (excepto &null;) a ser tratados como strings.
     Los valores &null; permanecen sin cambios, a menos que <constant>PDO::ATTR_ORACLE_NULLS</constant>
     esté definido en <constant>PDO::NULL_TO_STRING</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-max-column-len">
   <term>
    <constant>PDO::ATTR_MAX_COLUMN_LEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Define la longitud máxima del nombre de columna.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-fetch-mode">
   <term>
    <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-emulate-prepares">
   <term>
    <constant>PDO::ATTR_EMULATE_PREPARES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-str-param">
   <term>
    <constant>PDO::ATTR_DEFAULT_STR_PARAM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Define el tipo de argumento de string por defecto, esto puede ser <constant>PDO::PARAM_STR_NATL</constant>
     o <constant>PDO::PARAM_STR_CHAR</constant>.
    </simpara>
    <simpara>
     &php.version.added; 7.2.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-silent">
   <term>
    <constant>PDO::ERRMODE_SILENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     No envía error ni excepción si ocurre un error. El desarrollador
     debe verificar explícitamente los errores. Es el modo por defecto.
     Ver los <link linkend="pdo.error-handling">errores y la gestión de errores</link>
     para más información sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-warning">
   <term>
    <constant>PDO::ERRMODE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Envía un error de nivel <constant>E_WARNING</constant> si ocurre un error.
     Ver los <link linkend="pdo.error-handling">errores y la gestión de errores</link>
     para más información sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-exception">
   <term>
    <constant>PDO::ERRMODE_EXCEPTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Lanza una excepción <classname>PDOException</classname> si ocurre un error.
     Ver los <link linkend="pdo.error-handling">errores y la gestión de errores</link>
     para más información sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-natural">
   <term>
    <constant>PDO::CASE_NATURAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Deja los nombres de columnas como se devuelven por el controlador de base de datos.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-lower">
   <term>
    <constant>PDO::CASE_LOWER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Fuerza los nombres de columnas en minúsculas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-upper">
   <term>
    <constant>PDO::CASE_UPPER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Fuerza los nombres de columnas en mayúsculas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-natural">
   <term>
    <constant>PDO::NULL_NATURAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-empty-string">
   <term>
    <constant>PDO::NULL_EMPTY_STRING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-to-string">
   <term>
    <constant>PDO::NULL_TO_STRING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-next">
   <term>
    <constant>PDO::FETCH_ORI_NEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Recupera la próxima línea de un juego de resultados. Válido solo para los
     cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-prior">
   <term>
    <constant>PDO::FETCH_ORI_PRIOR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Recupera la línea anterior de un juego de resultados. Válido solo para los
     cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-first">
   <term>
    <constant>PDO::FETCH_ORI_FIRST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Recupera la primera línea de un juego de resultados. Válido solo para los
     cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-last">
   <term>
    <constant>PDO::FETCH_ORI_LAST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Recupera la última línea de un juego de resultados. Válido solo para los
     cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-abs">
   <term>
    <constant>PDO::FETCH_ORI_ABS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Recupera la línea solicitada por un número de línea de un juego de resultados.
     Válido solo para los cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-rel">
   <term>
    <constant>PDO::FETCH_ORI_REL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Recupera la línea solicitada por una posición relativa a la posición actual
     del cursor de un juego de resultados. Válido solo para los cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-fwdonly">
   <term>
    <constant>PDO::CURSOR_FWDONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Crea un objeto <classname>PDOStatement</classname> con un
     cursor solo de avance. Es la opción por defecto para
     el cursor, ya que es rápido y el acceso a los datos es común
     para los mascarones en PHP.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-scroll">
   <term>
    <constant>PDO::CURSOR_SCROLL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Crea un objeto <classname>PDOStatement</classname> con un
     cursor desplazable. Pase la constante <literal>PDO::FETCH_ORI_*</literal>
     para controlar las líneas recuperadas del juego de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.err-none">
   <term>
    <constant>PDO::ERR_NONE</constant>
    (<type>string</type>)
   </term>
   <listitem>
    <simpara>
     Corresponde a SQLSTATE '00000', lo que significa que la consulta SQL ha tenido éxito
     sin error ni advertencia. Esta constante es útil cuando se utiliza
     <methodname>PDO::errorCode</methodname> o
     <methodname>PDOStatement::errorCode</methodname> para determinar si ha ocurrido un error.
     Sin embargo, debe saber ya si es así examinando el código devuelto por el método que causó el error.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-alloc">
   <term>
    <constant>PDO::PARAM_EVT_ALLOC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Asigna un evento
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-free">
   <term>
    <constant>PDO::PARAM_EVT_FREE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Elimina un evento
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-pre">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_PRE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Siempre hacer un disparador antes de la ejecución de una consulta preparada.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-post">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Siempre realizar un disparador de subsecuencia antes
     de la ejecución de una consulta preparada.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-pre">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_PRE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Siempre realizar un disparador antes de recuperar un resultado
     de un juego de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-post">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Siempre realizar un disparador de subsecuencia antes de recuperar
     un resultado de un juego de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-normalize">
   <term>
    <constant>PDO::PARAM_EVT_NORMALIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Siempre realizar un disparador al registrar los argumentos ligados permitiendo al controlador normalizar el nombre de los argumentos.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.sqlite-deterministic">
   <term>
    <constant>PDO::SQLITE_DETERMINISTIC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
      Especifica que una función creada con <methodname>PDO::PDO::sqliteCreateFunction</methodname>
     es determinista, es decir, siempre devuelve el mismo resultado
     por las mismas entradas en una sola instrucción SQL. (&php.version.added; 7.1.4.)
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
