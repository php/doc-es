<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 14af302c9c0e561fa6f9cdd956268758ba9a89c5 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<!-- Generated by xml_proto.php v2.1. Found in /scripts directory of phpdoc. -->
<appendix xml:id="pdo.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <warning>
  <para>
   PDO utiliza constantes de clase desde PHP 5.1. Las versiones anteriores emplean constantes globales
   bajo la forma <constant>PDO_PARAM_BOOL</constant>.
  </para>
 </warning>
 <variablelist>
  <varlistentry xml:id="pdo.constants.param-bool">
   <term>
    <constant>PDO::PARAM_BOOL</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Representa un tipo de dato booleano.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.param-null">
   <term>
    <constant>PDO::PARAM_NULL</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Representa el tipo de dato NULL de SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-int">
   <term>
    <constant>PDO::PARAM_INT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Representa el tipo de dato INTEGER de SQL .
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str">
   <term>
    <constant>PDO::PARAM_STR</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Representa el tipo de dato CHAR, VARCHAR de SQL, u otro tipo de datos de cadena.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-natl">
   <term>
    <constant>PDO::PARAM_STR_NATL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <!-- Flag to denote a string uses the national character set. -->
    </simpara>
    <simpara>
     Disponible desde PHP 7.2.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-char">
   <term>
    <constant>PDO::PARAM_STR_CHAR</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <!-- Flag to denote a string uses the regular character set. -->
    </simpara>
    <simpara>
     Disponible desde PHP 7.2.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-lob">
   <term>
    <constant>PDO::PARAM_LOB</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Representa el tipo de dato de objeto grande (LOB) de SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-stmt">
   <term>
    <constant>PDO::PARAM_STMT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Representa un tipo de conjunto de registros. No está soportado actualmente por ningún controlador.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-input-output">
   <term>
    <constant>PDO::PARAM_INPUT_OUTPUT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el parámetro es de entrada/salida (INOUT) para un procedimiento
     almacenado. Se debe realizar un OR a nivel de bit con un tipo de datos
     PDO::PARAM_* explícito.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-lazy">
   <term>
    <constant>PDO::FETCH_LAZY</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de obtención debe devolver cada fila como un objeto con
     los nombres de las variables equivalentes a los nombres de las columnas devueltos en el
     conjunto de resultados. <constant>PDO::FETCH_LAZY</constant> crea los nombres de las variables del objeto a medida que se acceden a ellas.
     No es válida dentro de <function>PDOStatement::fetchAll</function>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-assoc">
   <term>
    <constant>PDO::FETCH_ASSOC</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de obtención debe devolver cada fila como un array indexado
     por los nombres de las columnas devueltos en el correspondiente conjunto de resultados.
     Si éste contiene varias columnas con el mismo nombre,
     <constant>PDO::FETCH_ASSOC</constant> devuelve
     un único valor por nombre de columna.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-named">
   <term>
    <constant>PDO::FETCH_NAMED</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de obtención debe devolver cada fila como un array indexado
     por los nombres de las columnas devueltos en el correspondiente conjunto de resultados.
     Si éste contiene varias columnas con el mismo nombre,
     <constant>PDO::FETCH_NAMED</constant> devuelve
     un array de valores por nombre de columna.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-num">
   <term>
    <constant>PDO::FETCH_NUM</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de obtención debe devolver cada fila como un array indexado
     por los números de columna devueltos en el correspondiente conjunto de resultados,
     comenzando por la columna 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-both">
   <term>
    <constant>PDO::FETCH_BOTH</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de obtención debe devolver cada fila como un array indexado
     tanto por los nombres como por los números de las columnas devueltos en el correspondiente
     conjunto de resultados, comenzando por la columna 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-obj">
   <term>
    <constant>PDO::FETCH_OBJ</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de obtención debe devolver cada fila como un objeto con
     los nombres de sus propiedades equivalentes a los nombres de las columnas devueltos
     en el conjunto de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-bound">
   <term>
    <constant>PDO::FETCH_BOUND</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de obtención debe devolver TRUE y asignar los valores de
     las columnas del conjunto de resultados a las variables de PHP a las cuales están
     vinculadas con los métodos <function>PDOStatement::bindParam</function> o
     <function>PDOStatement::bindColumn</function>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-column">
   <term>
    <constant>PDO::FETCH_COLUMN</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de obtención debe devolver una única columna solicitada
     de la siguiente fila del conjunto de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-class">
   <term>
    <constant>PDO::FETCH_CLASS</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de obtención debe devolver una nueva instancia de la clase
     solicitada, haciendo corresponder las columnas con los nombres de las propiedades de la clase.
    </simpara>
    <note>
     <simpara>
      El método mágico
      <link linkend="language.oop5.overloading.members"><methodname>__set</methodname></link>
      se invoca si la propiedad no existe en la clase solicitada.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-into">
   <term>
    <constant>PDO::FETCH_INTO</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que el método de obtencion debe actualizar una instancia existente de la clase
     solicitada, haciendo corresponder las columnas con los nombres de las propiedades de la clase.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-func">
   <term>
    <constant>PDO::FETCH_FUNC</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Permite personalizar completamente la forma en que los datos son tratados sobre la marcha
     (únicamente válida dentro de <function>PDOStatement::fetchAll</function>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-group">
   <term>
    <constant>PDO::FETCH_GROUP</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Grupo devuelto según valores. Usualmente combinada con
     <constant>PDO::FETCH_COLUMN</constant> o
     <constant>PDO::FETCH_KEY_PAIR</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-unique">
   <term>
    <constant>PDO::FETCH_UNIQUE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Obtener solamente los valores únicos.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.fetch-key-pair">
   <term>
    <constant>PDO::FETCH_KEY_PAIR</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Obtener un resultado de dos columnas como un array donde la primera columna es la clave y la segunda
     el valor. Disponible desde PHP 5.2.3.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.fetch-classtype">
   <term>
    <constant>PDO::FETCH_CLASSTYPE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Determinar el nombre de la clase desde el valor de la primera columna.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-serialize">
   <term>
    <constant>PDO::FETCH_SERIALIZE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Igual que <constant>PDO::FETCH_INTO</constant> salvo que el objeto es proporcionado como una cadena serializada.
     Disponible desde PHP 5.1.0. Desde PHP 5.3.0, nunca se llama al constructor de la clase si está
     establecido este indicador.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-props-late">
   <term>
    <constant>PDO::FETCH_PROPS_LATE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Llamar al contructor antes de establecer propiedades. Disponible desde PHP 5.2.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-autocommit">
   <term>
    <constant>PDO::ATTR_AUTOCOMMIT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Si este valor es &false;, PDO intenta desactivar la autoconsigna para que la
     conexión comience una transacción.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-prefetch">
   <term>
    <constant>PDO::ATTR_PREFETCH</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Establecer el tamaño de la precarga permite obtener un equilibrio entre rapidez y utilización
     de memoria para la aplicación. No todas las combinaciones de base de datos y controlador
     permiten establecer el tamaño de la precarga. Un valor más grande de precarga da como resultado
     un aumento del rendimiento a costa de un mayor uso de memoria.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-timeout">
   <term>
    <constant>PDO::ATTR_TIMEOUT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Establece el valor del tiempo de espera, en segundos, para las comunicaciones con la base de datos.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-errmode">
   <term>
    <constant>PDO::ATTR_ERRMODE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Véase la sección <link linkend="pdo.error-handling">Errores y su
     manejo</link> para obtener más información sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-version">
   <term>
    <constant>PDO::ATTR_SERVER_VERSION</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Este es un atributo de sólo lectura; devuelve información sobre la
     versión del servidor de bases de datos al que está conectado PDO.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-client-version">
   <term>
    <constant>PDO::ATTR_CLIENT_VERSION</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Este es un atributo de sólo lectura; devuelve información sobre la
     versión de las bibliotecas cliente que está usando el controlador PDO.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-info">
   <term>
    <constant>PDO::ATTR_SERVER_INFO</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Este es un atributo de sólo lectura; devuelve alguna metainformación sobre el
     servidor de bases de datos al que está conectado PDO.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-connection-status">
   <term>
    <constant>PDO::ATTR_CONNECTION_STATUS</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-case">
   <term>
    <constant>PDO::ATTR_CASE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Forzar a los nombres de las columnas a emplear las mayúsculas/minúsculas especificadas por
     las constantes <constant>PDO::CASE_*</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor-name">
   <term>
    <constant>PDO::ATTR_CURSOR_NAME</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Obtener o establecer el nombre del cursor a utilizar. Es más útil cuando se emplean
     cursores desplazables y actualizaciones posicionadas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor">
   <term>
    <constant>PDO::ATTR_CURSOR</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Selecciona el tipo de cursor. PDO actualmente admite
     <constant>PDO::CURSOR_FWDONLY</constant> y
     <constant>PDO::CURSOR_SCROLL</constant>. Cíñase a
     <constant>PDO::CURSOR_FWDONLY</constant> a menos que necesite un
     cursor desplazable.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.attr-driver-name">
   <term>
    <constant>PDO::ATTR_DRIVER_NAME</constant>
    (<type>string</type>)
   </term>
   <listitem>
    <simpara>
     Devuelve el nombre del controlador.
    </simpara>
    <para>
     <example><title>Uso de <constant>PDO::ATTR_DRIVER_NAME</constant></title>
      <programlisting role="php">
<![CDATA[
<?php
if ($bd->getAttribute(PDO::ATTR_DRIVER_NAME) == 'mysql') {
  echo "Ejecutándose sobre mysql; hacer algo específico de mysql aquí\n";
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.attr-oracle-nulls">
   <term>
    <constant>PDO::ATTR_ORACLE_NULLS</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Convertir string vacíos a valores NULL de SQL en la obtención de datos.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-persistent">
   <term>
    <constant>PDO::ATTR_PERSISTENT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Solicitar una conexión persistente, en vez de crear una nueva conexión.
     Véase <link linkend="pdo.connections">Conexiones y su
     administración</link> para obtener más información sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-statement-class">
   <term>
    <constant>PDO::ATTR_STATEMENT_CLASS</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-catalog-names">
   <term>
    <constant>PDO::ATTR_FETCH_CATALOG_NAMES</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Anteponer el nombre del catálogo contenedor a cada nombre de columna devuelto en el
     conjunto de resultados. El nombre del catálogo y el nombre de columna están separados por un
     carácter punto (.). El soporte de este atributo es a nivel del controlador; podría
     no estar admitido por el controlador que se esté utilizando.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-table-names">
   <term>
    <constant>PDO::ATTR_FETCH_TABLE_NAMES</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Anteponer el nombre de la tabla contenedora a cada nombre de columna devuelto en el
     conjunto de resultados. El nombre de la tabla y el nombre de columna están separados por un
     carácter punto (.). El soporte de este atributo es a nivel del controlador; podría
     no estar admitido por el controlador que se esté utilizando.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-stringify-fetches">
   <term>
    <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-max-column-len">
   <term>
    <constant>PDO::ATTR_MAX_COLUMN_LEN</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-fetch-mode">
   <term>
    <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Disponible desde PHP 5.2.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-emulate-prepares">
   <term>
    <constant>PDO::ATTR_EMULATE_PREPARES</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Disponible desde PHP 5.1.3.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-str-param">
   <term>
    <constant>PDO::ATTR_DEFAULT_STR_PARAM</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <!--Sets the default string parameter type, this can be one of <constant>PDO::PARAM_STR_NATL</constant>
     and <constant>PDO::PARAM_STR_CHAR</constant>.-->
    </simpara>
    <simpara>
     Disponible desde PHP 7.2.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-silent">
   <term>
    <constant>PDO::ERRMODE_SILENT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     No emitir ningún error o excepción si ocurrieran. El desarrollador es
     responsable de comprobar explícitamente los errores. Este es el modo predeterminado.
     Véase <link linkend="pdo.error-handling">Errores y su manejo</link>
     para obtener más información sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-warning">
   <term>
    <constant>PDO::ERRMODE_WARNING</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Emitir un mensaje <constant>E_WARNING</constant> de PHP si ocurre algún error.
     Véase <link linkend="pdo.error-handling">Errores y su manejo</link>
     para obtener más información sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-exception">
   <term>
    <constant>PDO::ERRMODE_EXCEPTION</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Lanzar una <classname>PDOException</classname> si ocurre algún error.
     Véase <link linkend="pdo.error-handling">Errores y su manejo</link>
     para obtener más información sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-natural">
   <term>
    <constant>PDO::CASE_NATURAL</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Dejar los nombres de las columnas tal como son devueltos por el controlador de la base de datos.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-lower">
   <term>
    <constant>PDO::CASE_LOWER</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Forzar los nombres de las columnas a minúsculas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-upper">
   <term>
    <constant>PDO::CASE_UPPER</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Forzar los nombres de las columnas a mayúsculas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-natural">
   <term>
    <constant>PDO::NULL_NATURAL</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-empty-string">
   <term>
    <constant>PDO::NULL_EMPTY_STRING</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-to-string">
   <term>
    <constant>PDO::NULL_TO_STRING</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-next">
   <term>
    <constant>PDO::FETCH_ORI_NEXT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Obtener la siguiente fila del conjunto de resultados. Únicamente válida para cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-prior">
   <term>
    <constant>PDO::FETCH_ORI_PRIOR</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Obtener la fila anterior del conjunto de resultados. Únicamente válida para cursores
     desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-first">
   <term>
    <constant>PDO::FETCH_ORI_FIRST</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Obtener la primera fila del conjunto de resultados. Únicamente válida para cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-last">
   <term>
    <constant>PDO::FETCH_ORI_LAST</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Obtener la última fila del conjunto de resultados. Únicamente válida para cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-abs">
   <term>
    <constant>PDO::FETCH_ORI_ABS</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Obtener la fila solicitada del conjunto de resultados mediante el número de fila.
     Únicamente válida para cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-rel">
   <term>
    <constant>PDO::FETCH_ORI_REL</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Obtener la fila solicitada del conjunto de resultados mediante la posición relativa
     de la posición actual del cursor. Únicamente válida para cursores desplazables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-fwdonly">
   <term>
    <constant>PDO::CURSOR_FWDONLY</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Crear un objeto <classname>PDOStatement</classname> con un cursor de sólo avance. Este es la
     elección del cursor predeterminada, ya que es el patrón de acceso a datos más rápido y común
     en PHP.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-scroll">
   <term>
    <constant>PDO::CURSOR_SCROLL</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Crear un objeto <classname>PDOStatement</classname> con un cursor desplazable. De deben pasar las
     constantes <constant>PDO::FETCH_ORI_*</constant> para controlar las filas obtenidas del conjunto de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.err-none">
   <term>
    <constant>PDO::ERR_NONE</constant>
    (<type>string</type>)
   </term>
   <listitem>
    <simpara>
     Corresponde al SQLSTATE '00000', el cual significa que la sentencia SQL fue
     ejecutada con éxito, sin errores ni advertencias. Esta constante sirve para
     la comprobación de <function>PDO::errorCode</function> o
     <function>PDOStatement::errorCode</function> para determinar si ha ocurrido
     algún error. En cualquier caso, normalmente se sabrá si este es el caso examinando
     el código devuelto por el método que provocó la condición de error.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-alloc">
   <term>
    <constant>PDO::PARAM_EVT_ALLOC</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Evento de asignación
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-free">
   <term>
    <constant>PDO::PARAM_EVT_FREE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Evento de desasigncación
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-pre">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_PRE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Evento provocado antes de la ejecución de una sentencia preparada.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-post">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_POST</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Evento provocado después de la ejecución de una sentencia preparada.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-pre">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_PRE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Evento provocado antes de la obtención de un resultado de un conjunto de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-post">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_POST</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Evento provocado después de la obtención de un resultado de un conjunto de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-normalize">
   <term>
    <constant>PDO::PARAM_EVT_NORMALIZE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Evento provocado durante el registro de un parámetro vinculado,
     permitiendo al controlador normalizar el nombre del parámetro.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
