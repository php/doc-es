<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 216c5dc1ef01b98d6ccafe51056e4df68e77cbf6 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdostatement.execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::execute</refname>
  <refpurpose>
   Ejecuta una consulta preparada
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDOStatement">
   <modifier>public</modifier> <type>bool</type><methodname>PDOStatement::execute</methodname>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>params</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ejecuta una <link linkend="pdo.prepared-statements">consulta preparada</link>.
   Si la consulta preparada incluye marcadores de posición, se puede:
   <itemizedlist>
    <listitem><para><methodname>PDOStatement::bindParam</methodname> y/o
     <methodname>PDOStatement::bindValue</methodname> debe ser llamado para vincular
     variables o valores (respectivamente) a los marcadores de parámetros.
     Las variables vinculadas pasan sus valores en entrada y reciben los
     valores de salida, si los hay, de sus respectivos marcadores de posición</para></listitem>
    <listitem>
     <para>o pasar un array de valores de parámetros, solo en entrada</para>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Un array de valores con tantos elementos como parámetros a asociar en la consulta SQL que será ejecutada.
       Todos los valores son tratados como constantes
       <constant>PDO::PARAM_STR</constant>.
      </para>
      <para>
       Los valores múltiples no pueden ser vinculados a un solo parámetro; por
       ejemplo, no está permitido vincular dos valores a un solo parámetro
       nombrado en una cláusula IN().
      </para>
      <para>
       Vincular más valores de los especificados no es posible; si hay
       más claves en <parameter>params</parameter> que en el
       código SQL utilizado para <methodname>PDO::prepare</methodname>, entonces la
       consulta preparada fallará y se generará un error.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejecuta una consulta preparada con variables y valores vinculados</title>
   <programlisting role="php">
<![CDATA[
<?php
/* Ejecuta una consulta preparada vinculando variables y valores */
$calories = 150;
$couleur = 'ver';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < :calories AND couleur LIKE :couleur');
$sth->bindParam('calories', $calories, PDO::PARAM_INT);
/* Los nombres también pueden ser prefijados con dos puntos ":" (opcional) */
$sth->bindValue(':colour', "%$colour%");
$sth->execute();
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Ejecuta una consulta preparada con un array de valores nombrados</title>
   <programlisting role="php">
<![CDATA[
<?php
/* Ejecuta una consulta preparada pasando un array de valores */
$calories = 150;
$couleur = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < :calories AND couleur = :couleur');
$sth->execute(array('calories' => $calories, 'colour' => $couleur));
/* Las claves del array también pueden ser prefijadas con dos puntos ":" (opcional) */
$sth->execute(array(':calories' => $calories, ':couleur' => $couleur));
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Ejecuta una consulta preparada con un array de valores posicionales</title>
   <programlisting role="php">
<![CDATA[
<?php
/* Ejecuta una consulta preparada pasando un array de valores */
$calories = 150;
$colour = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < ? AND couleur = ?');
$sth->execute(array($calories, $colour));
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Ejecuta una consulta preparada con variables vinculadas a un marcador de posición</title>
   <programlisting role="php">
<![CDATA[
<?php
/* Ejecuta una consulta preparada vinculando variables PHP */
$calories = 150;
$couleur = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < ? AND couleur = ?');
$sth->bindParam(1, $calories, PDO::PARAM_INT);
$sth->bindParam(2, $couleur, PDO::PARAM_STR, 12);
$sth->execute();
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Ejecuta una consulta preparada utilizando un array para las cláusulas IN</title>
   <programlisting role="php">
<![CDATA[
<?php
/* Ejecuta una consulta preparada utilizando un array de valores para las cláusulas IN */
$params = array(1, 21, 63, 171);
/* Crea una cadena para los marcadores */
$place_holders = '?' . str_repeat(', ?', count($params) - 1);

/*
    Este fragmento de código prepara la consulta con suficientes marcadores para cada valor
    del array $params. Los valores del array $params son luego vinculados a los marcadores
    de la consulta preparada cuando la consulta es ejecutada. Esto no es lo mismo
    que utilizar el método PDOStatement::bindParam() ya que este impone una referencia
    hacia los valores. El método PDOStatement::execute() solo vincula por valor.
*/
$sth = $dbh->prepare("SELECT id, name FROM contacts WHERE id IN ($place_holders)");
$sth->execute($params);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Algunos drivers requieren <link linkend="pdostatement.closecursor">cerrar
    el cursor</link> antes de ejecutar la siguiente consulta.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDOStatement::bindParam</methodname></member>
    <member><methodname>PDOStatement::fetch</methodname></member>
    <member><methodname>PDOStatement::fetchAll</methodname></member>
    <member><methodname>PDOStatement::fetchColumn</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
