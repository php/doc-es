<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 082ddc19f53e6e254010de1a1fbbe485ff744ec1 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdostatement.bindcolumn" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::bindColumn</refname>
  <refpurpose>
  Vincula una columna a una variable PHP
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDOStatement">
    <modifier>public</modifier> <type>bool</type><methodname>PDOStatement::bindColumn</methodname>
    <methodparam><type class="union"><type>string</type><type>int</type></type><parameter>column</parameter></methodparam>
    <methodparam><type>mixed</type><parameter role="reference">var</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>PDO::PARAM_STR</initializer></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>maxLength</parameter><initializer>0</initializer></methodparam>
    <methodparam choice="opt"><type>mixed</type><parameter>driverOptions</parameter><initializer>&null;</initializer></methodparam>
   </methodsynopsis>

   <para>
    <methodname>PDOStatement::bindColumn</methodname> permite que una
    variable PHP se vincule a una columna específica en el conjunto de resultados
    de una consulta. Cada llamada a la función
    <methodname>PDOStatement::fetch</methodname> o
    <methodname>PDOStatement::fetchAll</methodname> actualiza todas las variables
    vinculadas a las columnas.
  </para>
  <note>
   <para>
    Dado que la información sobre las columnas no siempre está disponible
    para PDO hasta que la consulta se ejecuta, las aplicaciones portables
    deben llamar a esta función <emphasis>después</emphasis>
    de la función <methodname>PDOStatement::execute</methodname>.
   </para>
   <para>
    Sin embargo, para vincular una columna de tipo LOB con un flujo
    al utilizar el <emphasis>controlador PostGreSQL</emphasis>,
    las aplicaciones deben llamar a este método
    <emphasis>antes</emphasis> de llamar
    <methodname>PDOStatement::execute</methodname>, de lo contrario se recibirá
    el objeto OID en forma de &integer;.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>column</parameter></term>
     <listitem>
      <para>
       Número de la columna (comenzando en 1) o nombre de la columna en
       el conjunto de resultados. Si se utilizan los nombres de columnas,
       asegúrese de que el nombre coincida con la casilla de la columna, como
       se devuelve por el controlador.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Nombre de la variable PHP a la que se debe vincular la columna.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
    <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Tipo del argumento, especificado por las constantes
       <link linkend="pdo.constants"><literal>PDO::PARAM_*</literal></link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>maxLength</parameter></term>
     <listitem>
      <para>
       Una sugerencia para la preasignación.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>driverOptions</parameter></term>
     <listitem>
      <para>
       Argumentos opcionales para la biblioteca.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Vincula la visualización del conjunto de resultados a variables PHP</title>
    <para>
     Vincular las columnas del conjunto de resultados a variables PHP es una forma
     conveniente de hacer que los datos contenidos en cada fila
     estén inmediatamente disponibles para la aplicación. El siguiente
     ejemplo muestra cómo PDO permite vincular y recuperar las columnas
     con una variedad de opciones.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$stmt = $dbh->prepare('SELECT name, colour, calories FROM fruit');
$stmt->execute();

/* Vincula por los números de columnas */
$stmt->bindColumn(1, $name);
$stmt->bindColumn(2, $colour);

/* Vincula por los nombres de columnas */
$stmt->bindColumn('calories', $cals);
while ($stmt->fetch(PDO::FETCH_BOUND)) {
    print $name . "\t" . $colour . "\t" . $cals . "\n";
}
readData($dbh);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
pomme   rouge     150
banane  jaune  175
kiwi    vert   75
orange  orange  150
mangue   rouge     200
fraise      rouge     25
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDOStatement::execute</methodname></member>
    <member><methodname>PDOStatement::fetch</methodname></member>
    <member><methodname>PDOStatement::fetchAll</methodname></member>
    <member><methodname>PDOStatement::fetchColumn</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
