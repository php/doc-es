<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 28529d3539b850e870e3aa97570f4db0e53daa03 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdostatement.bindparam" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::bindParam</refname>
  <refpurpose>
   Vincula un parámetro a una variable específica
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDOStatement">
   <modifier>public</modifier> <type>bool</type><methodname>PDOStatement::bindParam</methodname>
   <methodparam><type class="union"><type>string</type><type>int</type></type><parameter>param</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>PDO::PARAM_STR</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>maxLength</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>driverOptions</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Vincula una variable PHP a un marcador nombrado o interrogativo correspondiente en una
   consulta SQL utilizada para preparar la consulta. A diferencia de
   <methodname>PDOStatement::bindValue</methodname>, la variable es vinculada como
   referencia y solo será evaluada en el momento de la llamada a la función
   <methodname>PDOStatement::execute</methodname>.
  </para>
  <para>
   La mayoría de los parámetros son parámetros de entrada, y son utilizados
   en modo solo lectura para construir la consulta (aunque pueden ser convertidos
   según el <parameter>data_type</parameter>). Algunos drivers soportan la invocación de
   procedimientos almacenados que retornan datos como parámetros de salida, y algunos otros
   como parámetros de entrada/salida que son enviados juntos y actualizados para recibirlos.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>param</parameter></term>
     <listitem>
      <para>
       Identificador. Para una consulta preparada utilizando
       marcadores nombrados, será el nombre del parámetro
       en la forma <varname>:name</varname>. Para
       una consulta preparada utilizando marcadores interrogativos,
       será la posición indexada +1 del parámetro.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Nombre de la variable PHP a vincular al parámetro de la consulta SQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Tipo explícito de datos para el parámetro utilizando las constantes
       <link linkend="pdo.constants"><literal>PDO::PARAM_*</literal></link>.
       Para retornar un parámetro INOUT desde un procedimiento
       almacenado, se utiliza el operador OR para definir el byte <constant>PDO::PARAM_INPUT_OUTPUT</constant>
       para el parámetro <parameter>type</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>maxLength</parameter></term>
     <listitem>
      <para>
       Longitud del tipo de datos. Para indicar que un
       parámetro es un parámetro OUT desde un procedimiento almacenado,
       se debe definir explícitamente la longitud.
       Significativo únicamente cuando el parámetro <parameter>type</parameter>
       es <constant>PDO::PARAM_INPUT_OUTPUT</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>driverOptions</parameter></term>
     <listitem>
      <para>

      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>
     Ejecución de una consulta preparada con emplazamientos nombrados
   </title>
   <programlisting role="php">
<![CDATA[
<?php
/* Ejecución de una consulta preparada vinculando variables PHP */
$calories = 150;
$couleur = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < :calories AND couleur = :couleur');
$sth->bindParam('calories', $calories, PDO::PARAM_INT);
/* Los nombres también pueden ser prefijados con dos puntos ":" (opcional) */
$sth->bindParam(':couleur', $couleur, PDO::PARAM_STR);
$sth->execute();
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>
     Ejecución de una consulta preparada con marcadores de
     posicionamiento
   </title>
   <programlisting role="php">
<![CDATA[
<?php
/* Ejecución de una consulta preparada vinculando variables PHP */
$calories = 150;
$couleur = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < ? AND couleur = ?');
$sth->bindParam(1, $calories, PDO::PARAM_INT);
$sth->bindParam(2, $couleur, PDO::PARAM_STR);
$sth->execute();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Llamada a un procedimiento almacenado con un parámetro INOUT</title>
   <programlisting role="php">
<![CDATA[
<?php
/* Llamada a un procedimiento almacenado con un parámetro INOUT */
$couleur = 'rouge';
$sth = $dbh->prepare('CALL puree_fruit(?)');
$sth->bindParam(1, $couleur, PDO::PARAM_STR|PDO::PARAM_INPUT_OUTPUT, 12);
$sth->execute();
print "Después de haber prensado la fruta, el color es: $couleur";
?>
]]>
   </programlisting>
  </example>

 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDOStatement::execute</methodname></member>
    <member><methodname>PDOStatement::bindValue</methodname></member>
   </simplelist>
  </para>

 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
