<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 5564c64a6cafa5bc7325afe8555562df469fc6a0 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->

<book xml:id="book.gmp" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <?phpdoc extension-membership="bundledexternal" ?>
 <title>GNU Multiple Precision</title>
 <titleabbrev>GMP</titleabbrev>

 <!-- {{{ preface -->
 <preface xml:id="intro.gmp">
  &reftitle.intro;
  <simpara>
   Estas funciones permiten trabajar con números de tamaño arbitrario,
   utilizando la biblioteca GNU <acronym>MP</acronym>.
  </simpara>
  <note>
   <para>
    La mayoría de las funciones GMP aceptan números GMP como argumentos.
    Estos son mostrados en la documentación como objetos <classname>GMP</classname>.
    La mayoría de estas funciones aceptan también argumentos
    en forma numérica y de string, siempre que sea posible convertirlos
    posteriormente a número. Así, si existe una función más
    performante que pueda funcionar sobre los argumentos (enteros solamente),
    entonces será utilizada en su lugar (esto se hace de manera transparente).
    Ver también la función <function>gmp_init</function>.
   </para>
  </note>
  <note>
   <para>
    Operadores
    <link linkend="language.operators.arithmetic">aritméticos</link>,
    <link linkend="language.operators.bitwise">a nivel de bits</link>, y
    <link linkend="language.operators.comparison">de comparación</link>
    pueden ser utilizados con los objetos <classname>GMP</classname> devueltos
    desde <function>gmp_init</function> y las otras funciones GMP.
   </para>
  </note>
  <warning>
   <simpara>
    Si se desea especificar explícitamente un entero de gran tamaño,
    debe especificarse en forma de string. Si no se hace, PHP interpretará
    el entero y lo transformará en una representación interna, lo que
    seguramente hará perder precisión, antes de que <literal>GMP</literal>
    entre en juego.

    Los enteros voluminosos deben especificarse como strings - de lo contrario,
    PHP los fuerza a &float;, lo que provoca una pérdida de precisión.
   </simpara>
  </warning>
 </preface>
 <!-- }}} -->

 &reference.gmp.setup;
 &reference.gmp.constants;
 &reference.gmp.examples;
 &reference.gmp.reference;
 &reference.gmp.gmp;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
