<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 715a125af5a86f0e6d6d5aa6cfa9c45257a433ac Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.svn-status" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>svn_status</refname>
  <refpurpose>Obtiene el estado de los ficheros y directorios de la copia de trabajo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>svn_status</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve el estado de los ficheros y directorios de la copia de trabajo, proporcionando
   las modificaciones, adiciones, eliminaciones, así como otros cambios
   de los elementos de la copia de trabajo.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       Ruta local al fichero o directorio del que se desea obtener el estado.
      </para>
      &svn.relativepath;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Cualquier combinación de <constant>Svn::NON_RECURSIVE</constant>,
       <constant>Svn::ALL</constant> (independientemente del estado de modificación),
       <constant>Svn::SHOW_UPDATES</constant> (se añadirán entradas para elementos
       que no están actualizados), <constant>Svn::NO_IGNORE</constant> (ignora las propiedades
       <literal>svn:ignore</literal> al analizar nuevos ficheros)
       y <constant>Svn::IGNORE_EXTERNALS</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un array indexado numéricamente de arrays asociativos
   que detallan el estado de los elementos del repositorio:
  </para>
  <screen>
<![CDATA[
Array (
    [0] => Array (
        // información sobre el elemento
    )
    [1] => ...
)
]]>
  </screen>
  <para>
   La información sobre un elemento es un array asociativo que puede contener
   las siguientes claves:
  </para>
  <variablelist>
   <varlistentry>
    <term><varname>path</varname></term>
     <listitem>
      <simpara>
       Ruta al fichero/directorio de esta entrada en el sistema de ficheros
       local.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>text_status</varname></term>
     <listitem>
      <simpara>
       Estado del texto del elemento. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos_text_status</varname></term>
     <listitem>
      <simpara>
       Estado del texto del elemento en el repositorio. Solo ocurre si
       <parameter>update</parameter> está definido como &true;.
       &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>prop_status</varname></term>
     <listitem>
      <simpara>
       Estado de la propiedad del elemento. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos_prop_status</varname></term>
     <listitem>
      <simpara>
       Estado de la propiedad del elemento en el repositorio. Solo ocurre si
       <parameter>update</parameter> está definido como &true;. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>locked</varname></term>
     <listitem>
      <simpara>
       Si el elemento está bloqueado. (Definido solo si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>copied</varname></term>
     <listitem>
      <simpara>
       Si el elemento ha sido copiado o no (previsto para añadir con el registro).
       (Definido solo si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>switched</varname></term>
     <listitem>
      <simpara>
       Si el elemento ha cambiado de repositorio de referencia,
       utilizando el comando switch.
       (Definido solo si &true;)
      </simpara>
     </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Estas claves solo están definidas si el elemento está versionado:
  </para>
  <variablelist>
   <varlistentry>
    <term><varname>name</varname></term>
     <listitem>
      <simpara>
       Nombre base del elemento en el repositorio.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>url</varname></term>
     <listitem>
      <simpara>
       URL del elemento en el repositorio.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos</varname></term>
     <listitem>
      <simpara>
       URL base del repositorio.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>revision</varname></term>
     <listitem>
      <simpara>
       Revisión del elemento en la copia de trabajo.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>kind</varname></term>
     <listitem>
      <simpara>
       Tipo del elemento, es decir, fichero o directorio. &svn.referto.type;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>schedule</varname></term>
     <listitem>
      <simpara>
       Acción prevista para el elemento, es decir, adición o eliminación.
       Las constantes para estos números mágicos no están disponibles,
       pueden ser emuladas utilizando:
      </simpara>
       <programlisting role="php">
<![CDATA[
<?php
if (!defined('svn_wc_schedule_normal')) {
    define('svn_wc_schedule_normal',  0); // nada especial
    define('svn_wc_schedule_add',     1); // elemento a añadir
    define('svn_wc_schedule_delete',  2); // elemento a eliminar
    define('svn_wc_schedule_replace', 3); // elemento a añadir y eliminar
}
?>
]]>
      </programlisting>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>deleted</varname></term>
     <listitem>
      <simpara>
       Si el elemento ha sido eliminado, pero las revisiones padre aún existen
       (Definido solo si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>absent</varname></term>
     <listitem>
      <simpara>
       Si el elemento está ausente, pero Subversion sabe que debería
       estar aquí. (Definido solo si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>incomplete</varname></term>
     <listitem>
      <simpara>
       Si la entrada del fichero para un directorio está incompleta.
       (Definido solo si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_date</varname></term>
     <listitem>
      <simpara>
       Timestamp Unix de la fecha del último commit.
       (No afectado por el parámetro <parameter>update</parameter>).
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_rev</varname></term>
     <listitem>
      <simpara>
       Revisión del último commit. (No afectado por el parámetro
       <parameter>update</parameter>).
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_author</varname></term>
     <listitem>
      <simpara>
       Nombre del autor del último commit. (No afectado por el
       parámetro <parameter>update</parameter>).
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>prop_time</varname></term>
     <listitem>
      <simpara>
       Timestamp Unix que representa la fecha/hora de la última actualización
       de las propiedades.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>text_time</varname></term>
     <listitem>
      <simpara>
       Timestamp Unix que representa la fecha/hora de la última actualización
       del texto.
      </simpara>
     </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de uso</title>
    <para>
     Este ejemplo muestra un uso básico de esta función.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
print_r(svn_status(realpath('wc')));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array (
    [0] => Array (
        [path] => /home/bob/wc/sandwich.txt
        [text_status] => 8 // el elemento ha sido modificado
        [repos_text_status] => 1 // Ninguna información disponible, use update
        [prop_status] => 3 // ningún cambio
        [repos_prop_status] => 1 // Ninguna información disponible, use update
        [name] => sandwich.txt
        [url] => http://www.example.com/svnroot/deli/trunk/sandwich.txt
        [repos] => http://www.example.com/svnroot/
        [revision] => 123
        [kind] => 1 // fichero
        [schedule] => 0 // ninguna acción prevista
        [cmt_date] => 1165543135
        [cmt_rev] => 120
        [cmt_author] => Alice
        [prop_time] => 1180201728
        [text_time] => 1180201729
    )
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.experimental.func;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>svn_update</function></member>
    <member><function>svn_log</function></member>
    <member><link xlink:href="&url.svn.manual.status;">Documentación SVN del comando <literal>"svn status"</literal></link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
