<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 52c495140bdb84f45f186bfb1cccf09788b0121e Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.openssl-random-pseudo-bytes" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_random_pseudo_bytes</refname>
  <refpurpose>Genera una cadena pseudo-aleatoria de octetos</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>openssl_random_pseudo_bytes</methodname>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter role="reference">strong_result</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Genera una &string; pseudo-aleatoria de octetos, cuya longitud es
   especificada por el argumento <parameter>length</parameter>.
  </para>
  <para>
   Indica asimismo si el algoritmo fuerte de criptología ha sido utilizado para
   producir estos octetos pseudo-aleatorios, utilizando el argumento
   <parameter>strong_result</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       El tamaño deseado para la cadena de octetos. Debe ser un número entero positivo
       inferior o igual a <literal>2147483647</literal>. PHP intentará
       convertir este argumento a un entero no nulo para utilizarlo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>strong_result</parameter></term>
     <listitem>
      <para>
       Si se proporciona, determina si el algoritmo de criptología utilizado
       era criptológicamente fuerte, es decir, seguro para ser utilizado con GPG, contraseñas, etc. &true; si lo es, &false; en caso contrario.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la cadena de octetos generada.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>openssl_random_pseudo_bytes</function> lanza una <classname>Exception</classname> en caso de error.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>strong_result</parameter> ahora es nullable.
      </entry>
     </row>
     <row>
      <entry>7.4.0</entry>
      <entry>
       La función ya no devuelve &false; en caso de error, sino que lanza una <classname>Exception</classname> en su lugar.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo <function>openssl_random_pseudo_bytes</function></title>
    <programlisting role="php">
<![CDATA[
<?php
for ($i = 1; $i <= 4; $i++) {
    $bytes = openssl_random_pseudo_bytes($i, $cstrong);
    $hex   = bin2hex($bytes);

    echo "Longitud : Octetos : $i y Hex: " . strlen($hex) . PHP_EOL;
    var_dump($hex);
    var_dump($cstrong);
    echo PHP_EOL;
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Longitud : Octetos : 1 y Hex: 2
string(2) "42"
bool(true)

Longitud : Octetos : 2 y Hex: 4
string(4) "dc6e"
bool(true)

Longitud : Octetos : 3 y Hex: 6
string(6) "288591"
bool(true)

Longitud : Octetos : 4 y Hex: 8
string(8) "ab86d144"
bool(true)

]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>random_bytes</function></member>
   <member><function>bin2hex</function></member>
   <member><function>crypt</function></member>
   <member><function>random_int</function></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
