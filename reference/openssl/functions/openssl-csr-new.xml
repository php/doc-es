<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f0d11929d41082d71dcf8338a18e04412c656fa0 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.openssl-csr-new" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_csr_new</refname>
  <refpurpose>Genera una <acronym>CSR</acronym></refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>OpenSSLCertificateSigningRequest</type><type>bool</type></type><methodname>openssl_csr_new</methodname>
   <methodparam><type>array</type><parameter>distinguished_names</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type class="union">
   <type>OpenSSLAsymmetricKey</type><type>null</type></type><parameter role="reference">private_key</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>options</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>extra_attributes</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_csr_new</function> genera una nueva <acronym>CSR</acronym>
   (requisición de firma de certificado), basada en la información proporcionada por <parameter>distinguished_names</parameter>.
  </para>
  &note.openssl.cnf;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>distinguished_names</parameter></term>
     <listitem>
      <para>
       El nombre distintivo (Distinguished Name) o los campos del sujeto a incluir
       en el certificado. El <parameter>distinguished_names</parameter> es
       un array asociativo cuyas claves representan los nombres de atributos
       de los Distinguished Names, y los valores pueden ser cadenas
       (para un valor único) o arrays (si se deben definir varios valores).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>private_key</parameter></term>
     <listitem>
      <para>
       <parameter>private_key</parameter> debe ser una clave privada que haya sido
       generada por <function>openssl_pkey_new</function> (u obtenida de otro modo
       mediante alguna de las funciones de la familia openssl_pkey), o la variable &null;.
       Si su valor es una variable &null;, se genera una nueva clave privada
       según las <parameter>options</parameter> proporcionadas y se asigna a la variable
       suministrada. La parte pública correspondiente de la clave se utilizará
       para firmar la <acronym>CSR</acronym>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Por omisión, se utiliza el archivo <literal>openssl.conf</literal> del sistema
       para inicializar la requisición; puede especificarse una sección
       del archivo de configuración configurando la clave <literal>config_section_section</literal> en
       <parameter>options</parameter>. También puede especificarse un archivo de
       configuración alternativo de OpenSSL configurando el valor de
       <literal>config</literal> con la ruta del archivo a utilizar.
       Si las claves siguientes están presentes en <parameter>options</parameter>, se
       comportan como sus equivalentes en <literal>openssl.conf</literal>, según la
       lista siguiente.
       <table>
        <title>Sobrescribir configuración</title>
        <tgroup cols="3">
         <thead>
          <row>
           <entry><parameter>options</parameter></entry>
           <entry>tipo</entry>
           <entry>Equivalente de <literal>openssl.conf</literal></entry>
           <entry>descripción</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>digest_alg</entry>
           <entry><type>string</type></entry>
           <entry>default_md</entry>
           <entry>Método de digest o firma de hash, generalmente uno de <function>openssl_get_md_methods</function></entry>
          </row>
          <row>
           <entry>x509_extensions</entry>
           <entry><type>string</type></entry>
           <entry>x509_extensions</entry>
           <entry>Selecciona qué extensión utilizar al crear un certificado x509</entry>
          </row>
          <row>
           <entry>req_extensions</entry>
           <entry><type>string</type></entry>
           <entry>req_extensions</entry>
           <entry>Selecciona qué extensión utilizar al crear una <acronym>CSR</acronym></entry>
          </row>
          <row>
           <entry>private_key_bits</entry>
           <entry><type>int</type></entry>
           <entry>default_bits</entry>
           <entry>Especifica la longitud en bits de la clave privada</entry>
          </row>
          <row>
           <entry>private_key_type</entry>
           <entry><type>int</type></entry>
           <entry>none</entry>
           <entry>Especifica el tipo de clave privada a crear. Puede ser uno
            de <constant>OPENSSL_KEYTYPE_DSA</constant>,
            <constant>OPENSSL_KEYTYPE_DH</constant>,
            <constant>OPENSSL_KEYTYPE_RSA</constant> o
            <constant>OPENSSL_KEYTYPE_EC</constant>.
            El valor por omisión es <constant>OPENSSL_KEYTYPE_RSA</constant>.
           </entry>
          </row>
          <row>
           <entry>encrypt_key</entry>
           <entry><type>bool</type></entry>
           <entry>encrypt_key</entry>
           <entry>¿Debe estar cifrada la clave (con contraseña) exportada?</entry>
          </row>
          <row>
           <entry>encrypt_key_cipher</entry>
           <entry><type>int</type></entry>
           <entry>none</entry>
           <entry>
            Una de las <link linkend="openssl.ciphers">constantes cipher</link>.
           </entry>
          </row>
          <row>
           <entry>curve_name</entry>
           <entry><type>string</type></entry>
           <entry>none</entry>
           <entry>
            Uno de <function>openssl_get_curve_names</function>.
           </entry>
          </row>
          <row>
           <entry>config</entry>
           <entry><type>string</type></entry>
           <entry>N/A</entry>
           <entry>
            Ruta hacia su archivo openssl.conf alternativo.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>extra_attributes</parameter></term>
     <listitem>
      <para>
       <parameter>extra_attributes</parameter> se utiliza para especificar
       atributos adicionales para la <acronym>CSR</acronym>. Se trata de un array asociativo
       cuyas claves se convierten en OID y se aplican como atributos
       de <acronym>CSR</acronym>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la <acronym>CSR</acronym> en caso de éxito, &true; si
   la creación de la <acronym>CSR</acronym> tiene éxito pero falla la firma&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.4.0</entry>
      <entry>
       El array asociativo <parameter>distinguished_names</parameter> ahora
       admite arrays como valores, permitiendo especificar varios
       valores para un mismo atributo.
      </entry>
     </row>
     <row>
      <entry>8.4.0</entry>
      <entry>
       El parámetro <parameter>extra_attributes</parameter> ahora define
       correctamente los atributos del CSR, en lugar de modificar el nombre distintivo
       del sujeto como hacía anteriormente de forma incorrecta.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>csr</parameter> ahora acepta una instancia de
       <classname>OpenSSLCertificateSigningRequest</classname> ;
       anteriormente, se aceptaba un &resource; de tipo <literal>OpenSSL X.509 CSR</literal>.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       En caso de éxito, esta función ahora devuelve una instancia de
       <classname>OpenSSLAsymmetricKey</classname> ; anteriormente se devolvía una
       &resource; de tipo <literal>OpenSSL key</literal>.
      </entry>
     </row>
     <row>
      <entry>7.1.0</entry>
      <entry>
       <parameter>options</parameter> ahora admite <literal>curve_name</literal>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Creación de un certificado autosignado</title>
    <programlisting role="php">
<![CDATA[
<?php
// para certificados SSL de servidor, el commonName es el nombre de dominio a proteger
// para certificados de correo electrónico S/MIME el commonName es el propietario de la dirección de correo
// los campos de ubicación e identificación hacen referencia al propietario del dominio o al objeto del correo a proteger
$dn = array(
    "countryName" => "GB",
    "stateOrProvinceName" => "Somerset",
    "localityName" => "Glastonbury",
    "organizationName" => "The Brain Room Limited",
    "organizationalUnitName" => "PHP Documentation Team",
    "commonName" => "Wez Furlong",
    "emailAddress" => "wez@example.com"
);

// Genera un nuevo par de claves privada (y pública)
$privkey = openssl_pkey_new(array(
    "private_key_bits" => 2048,
    "private_key_type" => OPENSSL_KEYTYPE_RSA,
));

// Genera una requisición de firma de certificado
$csr = openssl_csr_new($dn, $privkey, array('digest_alg' => 'sha256'));

// Genera un certificado autosignado, válido durante 365 días
$x509 = openssl_csr_sign($csr, null, $privkey, $days=365, array('digest_alg' => 'sha256'));

// Guarde su clave privada, CSR y certificado autosignado para uso posterior
openssl_csr_export($csr, $csrout) and var_dump($csrout);
openssl_x509_export($x509, $certout) and var_dump($certout);
openssl_pkey_export($privkey, $pkeyout, "mypassword") and var_dump($pkeyout);

// Muestra los errores que han ocurrido
while (($e = openssl_error_string()) !== false) {
    echo $e . "\n";
}
?>
]]>
    </programlisting>
   </example>

   <example>
    <title>Crear un certificado ECC autosignado (a partir de PHP 7.1.0)</title>
    <programlisting role="php">
<![CDATA[
<?php
$subject = array(
    "commonName" => "docs.php.net",
);

// Genera un nuevo par de claves privada (y pública)
$private_key = openssl_pkey_new(array(
    "private_key_type" => OPENSSL_KEYTYPE_EC,
    "curve_name" => 'prime256v1',
));

// Genera una requisición de firma de certificado
$csr = openssl_csr_new($subject, $private_key, array('digest_alg' => 'sha384'));

// Genera un certificado EC autosignado
$x509 = openssl_csr_sign($csr, null, $private_key, $days=365, array('digest_alg' => 'sha384'));
openssl_x509_export_to_file($x509, 'ecc-cert.pem');
openssl_pkey_export_to_file($private_key, 'ecc-private.key');
?>
]]>
    </programlisting>
   </example>

  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_csr_sign</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
