<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e3c3525f7f288bc3a455a9619215fa759c2a9f5f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="mongodb-bson-persistable.bsonserialize" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB\BSON\Persistable::bsonSerialize</refname>
  <refpurpose>Proporciona un array o un documento a serializar como BSON</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>abstract</modifier> <modifier>public</modifier> <type class="union"><type>array</type><type>stdClass</type><type>MongoDB\BSON\Document</type></type><methodname>MongoDB\BSON\Persistable::bsonSerialize</methodname>
   <void />
  </methodsynopsis>
  <para>
   Se invoca durante la serialización del objeto en BSON. El método debe devolver un
   <type>array</type>, <classname>stdClass</classname>, o
   <classname>MongoDB\BSON\Document</classname>.
  </para>
  <para>
   El valor devuelto será siempre serializado como documento BSON. El documento
   serializado incluirá un campo que contiene el nombre de la clase del objeto. Por esta
   razón, no es posible devolver una instancia de
   <classname>MongoDB\BSON\PackedArray</classname> en este método.
  </para>
  <para>
   Se recomienda incluir una propiedad <property>_id</property> (por ejemplo
   un <classname>MongoDB\BSON\ObjectId</classname> inicializado en el constructor) al devolver
   datos para un documento BSON raíz. En ausencia de una propiedad
   <property>_id</property>, la extensión o el servidor generará un
   <classname>MongoDB\BSON\ObjectId</classname> para las operaciones de inserción o upsert,
   respectivamente.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un <type>array</type>, <classname>stdClass</classname>, o <classname>MongoDB\BSON\Document</classname>
   a serializar como documento BSON.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &mongodb.changelog.tentative-return-types-enforced;
      <row>
       <entry>PECL mongodb 1.17.0</entry>
       <entry>
        <para>
         Este método puede ahora también devolver instancias de <classname>MongoDB\BSON\Document</classname>
         además de <type>array</type> y <classname>stdClass</classname>.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoDB\BSON\Serializable::bsonSerialize</function></member>
   <member><function>MongoDB\BSON\Unserializable::bsonUnserialize</function></member>
   <member><interfacename>MongoDB\BSON\Persistable</interfacename></member>
   <member><xref linkend="mongodb.persistence"/></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
