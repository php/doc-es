<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9bbcd47e469474bbee6ab59061d49bbb9266692e Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<variablelist role="constant_list">
 <title><function>curl_setopt</function></title>
 <varlistentry xml:id="constant.curlopt-abstract-unix-socket">
  <term>
   <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Activa el uso de un socket Unix abstracto en lugar de
    establecer una conexión TCP a un host y define la ruta dada
    en <type>string</type>. Esta opción comparte las mismas semánticas
    que <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Ambas opciones
    comparten el mismo almacenamiento y por lo tanto solo una de ellas puede ser
    definida por un manejador.
    Disponible a partir de PHP 7.3.0 y cURL 7.53.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-accept-encoding">
  <term>
   <constant>CURLOPT_ACCEPT_ENCODING</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>string</type> con el contenido
    del encabezado <literal>Accept-Encoding:</literal> enviado en una solicitud HTTP.
    Establecer en &null; para desactivar el envío del encabezado <literal>Accept-Encoding:</literal>.
    Por omisión a &null;.
    Disponible a partir de cURL 7.21.6.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-accepttimeout-ms">
  <term>
   <constant>CURLOPT_ACCEPTTIMEOUT_MS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El número máximo de milisegundos a esperar para que un servidor
    se reconecte a cURL cuando se usa una conexión FTP activa.
    Por omisión a <literal>60000</literal> milisegundos.
    Disponible a partir de cURL 7.24.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-address-scope">
  <term>
   <constant>CURLOPT_ADDRESS_SCOPE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El identificador de ámbito a usar al conectarse a una dirección IPv6.
    Esta opción acepta cualquier valor que pueda ser convertido en un <type>int</type> válido.
    Por omisión a <literal>0</literal>.
    Disponible a partir de cURL 7.19.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-altsvc">
  <term>
   <constant>CURLOPT_ALTSVC</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Pasar un <type>string</type> con el nombre de archivo para que cURL lo use como caché Alt-Svc para leer el contenido
    de la caché existente
    y eventualmente reescribirlo después de un transferencia, a menos que
    <constant>CURLALTSVC_READONLYFILE</constant>
    esté definido a través de <constant>CURLOPT_ALTSVC_CTRL</constant>.
    Disponible a partir de PHP 8.2.0 y cURL 7.64.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-altsvc-ctrl">
  <term>
   <constant>CURLOPT_ALTSVC_CTRL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Rellena el bitmask con el conjunto correcto de funcionalidades para indicar a cURL cómo manejar Alt-Svc para los
    transferencias usando este manejador. cURL solo acepta los encabezados Alt-Svc en HTTPS. También completará
    una solicitud a un origen alternativo solo si este origen está correctamente alojado en HTTPS.
    Definir un bit activará el motor alt-svc.
    Definido en una de las constantes
    <constant>CURLALTSVC_
     <replaceable>*</replaceable>
    </constant>
    .
    Por omisión, la gestión Alt-Svc está desactivada.
    Disponible a partir de PHP 8.2.0 y cURL 7.64.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-append">
  <term>
   <constant>CURLOPT_APPEND</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer esta opción a <literal>1</literal> hará que las descargas FTP
    añadan al archivo remoto en lugar de sobrescribirlo.
    Por omisión a <literal>0</literal>.
    Disponible a partir de cURL 7.17.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-autoreferer">
  <term>
   <constant>CURLOPT_AUTOREFERER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para definir automáticamente el campo <literal>Referer:</literal> en
    las solicitudes donde sigue una redirección <literal>Location:</literal>.
    Por omisión, el valor es <literal>0</literal>.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-aws-sigv4">
  <term>
   <constant>CURLOPT_AWS_SIGV4</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Proporciona autenticación de firma AWS V4 en el encabezado HTTP(S) como <type>string</type>.
    Esta opción reemplaza cualquier otro tipo de autenticación que haya sido definido en
    <constant>CURLOPT_HTTPAUTH</constant>. Este método no puede combinarse con otros tipos de autenticación.
    Disponible a partir de PHP 8.2.0 y cURL 7.75.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-binarytransfer">
  <term>
   <constant>CURLOPT_BINARYTRANSFER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Esta constante ya no se usa a partir de PHP 5.5.0.
    Deprecado a partir de PHP 8.4.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-buffersize">
  <term>
   <constant>CURLOPT_BUFFERSIZE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un tamaño de búfer a usar para cada lectura. No hay garantía
    de que esta solicitud será satisfecha, sin embargo.
    Esta opción acepta cualquier valor que pueda ser convertido en un <type>int</type> válido.
    Por omisión, el valor es <constant>CURL_MAX_WRITE_SIZE</constant> (actualmente, 16kB).
    Disponible a partir de cURL 7.10.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-cainfo">
  <term>
   <constant>CURLOPT_CAINFO</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el nombre de un archivo que contiene uno o varios certificados para verificar el
    par con. Esto solo tiene sentido cuando se usa en combinación con
    <constant>CURLOPT_SSL_VERIFYPEER</constant>. Puede requerir una ruta absoluta.
    Disponible a partir de cURL 7.4.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-cainfo-blob">
  <term>
   <constant>CURLOPT_CAINFO_BLOB</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el nombre de un archivo PEM que contiene uno o varios certificados para verificar el par
    con.
    Esta opción reemplaza <constant>CURLOPT_CAINFO</constant>.
    Disponible a partir de PHP 8.2.0 y cURL 7.77.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-capath">
  <term>
   <constant>CURLOPT_CAPATH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con un directorio que contiene varios certificados CA. Use esta opción
    en combinación con <constant>CURLOPT_SSL_VERIFYPEER</constant>.
    Disponible a partir de cURL 7.9.8.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ca-cache-timeout">
  <term>
   <constant>CURLOPT_CA_CACHE_TIMEOUT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el tiempo máximo en segundos durante el cual un almacén de certificados CA
    almacenado en caché en memoria puede ser conservado y reutilizado para nuevas conexiones.
    Esta opción acepta cualquier valor que pueda ser convertido en un <type>int</type> válido.
    Por omisión, el valor es <literal>86400</literal> (24 horas).
    Disponible a partir de PHP 8.3.0 y cURL 7.87.0
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-certinfo">
  <term>
   <constant>CURLOPT_CERTINFO</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para salir con información sobre el certificado SSL en
    <constant>STDERR</constant>
    en transferencias seguras.
    Requiere <constant>CURLOPT_VERBOSE</constant> para tener efecto.
    Por omisión, el valor es &false;.
    Disponible a partir de cURL 7.19.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-connecttimeout">
  <term>
   <constant>CURLOPT_CONNECTTIMEOUT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El número de segundos a esperar al intentar conectarse. Use 0 para
    esperar indefinidamente.
    Esta opción acepta cualquier valor que pueda ser convertido en un <type>int</type> válido.
    Por omisión, el valor es <literal>300</literal>.
    Disponible a partir de cURL 7.7.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-connecttimeout-ms">
  <term>
   <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El número de milisegundos a esperar al intentar conectarse.
    Use <literal>0</literal> para esperar indefinidamente.
    Si cURL está compilado para usar el resolutor de nombres estándar del sistema, esta
    parte de la conexión siempre usará una resolución a segundo completo para
    los tiempos de espera con un tiempo de espera mínimo permitido de un segundo.
    Esta opción acepta cualquier valor que pueda ser convertido en un <type>int</type> válido.
    Por omisión, el valor es <literal>300000</literal>.
    Disponible a partir de cURL 7.16.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-connect-only">
  <term>
   <constant>CURLOPT_CONNECT_ONLY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para indicar a la biblioteca que no realice autenticación de proxy
    y configuración de conexión requerida, pero no transferencia de datos. Esta opción está implementada para
    HTTP, SMTP y POP3.
    Por omisión, el valor es &false;.
    Disponible a partir de cURL 7.15.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-connect-to">
  <term>
   <constant>CURLOPT_CONNECT_TO</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Conecta a un host y puerto específicos en lugar del host y puerto de la URL.
    Acepta un <type>array</type> de <type>string</type>s en el formato
    <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
    Disponible a partir de PHP 7.0.7 y cURL 7.49.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-cookie">
  <term>
   <constant>CURLOPT_COOKIE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el contenido del encabezado <literal>"Cookie: "</literal> a usar
    en la solicitud HTTP.
    Es de notar que múltiples cookies están separadas por un punto y coma seguido
    de un espacio (por ejemplo, <literal>fruit=apple; colour=red</literal>).
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-cookiefile">
  <term>
   <constant>CURLOPT_COOKIEFILE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el nombre del archivo que contiene los datos de las cookies.
    El archivo de cookies puede estar en formato Netscape, o simplemente encabezados HTTP clásicos
    volcados en un archivo.
    Si el nombre es una cadena vacía, no se cargan cookies, pero la gestión de cookies
    sigue activada.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-cookiejar">
  <term>
   <constant>CURLOPT_COOKIEJAR</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el nombre del archivo para guardar todas las cookies internas cuando
    el destructor del manejador es llamado.
    Disponible a partir de cURL 7.9.0.
    <warning>
     <simpara>
      a partir de PHP 8.0.0, <function>curl_close</function> es una operación nula
      y no destruye <emphasis>ningún</emphasis> manejador.
      Si las cookies deben ser escritas antes de que el manejador sea destruido automáticamente,
      llame a <function>unset</function> en el manejador.
     </simpara>
    </warning>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-cookielist">
  <term>
   <constant>CURLOPT_COOKIELIST</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> de cookies (es decir, una sola línea en el formato Netscape/Mozilla, o un encabezado
    Set-Cookie HTTP regular) añade esta única cookie al almacenamiento interno de cookies.
    <simplelist type="inline">
     <member>
      <literal>ALL</literal>
      borra todas las cookies almacenadas en memoria
     </member>
     <member>
      <literal>SESS</literal>
      borra todas las cookies de sesión almacenadas en memoria
     </member>
     <member>
      <literal>FLUSH</literal>
      escribe todas las cookies conocidas en el archivo especificado por
      <constant>CURLOPT_COOKIEJAR</constant>
     </member>
     <member>
      <literal>RELOAD</literal>
      carga todas las cookies desde los archivos especificados por
      <constant>CURLOPT_COOKIEFILE</constant>
     </member>
    </simplelist>
    .
    Disponible a partir de cURL 7.14.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-cookiesession">
  <term>
   <constant>CURLOPT_COOKIESESSION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para marcar esto como una nueva "sesión" de cookies. Esto forzará a cURL
    a ignorar todas las cookies que está a punto de cargar que son "cookies de sesión"
    de la sesión anterior. Por omisión, cURL almacena y carga siempre
    todas las cookies, independientemente de si son cookies de sesión o no.
    Las cookies de sesión son cookies sin fecha de expiración y están destinadas a ser vivas
    y existentes solo para esta "sesión".
    Disponible a partir de cURL 7.9.7.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-crlf">
  <term>
   <constant>CURLOPT_CRLF</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para convertir los finales de línea Unix en finales de línea CRLF
    en las transferencias.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-crlfile">
  <term>
   <constant>CURLOPT_CRLFILE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Pasar un <type>string</type> nombrando un archivo con la concatenación de
    la CRL (Certificate Revocation List) (en formato PEM)
    para usar en la validación del certificado que ocurre durante el intercambio SSL.
    Cuando cUrl está compilado para usar GnuTLS,
    no hay manera de influir en el uso de CRL pasado
    para ayudar en el proceso de verificación.
    Cuando cUrl está compilado para usar OpenSSL,
    <literal>X509_V_FLAG_CRL_CHECK</literal>
    y <literal>X509_V_FLAG_CRL_CHECK_ALL</literal> están ambos definidos,
    exigiendo la verificación de la CRL contra todos los elementos de la cadena de certificados
    si un archivo CRL es pasado.
    También es de notar que <constant>CURLOPT_CRLFILE</constant> implica
    <constant>CURLSSLOPT_NO_PARTIALCHAIN</constant>
    a partir de cURL 7.71.0 debido a un bug de OpenSSL.
    Disponible a partir de cURL 7.19.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-customrequest">
  <term>
   <constant>CURLOPT_CUSTOMREQUEST</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un método de solicitud personalizado a usar en lugar de
    <literal>GET</literal>
    o <literal>HEAD</literal> al realizar
    una solicitud HTTP. Esto es útil para realizar
    solicitudes HTTP más oscuras como <literal>DELETE</literal> u otras.
    Los valores válidos son cosas como <literal>GET</literal>,
    <literal>POST</literal>, <literal>CONNECT</literal> y así sucesivamente;
    es decir, no ingresar una línea completa de solicitud HTTP aquí. Por ejemplo,
    ingresar
    <literal>GET /index.html HTTP/1.0\r\n\r\n</literal>
    sería incorrecto.
    Esta opción acepta un <type>string</type> o &null;.
    Disponible a partir de cURL 7.1.0.
    <note>
     <para>
      No hacer esto sin asegurarse de que el servidor soporte el método de solicitud
      personalizado primero.
     </para>
    </note>
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-default-protocol">
  <term>
   <constant>CURLOPT_DEFAULT_PROTOCOL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el protocolo por defecto a usar si la URL carece de un nombre de esquema.
    Disponible a partir de PHP 7.0.7 y cURL 7.45.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-dirlistonly">
  <term>
   <constant>CURLOPT_DIRLISTONLY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir esta opción a <literal>1</literal> para tener efectos diferentes
    basados en el protocolo con el que se usa.
    Las URLs basadas en FTP y SFTP solo listarán los nombres de archivos en un directorio.
    POP3 listará el mensaje o mensajes de correo electrónico en el servidor POP3.
    Para FILE, esta opción no tiene efecto
    ya que los directorios siempre se listan en este modo.
    Usar esta opción con
    <constant>CURLOPT_WILDCARDMATCH</constant>
    evitará que este último tenga algún efecto.
    Por omisión a <literal>0</literal>.
    Disponible a partir de cURL 7.17.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-disallow-username-in-url">
  <term>
   <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para no permitir URLs que incluyen un nombre de usuario.
    Los nombres de usuario están permitidos por omisión.
    Disponible a partir de PHP 7.3.0 y cURL 7.61.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-dns-cache-timeout">
  <term>
   <constant>CURLOPT_DNS_CACHE_TIMEOUT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El número de segundos para mantener las entradas DNS en memoria. Esta
    opción está definida por omisión a <literal>120</literal> (2 minutos).
    Esta opción acepta cualquier valor que pueda ser convertido en un <type>int</type> válido.
    Disponible a partir de cURL 7.9.3.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-dns-interface">
  <term>
   <constant>CURLOPT_DNS_INTERFACE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el nombre de la interfaz de red a la que el resolutor DNS debe enlazarse.
    Esto debe ser un nombre de interfaz (no una dirección).
    Esta opción acepta un <type>string</type> o &null;.
    Disponible a partir de PHP 7.0.7 y cURL 7.33.0
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-dns-local-ip4">
  <term>
   <constant>CURLOPT_DNS_LOCAL_IP4</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define la dirección IPv4 local a la que el resolutor debe enlazarse.
    El argumento debe contener una sola dirección IPv4 numérica.
    Esta opción acepta un <type>string</type> o &null;.
    Disponible a partir de PHP 7.0.7 y cURL 7.33.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-dns-local-ip6">
  <term>
   <constant>CURLOPT_DNS_LOCAL_IP6</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define la dirección IPv6 local a la que el resolutor debe enlazarse.
    El argumento debe contener una sola dirección IPv6 numérica.
    Esta opción acepta un <type>string</type> o &null;.
    Disponible a partir de PHP 7.0.7 y cURL 7.33.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-dns-servers">
  <term>
   <constant>CURLOPT_DNS_SERVERS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Pasar un <type>string</type> con una lista separada por comas de servidores DNS a usar
    en lugar del sistema por defecto
    (por ejemplo: <literal>192.168.1.100,192.168.1.101:8080</literal>).
    Disponible a partir de cURL 7.24.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-dns-shuffle-addresses">
  <term>
   <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para mezclar el orden de todas las direcciones devueltas para que sean usadas
    en un orden aleatorio, cuando un nombre es resuelto y más de una dirección IP es devuelta.
    Esto puede resultar en el uso de IPv4 antes que IPv6 o viceversa.
    Disponible a partir de PHP 7.3.0 y cURL 7.60.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-dns-use-global-cache">
  <term>
   <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para usar una caché DNS global. Esta opción no es thread-safe.
    Está activada por omisión si PHP está compilado para uso no threadado
    (CLI, FCGI, Apache2-Prefork, etc.).
    Disponible a partir de cURL 7.9.3 y obsoleta a partir de cURL 7.11.1.
    A partir de PHP 8.4, esta opción ya no tiene ningún efecto.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-doh-ssl-verifyhost">
  <term>
   <constant>CURLOPT_DOH_SSL_VERIFYHOST</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en <literal>2</literal> para verificar el campo de nombre del certificado SSL del servidor DNS-over-HTTPS
    en comparación con el nombre de host.
    Disponible a partir de PHP 8.2.0 y cURL 7.76.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-doh-ssl-verifypeer">
  <term>
   <constant>CURLOPT_DOH_SSL_VERIFYPEER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en <literal>1</literal> para activar y <literal>0</literal> para desactivar
    la verificación de la autenticidad del certificado SSL del servidor DNS-over-HTTPS.
    Disponible a partir de PHP 8.2.0 y cURL 7.76.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-doh-ssl-verifystatus">
  <term>
   <constant>CURLOPT_DOH_SSL_VERIFYSTATUS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en <literal>1</literal> para activar y <literal>0</literal> para desactivar
    la verificación del estado del certificado del servidor DNS-over-HTTPS usando
    la extensión TLS "Certificate Status Request" (OCSP stapling).
    Disponible a partir de PHP 8.2.0 y cURL 7.76.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-doh-url">
  <term>
   <constant>CURLOPT_DOH_URL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Proporciona la URL DNS-over-HTTPS.
    Esta opción acepta un <type>string</type> o &null;.
    Disponible a partir de PHP 8.1.0 y cURL 7.62.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-egdsocket">
  <term>
   <constant>CURLOPT_EGDSOCKET</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Como <constant>CURLOPT_RANDOM_FILE</constant> excepto que pasas una cadena que contiene un nombre
    de archivo al socket Entropy Gathering Daemon.
    Disponible a partir de cURL 7.7.0 y obsoleto a partir de cURL 7.84.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-encoding">
  <term>
   <constant>CURLOPT_ENCODING</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El contenido de los encabezados <literal>Accept-Encoding:</literal> como <type>string</type>.
    Esto permite decodificar la respuesta.
    Los encodings soportados son
    <simplelist type="inline">
     <member>
      <literal>identity</literal>
     </member>
     <member>
      <literal>deflate</literal>
     </member>
     <member>
      <literal>gzip</literal>
     </member>
    </simplelist>
    .
    Si una cadena vacía, <type>string</type>,
    es definida, un encabezado que contiene todos los tipos de encoding soportados es enviado.
    Disponible a partir de cURL 7.10.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-expect-100-timeout-ms">
  <term>
   <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tiempo de espera para las respuestas <literal>Expect: 100-continue</literal> en milisegundos.
    Por omisión, <literal>1000</literal> milisegundos.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de PHP 7.0.7 y cURL 7.36.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-failonerror">
  <term>
   <constant>CURLOPT_FAILONERROR</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para fallar verbalmente si el código HTTP devuelto
    es superior o igual a <literal>400</literal>. El comportamiento por omisión es devolver
    la página normalmente, ignorando el código.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-file">
  <term>
   <constant>CURLOPT_FILE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Acepta un descriptor de fichero
    <type>resource</type>
    hacia el fichero en el que debe escribirse la transferencia.
    El valor por omisión es <constant>STDOUT</constant> (la ventana del navegador).
    Disponible a partir de cURL 7.1.0 y obsoleto a partir de cURL 7.9.7.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-filetime">
  <term>
   <constant>CURLOPT_FILETIME</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para intentar recuperar la fecha de modificación
    del documento remoto. Este valor puede ser recuperado utilizando la opción
    <constant>CURLINFO_FILETIME</constant>
    con
    <function>curl_getinfo</function>.
    Disponible a partir de cURL 7.5.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-fnmatch-function">
  <term>
   <constant>CURLOPT_FNMATCH_FUNCTION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Pasar un <type>callable</type> que será utilizado para la correspondencia de caracteres genéricos.
    La firma de la función de devolución de llamada debe ser:
    <methodsynopsis>
     <type>int</type>
     <methodname>
      <replaceable>callback</replaceable>
     </methodname>
     <methodparam>
      <type>resource</type>
      <parameter>curlHandle</parameter>
     </methodparam>
     <methodparam>
      <type>string</type>
      <parameter>pattern</parameter>
     </methodparam>
     <methodparam>
      <type>string</type>
      <parameter>string</parameter>
     </methodparam>
    </methodsynopsis>
    <variablelist role="function_parameters">
     <varlistentry>
      <term>
       <parameter>curlHandle</parameter>
      </term>
      <listitem>
       <simpara>
        El manejador cURL.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>pattern</parameter>
      </term>
      <listitem>
       <simpara>
        La cadena de caracteres genéricos.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>string</parameter>
      </term>
      <listitem>
       <simpara>
        El <type>string</type> sobre el que ejecutar la correspondencia de caracteres genéricos.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    La función de devolución de llamada debe devolver
    <constant>CURL_FNMATCHFUNC_MATCH</constant>
    si el patrón coincide con el <type>string</type>,
    <constant>CURL_FNMATCHFUNC_NOMATCH</constant>
    si no es así
    o <constant>CURL_FNMATCHFUNC_FAIL</constant> si ha ocurrido un error.
    Disponible a partir de cURL 7.21.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-followlocation">
  <term>
   <constant>CURLOPT_FOLLOWLOCATION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para seguir todos los encabezados
    <literal>Location:</literal>
    enviados por el servidor en la respuesta HTTP.
    Ver también <constant>CURLOPT_MAXREDIRS</constant>.
    Esta constante no está disponible cuando
    <link xmlns="http://docbook.org/ns/docbook" linkend="ini.open-basedir">open_basedir</link>
    está activado.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-forbid-reuse">
  <term>
   <constant>CURLOPT_FORBID_REUSE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para forzar el cierre explícito de la conexión
    cuando el proceso finaliza, por lo que no se almacenará en caché para su reutilización.
    Disponible a partir de cURL 7.7.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-fresh-connect">
  <term>
   <constant>CURLOPT_FRESH_CONNECT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para forzar el uso de una nueva conexión
    en lugar de una conexión almacenada en caché.
    Disponible a partir de cURL 7.7.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftpappend">
  <term>
   <constant>CURLOPT_FTPAPPEND</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para añadir al fichero remoto en lugar de
    sobrescribirlo.
    Disponible a partir de cURL 7.1.0 y obsoleto a partir de cURL 7.16.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftpascii">
  <term>
   <constant>CURLOPT_FTPASCII</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un alias de
    <constant>CURLOPT_TRANSFERTEXT</constant>. Utilice esto en su lugar.
    Disponible a partir de cURL 7.1, obsoleto a partir de cURL 7.11.1
    y disponible por última vez a partir de cURL 7.15.5.
    Eliminado a partir de PHP 7.3.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftplistonly">
  <term>
   <constant>CURLOPT_FTPLISTONLY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para solo listar los nombres de un
    directorio FTP.
    Disponible a partir de cURL 7.1.0 y obsoleto a partir de cURL 7.16.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftpport">
  <term>
   <constant>CURLOPT_FTPPORT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> que se utilizará para obtener la dirección IP a usar para el comando FTP <literal>
    PORT</literal>.
    El comando <literal>PORT</literal> indica al servidor remoto que se conecte a nuestra dirección IP especificada.
    El <type>string</type> puede ser una dirección IP simple, un nombre de host, un nombre de interfaz de red (en Unix),
    o simplemente un <literal>-</literal> para usar la dirección IP por defecto del sistema.
    Esta opción acepta una <type>string</type> o &null;.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftpsslauth">
  <term>
   <constant>CURLOPT_FTPSSLAUTH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir el método de autenticación FTP sobre SSL (si está activado) en una de las
    constantes
    <constant>CURLFTPAUTH_
     <replaceable>*</replaceable>
    </constant>
    .
    El valor por omisión es <constant>CURLFTPAUTH_DEFAULT</constant>.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-account">
  <term>
   <constant>CURLOPT_FTP_ACCOUNT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Pasar un <type>string</type> que será enviado como información de cuenta en FTP
    (usando el comando <literal>ACCT</literal>) después de que el nombre de usuario y la contraseña hayan sido
    proporcionados
    al servidor.
    Definir en &null; para desactivar el envío de la información de cuenta.
    Por omisión en &null;.
    Disponible a partir de cURL 7.13.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-alternative-to-user">
  <term>
   <constant>CURLOPT_FTP_ALTERNATIVE_TO_USER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Pasar un <type>string</type> que será utilizado para intentar autenticarse en FTP
    si la negociación <literal>USER/PASS</literal> falla.
    Disponible a partir de cURL 7.15.5.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-create-missing-dirs">
  <term>
   <constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para crear los directorios faltantes cuando una operación FTP
    encuentra un camino que actualmente no existe.
    Disponible a partir de cURL 7.10.7.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-filemethod">
  <term>
   <constant>CURLOPT_FTP_FILEMETHOD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Indica a curl qué método usar para alcanzar un fichero en un servidor FTP(S).
    Los valores posibles son
    una de las constantes
    <constant>CURLFTPMETHOD_
     <replaceable>*</replaceable>
    </constant>
    .
    El valor por omisión es <constant>CURLFTPMETHOD_MULTICWD</constant>.
    Disponible a partir de cURL 7.15.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-response-timeout">
  <term>
   <constant>CURLOPT_FTP_RESPONSE_TIMEOUT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tiempo de espera en segundos que cURL esperará para una respuesta de un servidor FTP
    Esta opción reemplaza <constant>CURLOPT_TIMEOUT</constant>.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Este nombre de opción es reemplazado por <constant>CURLOPT_SERVER_RESPONSE_TIMEOUT</constant>, disponible a partir
    de PHP 8.4.0.
    Disponible a partir de cURL 7.10.8 y deprecado a partir de cURL 7.85.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-skip-pasv-ip">
  <term>
   <constant>CURLOPT_FTP_SKIP_PASV_IP</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Si esta opción está definida en <literal>1</literal>,
    cURL no utilizará la dirección IP que el servidor sugiere
    en su respuesta 227 al comando <literal>PASV</literal> de cURL
    sino que utilizará la dirección IP que usó para la conexión.
    El número de puerto recibido de la respuesta 227 no será ignorado por cURL.
    Por omisión en <literal>1</literal> a partir de cURL 7.74.0
    y <literal>0</literal> antes de eso.
    Disponible a partir de cURL 7.15.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-ssl">
  <term>
   <constant>CURLOPT_FTP_SSL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Disponible a partir de cURL 7.11.0 y obsoleto a partir de cURL 7.16.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-ssl-ccc">
  <term>
   <constant>CURLOPT_FTP_SSL_CCC</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Esta opción hace que cURL use CCC (Clear Command Channel)
    que detiene la capa SSL/TLS después de la autenticación
    dejando el resto de la comunicación del canal de control sin cifrar.
    Usar una de las constantes
    <constant>CURLFTPSSL_CCC_
     <replaceable>*</replaceable>
    </constant>
    .
    Por omisión en <constant>CURLFTPSSL_CCC_NONE</constant>.
    Disponible a partir de cURL 7.16.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-use-eprt">
  <term>
   <constant>CURLOPT_FTP_USE_EPRT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para usar <literal>EPRT</literal> (y <literal>LPRT</literal>) durante las descargas FTP activas.
    Definir en &false; para desactivar <literal>EPRT</literal> y <literal>LPRT</literal> y usar solo <literal>
    PORT</literal>.
    Disponible a partir de cURL 7.10.5.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-use-epsv">
  <term>
   <constant>CURLOPT_FTP_USE_EPSV</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para intentar primero un comando <literal>EPSV</literal> para las transferencias FTP antes de
    volver a <literal>PASV</literal>.
    Definir en &false; para desactivar <literal>EPSV</literal>.
    Disponible a partir de cURL 7.9.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ftp-use-pret">
  <term>
   <constant>CURLOPT_FTP_USE_PRET</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en <literal>1</literal> para enviar un comando <literal>PRET</literal> antes
    <literal>PASV</literal>
    (y <literal>EPSV</literal>).
    No tiene ningún efecto al usar el modo de transferencia FTP activo.
    Por omisión en <literal>0</literal>.
    Disponible a partir de cURL 7.20.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-gssapi-delegation">
  <term>
   <constant>CURLOPT_GSSAPI_DELEGATION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en
    <constant>CURLGSSAPI_DELEGATION_FLAG</constant>
    para permitir la delegación incondicional de las credenciales GSSAPI.
    Definir en
    <constant>CURLGSSAPI_DELEGATION_POLICY_FLAG</constant>
    para delegar solo si la bandera <literal>OK-AS-DELEGATE</literal> está definida
    en el ticket de servicio.
    Por omisión en <constant>CURLGSSAPI_DELEGATION_NONE</constant>.
    Disponible a partir de cURL 7.22.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-happy-eyeballs-timeout-ms">
  <term>
   <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un avance para IPv6 para el algoritmo Happy Eyeballs. Happy Eyeballs intenta
    conectarse tanto a las direcciones IPv4 como IPv6 para los hosts de doble pila,
    prefiriendo IPv6 primero para los milisegundos de tiempo de espera.
    Por omisión en <constant>CURL_HET_DEFAULT</constant>, que actualmente es de 200 milisegundos.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de PHP 7.3.0 y cURL 7.59.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-haproxyprotocol">
  <term>
   <constant>CURLOPT_HAPROXYPROTOCOL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para enviar un encabezado de protocolo HAProxy <literal>PROXY</literal> v1 al inicio de la conexión.
    La acción por omisión es no enviar este encabezado.
    Disponible a partir de PHP 7.3.0 y cURL 7.60.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-header">
  <term>
   <constant>CURLOPT_HEADER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para incluir los encabezados en la salida enviada al callback
    definido por <constant>CURLOPT_WRITEFUNCTION</constant>.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-headerfunction">
  <term>
   <constant>CURLOPT_HEADERFUNCTION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>callable</type> con la siguiente firma:
    <methodsynopsis>
     <type>int</type>
     <methodname>
      <replaceable>callback</replaceable>
     </methodname>
     <methodparam>
      <type>resource</type>
      <parameter>curlHandle</parameter>
     </methodparam>
     <methodparam>
      <type>string</type>
      <parameter>headerData</parameter>
     </methodparam>
    </methodsynopsis>
    <variablelist role="function_parameters">
     <varlistentry>
      <term>
       <parameter>curlHandle</parameter>
      </term>
      <listitem>
       <simpara>
        El manejador cURL.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>headerData</parameter>
      </term>
      <listitem>
       <simpara>
        Los datos de encabezado que deben ser escritos por el callback.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    El callback debe devolver el número de bytes escritos.
    Disponible a partir de cURL 7.7.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-headeropt">
  <term>
   <constant>CURLOPT_HEADEROPT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Enviar los encabezados HTTP tanto al proxy como al host o por separado.
    Los valores posibles son cualquiera de las
    constantes
    <constant>CURLHEADER_
     <replaceable>*</replaceable>
    </constant>
    .
    Por omisión en <constant>CURLHEADER_SEPARATE</constant> a partir de cURL
    7.42.1, y <constant>CURLHEADER_UNIFIED</constant> antes de eso.
    Disponible a partir de PHP 7.0.7 y cURL 7.37.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-hsts">
  <term>
   <constant>CURLOPT_HSTS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    <type>string</type>
    con el nombre del archivo de caché HSTS (HTTP Strict Transport Security)
    o &null; para permitir HSTS sin leer ni escribir en un archivo
    y borrar la lista de archivos para leer los datos HSTS.
    Disponible a partir de PHP 8.2.0 y cURL 7.74.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-hsts-ctrl">
  <term>
   <constant>CURLOPT_HSTS_CTRL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Acepta una máscara de bits de las características HSTS (HTTP Strict Transport Security)
    definidas por las constantes
    <constant>CURLHSTS_
     <replaceable>*</replaceable>
    </constant>
    .
    Disponible a partir de PHP 8.2.0 y cURL 7.74.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-http09-allowed">
  <term>
   <constant>CURLOPT_HTTP09_ALLOWED</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Si se permiten las respuestas HTTP/0.9. Por omisión en &false; a partir de cURL 7.66.0;
    antes, era &true;.
    Disponible a partir de PHP 7.3.15 y 7.4.3, respectivamente, y cURL 7.64.0
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-http200aliases">
  <term>
   <constant>CURLOPT_HTTP200ALIASES</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>array</type> de respuestas HTTP <literal>200</literal> que serán consideradas como respuestas válidas y no
    como errores.
    Disponible a partir de cURL 7.10.3.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-httpauth">
  <term>
   <constant>CURLOPT_HTTPAUTH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una máscara de bits de los métodos de autenticación HTTP a usar. Las opciones son:
    <simplelist type="inline">
     <member>
      <constant>CURLAUTH_BASIC</constant>
     </member>
     <member>
      <constant>CURLAUTH_DIGEST</constant>
     </member>
     <member>
      <constant>CURLAUTH_GSSNEGOTIATE</constant>
     </member>
     <member>
      <constant>CURLAUTH_NTLM</constant>
     </member>
     <member>
      <constant>CURLAUTH_AWS_SIGV4</constant>
     </member>
     <member>
      <constant>CURLAUTH_ANY</constant>
     </member>
     <member>
      <constant>CURLAUTH_ANYSAFE</constant>
     </member>
    </simplelist>
    .
    Si se usa más de un método, cURL interrogará al servidor para ver
    qué métodos soporta y elegirá el mejor.
    <constant>CURLAUTH_ANY</constant>
    define todos los bits. cURL seleccionará automáticamente
    la que encuentre más segura.
    Disponible a partir de cURL 7.10.6.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-httpget">
  <term>
   <constant>CURLOPT_HTTPGET</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para restablecer el método de solicitud HTTP a <literal>GET</literal>. Como <literal>GET</literal> es
    el valor por omisión, esto solo es necesario si la solicitud
    de solicitud ha sido cambiada.
    Disponible a partir de cURL 7.8.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-httpheader">
  <term>
   <constant>CURLOPT_HTTPHEADER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>array</type> de campos de encabezado HTTP a definir. Este array debe estar en el formato
    <code>
     array('Content-type: text/plain', 'Content-length: 100')
    </code>
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-httpproxytunnel">
  <term>
   <constant>CURLOPT_HTTPPROXYTUNNEL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para tunelizar a través de un proxy HTTP dado.
    Disponible a partir de cURL 7.3.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-http-content-decoding">
  <term>
   <constant>CURLOPT_HTTP_CONTENT_DECODING</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &false; para desactivar el decodificado automático del contenido de respuesta.
    Disponible a partir de cURL 7.16.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-http-transfer-decoding">
  <term>
   <constant>CURLOPT_HTTP_TRANSFER_DECODING</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Si se define en <literal>0</literal>, el decodificado de transferencia está desactivado.
    Si se define en <literal>1</literal>, el decodificado de transferencia está activado.
    cURL hace el decodificado de transferencia por partes por omisión
    a menos que esta opción se defina en <literal>0</literal>.
    Por omisión en <literal>1</literal>.
    Disponible a partir de cURL 7.16.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-http-version">
  <term>
   <constant>CURLOPT_HTTP_VERSION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en una de las constantes
    <constant>CURL_HTTP_VERSION_
     <replaceable>*</replaceable>
    </constant>
    para que cURL use la versión HTTP especificada.
    Disponible a partir de cURL 7.9.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ignore-content-length">
  <term>
   <constant>CURLOPT_IGNORE_CONTENT_LENGTH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Si se define en <literal>1</literal>,
    ignora el encabezado <literal>Content-Length</literal> en la respuesta HTTP
    e ignora la solicitud o dependencia de este para las transferencias FTP.
    Por omisión en <literal>0</literal>.
    Disponible a partir de cURL 7.14.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-infile">
  <term>
   <constant>CURLOPT_INFILE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Acepta un manejador de fichero <type>resource</type> hacia el fichero desde el que debe leerse la transferencia
    durante la descarga.
    Disponible a partir de cURL 7.1.0 y deprecado a partir de cURL 7.9.7.
    Use <constant>CURLOPT_READDATA</constant> en su lugar.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-infilesize">
  <term>
   <constant>CURLOPT_INFILESIZE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tamaño esperado, en bytes, del fichero al enviar un fichero
    a un sitio remoto. Es de notar que el uso de esta opción no evitará
    que cURL envíe más datos, ya que lo que se envía depende exactamente de
    <constant>CURLOPT_READFUNCTION</constant>.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-interface">
  <term>
   <constant>CURLOPT_INTERFACE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en una <type>string</type> que contiene el nombre de la interfaz de red saliente a usar.
    Esto puede ser un nombre de interfaz, una dirección IP o un nombre de host.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ipresolve">
  <term>
   <constant>CURLOPT_IPRESOLVE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Permite a una aplicación seleccionar el tipo de direcciones IP a utilizar durante
    la resolución de nombres de host. Esto solo es interesante al utilizar nombres de host que
    resuelven direcciones usando más de una versión de IP.
    Definir en una de las constantes
    <constant>CURL_IPRESOLVE_
     <replaceable>*</replaceable>
    </constant>
    .
    El valor por omisión es <constant>CURL_IPRESOLVE_WHATEVER</constant>.
    Disponible a partir de cURL 7.10.8.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-issuercert">
  <term>
   <constant>CURLOPT_ISSUERCERT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Si se define a un <type>string</type> que nombra un archivo que contiene un certificado CA en formato PEM,
    se realiza una verificación adicional contra el certificado del par
    para verificar que el emisor es el asociado
    con el certificado proporcionado por la opción.
    Para que el resultado de la verificación se considere un fracaso,
    esta opción debe usarse en combinación con la opción
    <constant>CURLOPT_SSL_VERIFYPEER</constant>.
    Disponible a partir de cURL 7.19.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-issuercert-blob">
  <term>
   <constant>CURLOPT_ISSUERCERT_BLOB</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Pasar un <type>string</type> que contenga datos binarios de un certificado SSL CA en formato PEM.
    Si esta opción está definida, se realiza una verificación adicional del certificado de la entidad (peer) para
    verificar que el emisor es el asociado al certificado proporcionado por esta opción.
    Disponible a partir de PHP 8.1.0 y cURL 7.71.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-keep-sending-on-error">
  <term>
   <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para continuar enviando el cuerpo de la petición si el código HTTP devuelto es superior o igual a <literal>
    300</literal>.
    La acción por omisión es detener el envío
    y cerrar el flujo o la conexión. Adecuado para la autenticación NTLM manual.
    La mayoría de las aplicaciones no necesitan esta opción.
    Disponible a partir de PHP 7.3.0 y cURL 7.51.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-keypasswd">
  <term>
   <constant>CURLOPT_KEYPASSWD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en un <type>string</type> con la contraseña requerida para usar el
    <constant>CURLOPT_SSLKEY</constant>
    o <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>.
    Definir esta opción en &null; desactiva el uso de una contraseña para estas opciones.
    Disponible a partir de cURL 7.17.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-krb4level">
  <term>
   <constant>CURLOPT_KRB4LEVEL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    La seguridad KRB4 (Kerberos 4). Cualquier valor <type>string</type> siguiente
    (en orden del menos al más potente) es válido:
    <simplelist type="inline">
     <member>
      <literal>clear</literal>
     </member>
     <member>
      <literal>safe</literal>
     </member>
     <member>
      <literal>confidential</literal>
     </member>
     <member>
      <literal>private</literal>
     </member>
    </simplelist>
    .
    Si el <type>string</type> no coincide con uno de estos valores,
    <literal>private</literal>
    es usado. Definir esta opción en &null;
    desactivará la seguridad KRB4. Actualmente, la seguridad KRB4 solo funciona
    con transacciones FTP.
    Disponible a partir de cURL 7.3.0 y obsoleto a partir de cURL 7.17.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-krblevel">
  <term>
   <constant>CURLOPT_KRBLEVEL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el nivel de seguridad Kerberos para FTP y también activa el soporte de Kerberos.
    Esto debe definirse en una de las <type>string</type>s siguientes:
    <simplelist type="inline">
     <member>
      <literal>clear</literal>
     </member>
     <member>
      <literal>safe</literal>
     </member>
     <member>
      <literal>confidential</literal>
     </member>
     <member>
      <literal>private</literal>
     </member>
    </simplelist>
    Si la opción <type>string</type> está definida pero no coincide con ninguna de estas valores,
    <literal>private</literal>
    es usado.
    Definir esta opción en &null; desactivará el soporte de Kerberos para FTP.
    Por omisión en &null;.
    Disponible a partir de cURL 7.16.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-localport">
  <term>
   <constant>CURLOPT_LOCALPORT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el número de puerto local del socket usado para la conexión.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Por omisión en <literal>0</literal>.
    Disponible a partir de cURL 7.15.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-localportrange">
  <term>
   <constant>CURLOPT_LOCALPORTRANGE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El número de intentos que cURL hace para encontrar un número de puerto local funcional,
    comenzando por el definido con <constant>CURLOPT_LOCALPORT</constant>.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Por omisión en <literal>1</literal>.
    Disponible a partir de cURL 7.15.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-login-options">
  <term>
   <constant>CURLOPT_LOGIN_OPTIONS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Puede usarse para definir opciones de conexión específicas del protocolo, tales como el
    mecanismo de autenticación preferido vía <literal>AUTH=NTLM</literal> o <literal>AUTH=*</literal>,
    y debe usarse en conjunción con la opción
    <constant>CURLOPT_USERNAME</constant>.
    Disponible a partir de PHP 7.0.7 y cURL 7.34.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-low-speed-limit">
  <term>
   <constant>CURLOPT_LOW_SPEED_LIMIT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    La velocidad de transferencia, en bytes por segundo, que la transferencia debe ser
    inferior durante el conteo de
    <constant>CURLOPT_LOW_SPEED_TIME</constant>
    segundos antes de que PHP considere la transferencia demasiado lenta y la interrumpa.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-low-speed-time">
  <term>
   <constant>CURLOPT_LOW_SPEED_TIME</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El número de segundos que la velocidad de transferencia debe ser inferior
    a <constant>CURLOPT_LOW_SPEED_LIMIT</constant> antes de que PHP considere
    la transferencia demasiado lenta y la interrumpa.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-mail-auth">
  <term>
   <constant>CURLOPT_MAIL_AUTH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>string</type> con la dirección de autenticación (identidad)
    de un mensaje enviado que es reenviado a otro servidor.
    Esta dirección no debe especificarse entre paréntesis
    (<literal>&gt;&lt;</literal>).
    Si se usa un <type>string</type> vacío, entonces se envía un par de paréntesis por cURL
    como requerido por la RFC 2554.
    Disponible a partir de cURL 7.25.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-mail-from">
  <term>
   <constant>CURLOPT_MAIL_FROM</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>string</type> con la dirección de correo electrónico del remitente al enviar un correo SMTP.
    La dirección de correo electrónico debe especificarse con paréntesis
    (<literal>&gt;&lt;</literal>) alrededor de ella,
    que si no están especificados son añadidos automáticamente.
    Si este parámetro no está especificado, se envía una dirección vacía
    al servidor SMTP que podría causar el rechazo del correo.
    Disponible a partir de cURL 7.20.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-mail-rcpt">
  <term>
   <constant>CURLOPT_MAIL_RCPT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>array</type> de <type>string</type>s
    con los destinatarios a enviar al servidor en una petición de correo SMTP.
    Cada destinatario debe especificarse entre paréntesis
    (<literal>&gt;&lt;</literal>).
    Si un paréntesis no es usado como primer carácter,
    cURL asume que se ha proporcionado una sola dirección de correo electrónico
    y la encierra entre paréntesis.
    Disponible a partir de cURL 7.20.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-mail-rcpt-alllowfails">
  <term>
   <constant>CURLOPT_MAIL_RCPT_ALLLOWFAILS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en <literal>1</literal> para permitir que el comando <literal>RCPT TO</literal> falle para algunos
    destinatarios, lo que hace que cURL ignore los errores para los destinatarios individuales y continúe con los otros
    destinatarios aceptados.
    Si todos los destinatarios resultan en fallos y esta bandera está especificada, cURL interrumpe la conversación SMTP
    y devuelve el error recibido del último comando <literal>RCPT TO</literal>.
    Reemplazado por <constant>CURLOPT_MAIL_RCPT_ALLOWFAILS</constant> a partir de cURL 8.2.0.
    Disponible a partir de PHP 8.2.0 y cURL 7.69.0.
    Deprecado a partir de cURL 8.2.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-maxage-conn">
  <term>
   <constant>CURLOPT_MAXAGE_CONN</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tiempo máximo de inactividad permitido para una conexión existente para ser considerada para reutilización.
    Por omisión, el tiempo máximo es definido en <literal>118</literal> segundos.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de PHP 8.2.0 y cURL 7.65.0
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-maxconnects">
  <term>
   <constant>CURLOPT_MAXCONNECTS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El máximo de conexiones persistentes permitidas.
    Cuando se alcanza el límite, la más antigua en el caché es cerrada
    para evitar el aumento del número de conexiones abiertas.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de cURL 7.7.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-maxfilesize">
  <term>
   <constant>CURLOPT_MAXFILESIZE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el tamaño máximo admitido (en bytes) de un archivo a descargar.
    Si el archivo solicitado se encuentra más grande que este valor,
    la transferencia es interrumpida
    y <constant>CURLE_FILESIZE_EXCEEDED</constant> es devuelto.
    Pasar <literal>0</literal> desactiva esta opción,
    y pasar un tamaño negativo devuelve una
    <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant>.
    Si el tamaño del archivo no es conocido antes del inicio de la descarga,
    esta opción no tiene efecto.
    Para un límite de tamaño superior a <literal>2GB</literal>,
    <constant>CURLOPT_MAXFILESIZE_LARGE</constant>
    debe ser usado.
    a partir de cURL 8.4.0, esta opción también detiene las transferencias en curso
    si alcanzan este umbral.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Por omisión en <literal>0</literal>.
    Disponible a partir de cURL 7.10.8.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-maxfilesize-large">
  <term>
   <constant>CURLOPT_MAXFILESIZE_LARGE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tamaño máximo en bytes permitido para la descarga. Si el archivo solicitado se encuentra más grande que este
    valor,
    la transferencia no comenzará y <constant>CURLE_FILESIZE_EXCEEDED</constant> será devuelto.
    El tamaño del archivo no siempre es conocido antes de la descarga, y para tales archivos esta opción no tiene ningún
    efecto incluso si
    la transferencia de archivo termina siendo más grande que este límite dado.
    Disponible a partir de PHP 8.2.0 y cURL 7.11.0
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-maxlifetime-conn">
  <term>
   <constant>CURLOPT_MAXLIFETIME_CONN</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tiempo máximo en segundos, desde la creación de la conexión, permitido para una conexión
    existente para ser considerada para reutilización. Si se encuentra una conexión en el caché que es más antigua
    que este valor, será cerrada una vez que todas las transferencias en curso hayan terminado.
    Por omisión en <literal>0</literal> segundos, lo que significa que la opción está desactivada y todas las conexiones
    son elegibles para reutilización.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de PHP 8.2.0 y cURL 7.80.0
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-maxredirs">
  <term>
   <constant>CURLOPT_MAXREDIRS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    La cantidad máxima de redirecciones HTTP a seguir. Usar esta opción junto con <constant>
    CURLOPT_FOLLOWLOCATION</constant>.
    El valor por omisión de <literal>20</literal> está definido para evitar redirecciones infinitas.
    Definir en <literal>-1</literal> permite redirecciones infinitas, y <literal>0</literal> rechaza todas las
    redirecciones.
    Disponible a partir de cURL 7.5.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-max-recv-speed-large">
  <term>
   <constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Si una descarga supera esta velocidad (contada en bytes por segundo)
    en promedio acumulativo durante la transferencia, la transferencia será pausada para
    mantener la velocidad promedio inferior o igual al valor del parámetro.
    El valor por omisión es una velocidad ilimitada.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de cURL 7.15.5.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-max-send-speed-large">
  <term>
   <constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Si un envío supera esta velocidad (contada en bytes por segundo)
    en promedio acumulativo durante la transferencia, la transferencia será pausada para
    mantener la velocidad promedio inferior o igual al valor del parámetro.
    El valor por omisión es una velocidad ilimitada.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de cURL 7.15.5.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-mime-options">
  <term>
   <constant>CURLOPT_MIME_OPTIONS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir un valor a una máscara de bits de las constantes
    <constant>CURLMIMEOPT_
     <replaceable>*</replaceable>
    </constant>
    .
    Actualmente, solo hay una opción disponible: <constant>CURLMIMEOPT_FORMESCAPE</constant>.
    Disponible a partir de PHP 8.3.0 y cURL 7.81.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-mute">
  <term>
   <constant>CURLOPT_MUTE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para ser completamente silencioso con
    las funciones cURL.
    Usar <constant>CURLOPT_RETURNTRANSFER</constant> en su lugar.
    Disponible a partir de cURL 7.1.0, deprecado a partir de cURL 7.8.0
    y último disponible a partir de cURL 7.15.5.
    Eliminado a partir de PHP 7.3.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-netrc">
  <term>
   <constant>CURLOPT_NETRC</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para escanear el archivo
    <filename>~/.netrc</filename>
    para encontrar un nombre de usuario y una contraseña para el sitio remoto
    con el que se establece una conexión.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-netrc-file">
  <term>
   <constant>CURLOPT_NETRC_FILE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>string</type> que contiene el nombre completo del archivo <filename>.netrc</filename>.
    Si esta opción es omitida y <constant>CURLOPT_NETRC</constant> está definido,
    cURL verifica un archivo
    <filename>.netrc</filename>
    en el directorio personal del usuario actual.
    Disponible a partir de cURL 7.11.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-new-directory-perms">
  <term>
   <constant>CURLOPT_NEW_DIRECTORY_PERMS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el valor de los permisos (<type>int</type>) que son definidos en los directorios recién creados
    en el servidor remoto. El valor por omisión es <literal>0755</literal>.
    Los únicos protocolos que pueden usar esta opción son
    <literal>sftp://</literal>,
    <literal>scp://</literal>
    y <literal>file://</literal>.
    Disponible a partir de cURL 7.16.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-new-file-perms">
  <term>
   <constant>CURLOPT_NEW_FILE_PERMS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el valor de los permisos (<type>int</type>) que son definidos en los archivos recién creados
    en el servidor remoto. El valor por omisión es <literal>0644</literal>.
    Los únicos protocolos que pueden usar esta opción son
    <literal>sftp://</literal>,
    <literal>scp://</literal>
    y <literal>file://</literal>.
    Disponible a partir de cURL 7.16.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-nobody">
  <term>
   <constant>CURLOPT_NOBODY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para excluir el cuerpo de la salida.
    Para HTTP(S), cURL realiza una petición HEAD. Para la mayoría de los otros protocolos,
    cURL no solicita en absoluto los datos del cuerpo.
    Cambiar esto a &false; resultará en la inclusión de los datos del cuerpo en la salida.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-noprogress">
  <term>
   <constant>CURLOPT_NOPROGRESS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para desactivar la barra de progreso para las transferencias cURL.
    <note>
     <para>
      PHP define automáticamente esta opción en &true;, esto solo debería ser
      cambiado por razones de depuración.
     </para>
    </note>
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-noproxy">
  <term>
   <constant>CURLOPT_NOPROXY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>string</type> consistente en una lista separada por comas de nombres de host
    que no requieren proxy para ser alcanzados.
    Cada nombre en esta lista es comparado ya sea como un dominio
    que contiene el nombre de host o el nombre de host mismo.
    El único carácter genérico disponibles en el
    <type>string</type>
    es un simple carácter <literal>*</literal> que coincide con todos los hosts,
    desactivando efectivamente el proxy.
    Definir esta opción en un <type>string</type> vacío activa el proxy para todos los nombres de host.
    a partir de cURL 7.86.0, las direcciones IP definidas con esta opción
    pueden ser proporcionadas usando la notación CIDR.
    Disponible a partir de cURL 7.19.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-nosignal">
  <term>
   <constant>CURLOPT_NOSIGNAL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para ignorar cualquier función cURL que envíe un
    señal al proceso PHP. Esto está activado por omisión
    en los SAPI multi-hilo para que las opciones de tiempo de espera puedan siempre ser usadas.
    Disponible a partir de cURL 7.10.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-passwdfunction">
  <term>
   <constant>CURLOPT_PASSWDFUNCTION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>callable</type> con la siguiente firma:
    <methodsynopsis>
     <type>string</type>
     <methodname>
      <replaceable>callback</replaceable>
     </methodname>
     <methodparam>
      <type>resource</type>
      <parameter>curlHandle</parameter>
     </methodparam>
     <methodparam>
      <type>string</type>
      <parameter>passwordPrompt</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>maximumPasswordLength</parameter>
     </methodparam>
    </methodsynopsis>
    <variablelist role="function_parameters">
     <varlistentry>
      <term>
       <parameter>curlHandle</parameter>
      </term>
      <listitem>
       <simpara>
        El manejador cURL.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>passwordPrompt</parameter>
      </term>
      <listitem>
       <simpara>
        Un indicador de contraseña.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>maximumPasswordLength</parameter>
      </term>
      <listitem>
       <simpara>
        La longitud máxima de la contraseña.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    El callback debe devolver un <type>string</type> que contenga la contraseña.
    Disponible a partir de cURL 7.4.2, deprecado a partir de cURL 7.11.1
    y último disponible a partir de cURL 7.15.5.
    Eliminado a partir de PHP 7.3.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-password">
  <term>
   <constant>CURLOPT_PASSWORD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en un <type>string</type> que contenga la contraseña a usar para la autenticación.
    Disponible a partir de cURL 7.19.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-path-as-is">
  <term>
   <constant>CURLOPT_PATH_AS_IS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en &true; para que cURL no altere los caminos de URL antes de transmitirlos al servidor.
    Por omisión es &false;, lo que aplana las secuencias de
    <literal>/../</literal>
    o <literal>/./</literal> que pueden existir en la parte camino de la URL
    y que están destinadas a ser eliminadas conforme a la sección 5.2.4 del RFC 3986.
    Disponible a partir de PHP 7.0.7 y cURL 7.42.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-pinnedpublickey">
  <term>
   <constant>CURLOPT_PINNEDPUBLICKEY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir un <type>string</type> con la clave pública fijada.
    El <type>string</type> puede ser el nombre del archivo de la clave pública fijada
    en formato PEM o DER. El <type>string</type> también puede ser cualquier número de hachajes sha256 codificados en
    base64 precedidos por <literal>sha256//</literal> y
    separados por <literal>;</literal>.
    Disponible a partir de PHP 7.0.7 y cURL 7.39.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-pipewait">
  <term>
   <constant>CURLOPT_PIPEWAIT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en &true; para esperar que una conexión existente confirme
    si puede hacer multiplexaje y usarlo si es el caso
    antes de crear y usar una nueva conexión.
    Disponible a partir de PHP 7.0.7 y cURL 7.43.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-port">
  <term>
   <constant>CURLOPT_PORT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>int</type> con un número de puerto alternativo para conectarse
    en lugar del especificado en la URL o del puerto por defecto para el protocolo utilizado.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-post">
  <term>
   <constant>CURLOPT_POST</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en &true; para realizar una petición HTTP <literal>POST</literal>.
    Esta petición usa el encabezado <literal>application/x-www-form-urlencoded</literal>.
    Por omisión, es &false;.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-postfields">
  <term>
   <constant>CURLOPT_POSTFIELDS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Los datos completos a enviar en una operación HTTP <literal>POST</literal>.
    Este parámetro puede pasarse ya sea
    en forma de <type>string</type> urlencodada como '<literal>para1=val1&amp;para2=val2&amp;...</literal>'
    o en forma de un <type>array</type> con el nombre del campo como clave y los datos del campo como valor.
    Si <parameter>value</parameter> es un array, el encabezado
    <literal>Content-Type</literal>
    será establecido en
    <literal>multipart/form-data</literal>.
    Los archivos pueden ser enviados usando <classname>CURLFile</classname> o <classname>CURLStringFile</classname>,
    en cuyo caso <parameter>value</parameter> debe ser un <type>array</type>.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-postquote">
  <term>
   <constant>CURLOPT_POSTQUOTE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>array</type> de <type>string</type>s de comandos FTP a ejecutar en el servidor después de ejecutar la
    petición FTP.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-postredir">
  <term>
   <constant>CURLOPT_POSTREDIR</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en un bitmask de <constant>CURL_REDIR_POST_301</constant>,
    <constant>CURL_REDIR_POST_302</constant>
    y
    <constant>CURL_REDIR_POST_303</constant>
    si el método HTTP <literal>POST</literal> debe mantenerse
    cuando <constant>CURLOPT_FOLLOWLOCATION</constant> está establecido y ocurre
    un tipo específico de redirección.
    Disponible a partir de cURL 7.19.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-pre-proxy">
  <term>
   <constant>CURLOPT_PRE_PROXY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establece una cadena <type>string</type> que contiene el nombre de host o la dirección IP numérica
    a usar como preproxy al que cURL se conecta antes de
    conectarse al proxy HTTP(S) especificado en la opción
    <constant>CURLOPT_PROXY</constant>
    para la próxima petición.
    El preproxy solo puede ser un proxy SOCKS y debe estar prefijado por
    <literal>[scheme]://</literal>
    para especificar qué tipo de calcetín se usa.
    Una dirección IP numérica IPv6 debe escribirse entre [corchetes].
    Establecer el preproxy en un <type>string</type> vacío desactiva explícitamente el uso de un preproxy.
    Para especificar el número de puerto en este <type>string</type>, añadir
    <literal>:[port]</literal>
    al final del nombre de host. El número de puerto del proxy puede opcionalmente ser
    especificado con la opción separada <constant>CURLOPT_PROXYPORT</constant>.
    Por omisión, usa el puerto 1080 para los proxys si un puerto no está especificado.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-prequote">
  <term>
   <constant>CURLOPT_PREQUOTE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establece un array de comandos FTP a ejecutar en el servidor antes de la petición
    después de que la conexión FTP haya sido establecida.
    Estos comandos no se ejecutan cuando se solicita una lista de directorio,
    solo para las transferencias de archivos.
    Disponible a partir de cURL 7.9.5.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-private">
  <term>
   <constant>CURLOPT_PRIVATE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Cualquier dato que debería asociarse con este manejador cURL. Estos datos
    pueden luego ser recuperados con la opción
    <constant>CURLINFO_PRIVATE</constant>
    de
    <function>curl_getinfo</function>. cURL no hace nada con estos datos.
    Al usar un manejador cURL multi, estos datos privados son típicamente una
    clave única para identificar un manejador cURL estándar.
    Disponible a partir de cURL 7.10.3.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-progressfunction">
  <term>
   <constant>CURLOPT_PROGRESSFUNCTION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>callable</type> con la siguiente firma:
    <methodsynopsis>
     <type>int</type>
     <methodname>
      <replaceable>callback</replaceable>
     </methodname>
     <methodparam>
      <type>resource</type>
      <parameter>curlHandle</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>bytesToDownload</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>bytesDownloaded</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>bytesToUpload</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>bytesUploaded</parameter>
     </methodparam>
    </methodsynopsis>
    <variablelist role="function_parameters">
     <varlistentry>
      <term>
       <parameter>curlHandle</parameter>
      </term>
      <listitem>
       <simpara>
        El manejador cURL.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>bytesToDownload</parameter>
      </term>
      <listitem>
       <simpara>
        El número total de bytes esperados a descargar durante esta transferencia.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>bytesDownloaded</parameter>
      </term>
      <listitem>
       <simpara>
        El número de bytes descargados hasta ahora.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>bytesToUpload</parameter>
      </term>
      <listitem>
       <simpara>
        El número total de bytes esperados a descargar durante esta transferencia.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>bytesUploaded</parameter>
      </term>
      <listitem>
       <simpara>
        El número de bytes descargados hasta ahora.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    La devolución de llamada debe devolver un <type>int</type> con un valor no nulo para interrumpir la transferencia
    y establecer un error <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
    <note>
     <para>
      La función es llamada cuando la opción
      <constant>CURLOPT_NOPROGRESS</constant>
      está establecida en &false;.
     </para>
    </note>
    Disponible a partir de cURL 7.1.0 y obsoleto a partir de cURL 7.32.0.
    Usar <constant>CURLOPT_XFERINFOFUNCTION</constant> en su lugar.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-protocols">
  <term>
   <constant>CURLOPT_PROTOCOLS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un bitmask de valores
    <constant>CURLPROTO_
     <replaceable>*</replaceable>
    </constant>
    .
    Si se usa, este bitmask limita los protocolos que cURL puede usar en la transferencia.
    Por omisión, esto vale <constant>CURLPROTO_ALL</constant>, es decir, cURL aceptará todos los protocolos que soporta.
    Ver <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
    Disponible a partir de cURL 7.19.4 y depreciado a partir de cURL 7.85.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-protocols-str">
  <term>
   <constant>CURLOPT_PROTOCOLS_STR</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en un <type>string</type> que contiene una lista separada por comas
    de nombres de protocolos insensibles a mayúsculas/minúsculas (esquemas de URL) permitidos en la transferencia.
    Establecer en <literal>ALL</literal> para activar todos los protocolos.
    Por omisión, cURL acepta todos los protocolos para los que ha sido construido con soporte.
    Los protocolos disponibles son:
    <simplelist type="inline">
     <member>
      <literal>DICT</literal>
     </member>
     <member>
      <literal>FILE</literal>
     </member>
     <member>
      <literal>FTP</literal>
     </member>
     <member>
      <literal>FTPS</literal>
     </member>
     <member>
      <literal>GOPHER</literal>
     </member>
     <member>
      <literal>GOPHERS</literal>
     </member>
     <member>
      <literal>HTTP</literal>
     </member>
     <member>
      <literal>HTTPS</literal>
     </member>
     <member>
      <literal>IMAP</literal>
     </member>
     <member>
      <literal>IMAPS</literal>
     </member>
     <member>
      <literal>LDAP</literal>
     </member>
     <member>
      <literal>LDAPS</literal>
     </member>
     <member>
      <literal>MQTT</literal>
     </member>
     <member>
      <literal>POP3</literal>
     </member>
     <member>
      <literal>POP3S</literal>
     </member>
     <member>
      <literal>RTMP</literal>
     </member>
     <member>
      <literal>RTMPE</literal>
     </member>
     <member>
      <literal>RTMPS</literal>
     </member>
     <member>
      <literal>RTMPT</literal>
     </member>
     <member>
      <literal>RTMPTE</literal>
     </member>
     <member>
      <literal>RTMPTS</literal>
     </member>
     <member>
      <literal>RTSP</literal>
     </member>
     <member>
      <literal>SCP</literal>
     </member>
     <member>
      <literal>SFTP</literal>
     </member>
     <member>
      <literal>SMB</literal>
     </member>
     <member>
      <literal>SMBS</literal>
     </member>
     <member>
      <literal>SMTP</literal>
     </member>
     <member>
      <literal>SMTPS</literal>
     </member>
     <member>
      <literal>TELNET</literal>
     </member>
     <member>
      <literal>TFTP</literal>
     </member>
     <member>
      <literal>WS</literal>
     </member>
     <member>
      <literal>WSS</literal>
     </member>
    </simplelist>
    .
    Disponible a partir de PHP 8.3.0 y cURL 7.85.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy">
  <term>
   <constant>CURLOPT_PROXY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el proxy HTTP a través del cual realizar las peticiones.
    Esto debe ser el nombre de host, la dirección IP numérica en notación decimal
    o una dirección IPv6 numérica escrita entre [corchetes].
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxyauth">
  <term>
   <constant>CURLOPT_PROXYAUTH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un bitmask de los métodos de autenticación HTTP
    (
    <constant>CURLAUTH_
     <replaceable>*</replaceable>
    </constant>
    )
    a usar para la conexión al proxy.
    Para la autenticación por proxy, solo <constant>CURLAUTH_BASIC</constant> y
    <constant>CURLAUTH_NTLM</constant>
    están actualmente soportados.
    Por omisión, es <constant>CURLAUTH_BASIC</constant>.
    Disponible a partir de cURL 7.10.7.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxyheader">
  <term>
   <constant>CURLOPT_PROXYHEADER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>array</type> de encabezados HTTP personalizados como <type>string</type> a enviar al proxy.
    Disponible a partir de PHP 7.0.7 y cURL 7.37.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxypassword">
  <term>
   <constant>CURLOPT_PROXYPASSWORD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establece un <type>string</type> con la contraseña a usar para la autenticación con el proxy.
    Disponible a partir de cURL 7.19.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxyport">
  <term>
   <constant>CURLOPT_PROXYPORT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>int</type> con el número de puerto del proxy a usar para la conexión.
    Este número de puerto también puede ser establecido en <constant>CURLOPT_PROXY</constant>.
    Establecerlo en cero hace que cURL use el número de puerto por defecto del proxy
    o el número de puerto especificado en la cadena de caracteres de la URL del proxy.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxytype">
  <term>
   <constant>CURLOPT_PROXYTYPE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establece el tipo de proxy a una de las constantes
    <constant>CURLPROXY_
     <replaceable>*</replaceable>
    </constant>
    .
    Por omisión, es <constant>CURLPROXY_HTTP</constant>.
    Disponible a partir de cURL 7.10.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxyusername">
  <term>
   <constant>CURLOPT_PROXYUSERNAME</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establece un <type>string</type> con el nombre de usuario a usar para la autenticación con el proxy.
    Disponible a partir de cURL 7.19.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxyuserpwd">
  <term>
   <constant>CURLOPT_PROXYUSERPWD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> que contiene un nombre de usuario y una contraseña en el formato
    <literal>[nombre_usuario]:[contraseña]</literal>
    a usar para la
    conexión al proxy.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-cainfo">
  <term>
   <constant>CURLOPT_PROXY_CAINFO</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    La ruta al archivo de certificados de la Autoridad de Certificación (CA) del proxy. Establecer la ruta como un
    <type>string</type>
    que nombre un archivo que contenga uno o más certificados
    para verificar el proxy HTTPS.
    Esta opción es para conectarse a un proxy HTTPS, no a un servidor HTTPS.
    El valor por defecto es la ruta del sistema donde se supone que está almacenado el paquete cacert de cURL
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-cainfo-blob">
  <term>
   <constant>CURLOPT_PROXY_CAINFO_BLOB</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el nombre del archivo PEM que contiene uno o más certificados para verificar el proxy
    HTTPS.
    Esta opción es para conectarse a un proxy HTTPS, no a un servidor HTTPS.
    Por defecto, la ruta del sistema donde se supone que está almacenado el paquete cacert de cURL.
    Disponible a partir de PHP 8.2.0 y cURL 7.77.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-capath">
  <term>
   <constant>CURLOPT_PROXY_CAPATH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el directorio que contiene varios certificados CA para verificar el proxy HTTPS.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-crlfile">
  <term>
   <constant>CURLOPT_PROXY_CRLFILE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en un <type>string</type> con el nombre de archivo que contiene la lista de revocación de certificados
    (CRL)
    en formato PEM a usar en la validación del certificado que ocurre durante
    el intercambio SSL.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-issuercert">
  <term>
   <constant>CURLOPT_PROXY_ISSUERCERT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El nombre de archivo del certificado SSL del emisor del proxy como <type>string</type>.
    Disponible a partir de PHP 8.1.0 y cURL 7.71.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-issuercert-blob">
  <term>
   <constant>CURLOPT_PROXY_ISSUERCERT_BLOB</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el certificado SSL del emisor del proxy a partir del blob de memoria.
    Disponible a partir de PHP 8.1.0 y cURL 7.71.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-keypasswd">
  <term>
   <constant>CURLOPT_PROXY_KEYPASSWD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establece el <type>string</type> a usar como contraseña para cargar la clave privada
    <constant>CURLOPT_PROXY_SSLKEY</constant>.
    Una frase secreta no es necesaria para cargar un certificado,
    pero es requerida para cargar una clave privada.
    Esta opción es para conectarse a un proxy HTTPS, no a un servidor HTTPS.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-pinnedpublickey">
  <term>
   <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establece la clave pública anclada para el proxy HTTPS.
    El <type>string</type> puede ser el nombre de archivo de la clave pública anclada
    que debe estar en formato
    <literal>PEM</literal>
    o <literal>DER</literal>.
    El <type>string</type> también puede ser cualquier número de hachados sha256 codificados en base64
    precedidos por <literal>sha256//</literal> y separados por <literal>;</literal>.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-service-name">
  <term>
   <constant>CURLOPT_PROXY_SERVICE_NAME</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el nombre del servicio de autenticación del proxy.
    Disponible a partir de PHP 7.0.7, cURL 7.43.0 (para proxys HTTP) y cURL 7.49.0 (para proxys SOCKS5).
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-sslcert">
  <term>
   <constant>CURLOPT_PROXY_SSLCERT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el nombre de archivo del certificado cliente usado para conectarse al proxy HTTPS.
    El formato por defecto es <literal>P12</literal> en Secure Transport y <literal>PEM</literal> en otros motores,
    y puede ser cambiado con <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>.
    Con NSS o Secure Transport, esto también puede ser el sobrenombre del certificado
    usado para la autenticación tal como está nombrado en la base de datos de seguridad.
    Si un archivo del directorio actual debe ser usado,
    debe ser precedido por
    <literal>./</literal>
    para evitar cualquier confusión con un sobrenombre.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-sslcerttype">
  <term>
   <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el formato del certificado cliente usado al conectarse a un proxy HTTPS.
    Los formatos soportados son <literal>PEM</literal> y <literal>DER</literal>, excepto con Secure Transport.
    OpenSSL (versiones 0.9.3 y posteriores) y Secure Transport
    (en iOS 5 o posterior, o OS X 10.7 o posterior) también soportan <literal>P12</literal> para
    archivos codificados en PKCS#12. Por defecto, es <literal>PEM</literal>.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-sslcert-blob">
  <term>
   <constant>CURLOPT_PROXY_SSLCERT_BLOB</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el certificado cliente SSL del proxy.
    Disponible a partir de PHP 8.1.0 y cURL 7.71.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-sslkey">
  <term>
   <constant>CURLOPT_PROXY_SSLKEY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el nombre de archivo de la clave privada
    usada para conectarse al proxy HTTPS.
    El formato por defecto es <literal>PEM</literal> y puede ser modificado con
    <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>.
    (iOS y Mac OS X solo) Esta opción es ignorada si cURL ha sido compilado
    con Secure Transport. Disponible si compilado con TLS.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-sslkeytype">
  <term>
   <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el formato de la clave privada.
    Los formatos soportados son:
    <simplelist type="inline">
     <member>
      <literal>PEM</literal>
     </member>
     <member>
      <literal>DER</literal>
     </member>
     <member>
      <literal>ENG</literal>
     </member>
    </simplelist>
    .
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-sslkey-blob">
  <term>
   <constant>CURLOPT_PROXY_SSLKEY_BLOB</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con la clave privada usada para conectarse al proxy HTTPS.
    Disponible a partir de PHP 8.1.0 y cURL 7.71.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-sslversion">
  <term>
   <constant>CURLOPT_PROXY_SSLVERSION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establece la versión TLS del proxy HTTPS preferida en una de las constantes
    <constant>CURL_SSLVERSION_
     <replaceable>*</replaceable>
    </constant>
    .
    Por defecto, esto corresponde a <constant>CURL_SSLVERSION_DEFAULT</constant>.
    <warning>
     <simpara>
      Es preferible no establecer esta opción y dejar el valor por defecto
      <constant>CURL_SSLVERSION_DEFAULT</constant>
      que intentará determinar la versión del protocolo SSL remoto.
     </simpara>
    </warning>
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-ssl-cipher-list">
  <term>
   <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con una lista de cifrados separados por dos puntos a usar para la conexión al proxy HTTPS.
    Cuando se usa con OpenSSL, comas y espacios también son aceptables como separadores,
    y <literal>!</literal>, <literal>-</literal> y <literal>+</literal> pueden ser usados como operadores.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-ssl-options">
  <term>
   <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establece las opciones de comportamiento SSL del proxy, que es un bitmask de las
    constantes
    <constant>CURLSSLOPT_
     <replaceable>*</replaceable>
    </constant>
    .
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-ssl-verifyhost">
  <term>
   <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en <literal>2</literal> para verificar en los campos de nombre del certificado del proxy
    contra el nombre del proxy. Cuando se establece en <literal>0</literal>, la conexión tiene éxito
    independientemente de los nombres utilizados en el certificado. ¡Use esta capacidad con precaución!
    Establecer en <literal>1</literal> a partir de cURL 7.28.0 y versiones anteriores como opción de depuración.
    Establecer en <literal>1</literal> a partir de cURL 7.28.1 a 7.65.3 <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> es
    devuelto.
    A partir de cURL 7.66.0, <literal>1</literal> y <literal>2</literal> se tratan como el mismo valor.
    Por defecto, el valor de esta opción debe mantenerse en <literal>2</literal>.
    En entornos de producción, el valor de esta opción debe permanecer en <literal>2</literal>.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-ssl-verifypeer">
  <term>
   <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en &false; para detener cURL de verificar el certificado del proxy.
    Certificados alternativos a verificar pueden ser
    especificados con la opción
    <constant>CURLOPT_PROXY_CAINFO</constant>
    o un directorio de certificados puede ser especificado con la opción
    <constant>CURLOPT_PROXY_CAPATH</constant>.
    Cuando está definido en &false;, la verificación del certificado del proxy tiene éxito independientemente.
    &true; por defecto.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-tls13-ciphers">
  <term>
   <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> con una lista de cifrados separados por dos puntos para usar en la conexión al proxy a
    través de TLS 1.3.
    Esta opción se usa actualmente solo cuando cURL está construido para usar OpenSSL 1.1.1 o una versión posterior.
    Al usar otro backend SSL, las suites de cifrado TLS 1.3 pueden ser definidas
    con la opción <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>.
    Disponible a partir de PHP 7.3.0 y cURL 7.61.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-tlsauth-password">
  <term>
   <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> que contiene la contraseña a usar para el método de autenticación TLS especificado con el
    <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Requiere también que la opción
    <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
    esté definida.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-tlsauth-type">
  <term>
   <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El método de autenticación TLS usado para la conexión HTTPS.
    El método soportado es <literal>SRP</literal>.
    <note>
     <para>
      La autenticación Secure Remote Password (SRP) para TLS proporciona autenticación mutua
      si ambas partes tienen un secreto compartido. Para usar TLS-SRP, las opciones
      <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
      y
      <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
      también deben estar definidas.
     </para>
    </note>
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-tlsauth-username">
  <term>
   <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El nombre de usuario a usar para el método de autenticación TLS del proxy HTTPS especificado con la opción
    <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Requiere también que la opción
    <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
    esté definida.
    Disponible a partir de PHP 7.3.0 y cURL 7.52.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-proxy-transfer-mode">
  <term>
   <constant>CURLOPT_PROXY_TRANSFER_MODE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en <literal>1</literal> para definir el modo de transferencia (binario o ASCII)
    para las transferencias FTP realizadas a través de un proxy HTTP, añadiendo
    <literal>type=a</literal>
    o <literal>type=i</literal> a la URL.
    Sin este parámetro o si está definido en <literal>0</literal>,
    <constant>CURLOPT_TRANSFERTEXT</constant>
    no tiene ningún efecto
    al usar FTP a través de un proxy.
    Por defecto en <literal>0</literal>.
    Disponible a partir de cURL 7.18.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-put">
  <term>
   <constant>CURLOPT_PUT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para realizar una solicitud HTTP PUT de un archivo. El archivo a subir
    debe ser definido con <constant>CURLOPT_READDATA</constant> y
    <constant>CURLOPT_INFILESIZE</constant>.
    Disponible a partir de cURL 7.1.0 y obsoleto a partir de cURL 7.12.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-quick-exit">
  <term>
   <constant>CURLOPT_QUICK_EXIT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en &true; para que cURL ignore la limpieza de recursos al recuperar un tiempo límite.
    Esto permite una terminación rápida del proceso cURL a costa de una posible fuga de recursos asociados.
    Disponible a partir de PHP 8.3.0 y cURL 7.87.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-quote">
  <term>
   <constant>CURLOPT_QUOTE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>array</type> de comandos FTP para ejecutar en el servidor antes de la
    solicitud FTP.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-random-file">
  <term>
   <constant>CURLOPT_RANDOM_FILE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> con un nombre de archivo para usar para inicializar el generador de números aleatorios para
    SSL.
    Disponible a partir de cURL 7.7.0 y obsoleto a partir de cURL 7.84.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-range">
  <term>
   <constant>CURLOPT_RANGE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> con el/los rango(s) de datos a recuperar en formato <literal>X-Y</literal>, donde X o Y son
    opcionales. Las transferencias HTTP
    también soportan múltiples intervalos, separados por comas en formato
    <literal>X-Y,N-M</literal>.
    Establecer en &null; para desactivar la solicitud de un rango de bytes.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-readdata">
  <term>
   <constant>CURLOPT_READDATA</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un puntero de archivo <type>resource</type> que será usado por la función de lectura de archivo
    definida con <constant>CURLOPT_READFUNCTION</constant>.
    Disponible a partir de cURL 7.9.7.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-readfunction">
  <term>
   <constant>CURLOPT_READFUNCTION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>callable</type> con la siguiente firma:
    <methodsynopsis>
     <type>string</type>
     <methodname>
      <replaceable>callback</replaceable>
     </methodname>
     <methodparam>
      <type>resource</type>
      <parameter>curlHandle</parameter>
     </methodparam>
     <methodparam>
      <type>resource</type>
      <parameter>streamResource</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>maxAmountOfDataToRead</parameter>
     </methodparam>
    </methodsynopsis>
    <variablelist role="function_parameters">
     <varlistentry>
      <term>
       <parameter>curlHandle</parameter>
      </term>
      <listitem>
       <simpara>
        El manejador cURL.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>streamResource</parameter>
      </term>
      <listitem>
       <simpara>
        Recurso de flujo <type>resource</type> proporcionado a cURL a través de la opción
        <constant>CURLOPT_READDATA</constant>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>maxAmountOfDataToRead</parameter>
      </term>
      <listitem>
       <simpara>
        La cantidad máxima de datos a leer.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    La devolución de llamada debe devolver una
    <type>string</type>
    de una longitud igual o inferior a la cantidad de datos solicitados,
    típicamente leyéndola desde el <type>stream</type> de flujo pasado. Debe
    devolver una <type>string</type> vacía para indicar <literal>fin de archivo</literal>.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-redir-protocols">
  <term>
   <constant>CURLOPT_REDIR_PROTOCOLS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una máscara de bits de valores
    <constant>CURLPROTO_
     <replaceable>*</replaceable>
    </constant>
    que
    limita los protocolos que cURL puede usar en una transferencia que sigue en una
    redirección cuando <constant>CURLOPT_FOLLOWLOCATION</constant> está activado.
    Esto permite limitar ciertas transferencias para que solo usen un subconjunto de protocolos durante las
    redirecciones.
    A partir de cURL 7.19.4, por defecto, cURL permitirá todos los protocolos, excepto <literal>FILE
   </literal> y <literal>SCP</literal>.
    Antes de cURL 7.19.4, cURL seguía sin condición todos los protocolos soportados.
    Ver también <constant>CURLOPT_PROTOCOLS</constant> para los valores constantes de protocolo.
    Disponible a partir de cURL 7.19.4 y obsoleto a partir de cURL 7.85.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-redir-protocols-str">
  <term>
   <constant>CURLOPT_REDIR_PROTOCOLS_STR</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en una <type>string</type> con una lista separada por comas
    de nombres de protocolos insensibles a mayúsculas/minúsculas (esquemas de URL)
    para permitir durante una redirección cuando
    <constant>CURLOPT_FOLLOWLOCATION</constant>
    está activado.
    Establecer en <literal>ALL</literal> para activar todos los protocolos.
    A partir de cURL 7.65.2, esto por defecto es <literal>FTP</literal>,
    <literal>FTPS</literal>, <literal>HTTP</literal> y <literal>HTTPS</literal>.
    De cURL 7.40.0 a 7.65.1, esto por defecto es todos los protocolos excepto
    <literal>FILE</literal>, <literal>SCP</literal>, <literal>SMB</literal> y
    <literal>SMBS</literal>.
    Antes de cURL 7.40.0, esto por defecto es todos los protocolos excepto
    <literal>FILE</literal>
    y <literal>SCP</literal>.
    Los protocolos disponibles son:
    <simplelist type="inline">
     <member>
      <literal>DICT</literal>
     </member>
     <member>
      <literal>FILE</literal>
     </member>
     <member>
      <literal>FTP</literal>
     </member>
     <member>
      <literal>FTPS</literal>
     </member>
     <member>
      <literal>GOPHER</literal>
     </member>
     <member>
      <literal>GOPHERS</literal>
     </member>
     <member>
      <literal>HTTP</literal>
     </member>
     <member>
      <literal>HTTPS</literal>
     </member>
     <member>
      <literal>IMAP</literal>
     </member>
     <member>
      <literal>IMAPS</literal>
     </member>
     <member>
      <literal>LDAP</literal>
     </member>
     <member>
      <literal>LDAPS</literal>
     </member>
     <member>
      <literal>MQTT</literal>
     </member>
     <member>
      <literal>POP3</literal>
     </member>
     <member>
      <literal>POP3S</literal>
     </member>
     <member>
      <literal>RTMP</literal>
     </member>
     <member>
      <literal>RTMPE</literal>
     </member>
     <member>
      <literal>RTMPS</literal>
     </member>
     <member>
      <literal>RTMPT</literal>
     </member>
     <member>
      <literal>RTMPTE</literal>
     </member>
     <member>
      <literal>RTMPTS</literal>
     </member>
     <member>
      <literal>RTSP</literal>
     </member>
     <member>
      <literal>SCP</literal>
     </member>
     <member>
      <literal>SFTP</literal>
     </member>
     <member>
      <literal>SMB</literal>
     </member>
     <member>
      <literal>SMBS</literal>
     </member>
     <member>
      <literal>SMTP</literal>
     </member>
     <member>
      <literal>SMTPS</literal>
     </member>
     <member>
      <literal>TELNET</literal>
     </member>
     <member>
      <literal>TFTP</literal>
     </member>
     <member>
      <literal>WS</literal>
     </member>
     <member>
      <literal>WSS</literal>
     </member>
    </simplelist>
    .
    Disponible a partir de PHP 8.3.0 y cURL 7.85.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-referer">
  <term>
   <constant>CURLOPT_REFERER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> que contiene el contenido del encabezado
    <literal>Referer:</literal>
    para usar en una solicitud HTTP.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-request-target">
  <term>
   <constant>CURLOPT_REQUEST_TARGET</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> para usar en la solicitud entrante
    en lugar de la ruta extraída de la URL.
    Disponible a partir de PHP 7.3.0 y cURL 7.55.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-resolve">
  <term>
   <constant>CURLOPT_RESOLVE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Proporcionar un <type>array</type> de <type>string</type>s separados por dos puntos
    con direcciones personalizadas para pares de host y puerto específicos en el siguiente formato:
    <code>
     array(
     "example.com:80:127.0.0.1",
     "example2.com:443:127.0.0.2",
     )
    </code>
    Disponible a partir de cURL 7.21.3.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-resume-from">
  <term>
   <constant>CURLOPT_RESUME_FROM</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El desplazamiento, en bytes, para reanudar una transferencia.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-returntransfer">
  <term>
   <constant>CURLOPT_RETURNTRANSFER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para devolver la respuesta como <type>string</type> de la función
    <function>curl_exec</function>
    en lugar de mostrarla directamente.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-rtsp-client-cseq">
  <term>
   <constant>CURLOPT_RTSP_CLIENT_CSEQ</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>int</type> con el número CSEQ para emitir en la próxima solicitud RTSP.
    Usar si la aplicación reanuda una conexión previamente interrumpida.
    El CSEQ se incrementa a partir de este nuevo número posteriormente.
    Por defecto en <literal>0</literal>.
    Disponible a partir de cURL 7.20.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-rtsp-request">
  <term>
   <constant>CURLOPT_RTSP_REQUEST</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el tipo de solicitud RTSP a realizar.
    Debe ser una de las constantes
    <constant>CURL_RTSPREQ_
     <replaceable>*</replaceable>
    </constant>
    .
    Disponible a partir de cURL 7.20.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-rtsp-server-cseq">
  <term>
   <constant>CURLOPT_RTSP_SERVER_CSEQ</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>int</type> con el número CSEQ para esperar
    en la próxima solicitud RTSP del servidor.
    Esta funcionalidad (escuchar solicitudes del servidor) no está implementada.
    Por defecto en <literal>0</literal>.
    Disponible a partir de cURL 7.20.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-rtsp-session-id">
  <term>
   <constant>CURLOPT_RTSP_SESSION_ID</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>string</type> con el valor del identificador de la sesión RTSP actual para el manejador.
    Una vez que este valor se establece en un valor no-&null;,
    cURL devuelve
    <constant>CURLE_RTSP_SESSION_ERROR</constant>
    si el identificador recibido del servidor no coincide.
    Si se establece en &null;, cURL define automáticamente el identificador
    la primera vez que el servidor lo define en una respuesta.
    Por defecto en &null;
    Disponible a partir de cURL 7.20.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-rtsp-stream-uri">
  <term>
   <constant>CURLOPT_RTSP_STREAM_URI</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>string</type> con el URI del flujo sobre el que operar.
    Si no está definido, cURL define por defecto la operación en las opciones de servidor genéricas
    pasando <literal>*</literal> en lugar del URI del flujo RTSP.
    Al trabajar con RTSP,
    <literal>CURLOPT_RTSP_STREAM_URI</literal>
    indica qué URL enviar al servidor en el encabezado de solicitud
    mientras que <literal>CURLOPT_URL</literal> indica
    dónde establecer la conexión.
    Disponible a partir de cURL 7.20.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-rtsp-transport">
  <term>
   <constant>CURLOPT_RTSP_TRANSPORT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el encabezado <literal>Transport:</literal> para esta sesión RTSP.
    Disponible a partir de cURL 7.20.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-safe-upload">
  <term>
   <constant>CURLOPT_SAFE_UPLOAD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Siempre &true;, lo que desactiva el soporte del prefijo
    <literal>"@"</literal>
    para enviar archivos en <constant>CURLOPT_POSTFIELDS</constant>, lo que
    significa que los valores que comienzan con <literal>"@"</literal> pueden ser
    pasados de forma segura como campos. <classname>CURLFile</classname> puede ser
    usado para las subidas a la vez.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sasl-authzid">
  <term>
   <constant>CURLOPT_SASL_AUTHZID</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    La identidad de autorización (authzid) <type>string</type> para la transferencia. Aplicable solo a SASL PLAIN
    donde es opcional. Cuando no se especifica, solo la identidad de autenticación
    (authcid) tal como se especifica por el nombre de usuario será enviada al servidor, con la contraseña.
    El servidor deducirá el authzid del authcid cuando no se proporcione, que luego usará internamente.
    Disponible a partir de PHP 8.2.0 y cURL 7.66.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sasl-ir">
  <term>
   <constant>CURLOPT_SASL_IR</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para habilitar la inicialización de la respuesta SASL (SASL Initial Response).
    Disponible a partir de PHP 7.0.7 y cURL 7.31.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-service-name">
  <term>
   <constant>CURLOPT_SERVICE_NAME</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>string</type> con el nombre del servicio de autenticación.
    Disponible a partir de PHP 7.0.7 y cURL 7.43.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-share">
  <term>
   <constant>CURLOPT_SHARE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un resultado de <function>curl_share_init</function>. Hace que el manejador cURL
    use los datos del manejador compartido.
    Disponible a partir de cURL 7.10.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-socks5-auth">
  <term>
   <constant>CURLOPT_SOCKS5_AUTH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    <simplelist type="inline">
     <member>
      <constant>CURLAUTH_BASIC</constant>
     </member>
     <member>
      <constant>CURLAUTH_GSSAPI</constant>
     </member>
     <member>
      <constant>CURLAUTH_NONE</constant>
     </member>
    </simplelist>
    .
    Cuando más de un método está definido, cURL consultará al servidor para ver
    qué métodos soporta y elegirá el mejor.
    Por defecto, <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
    Definir el nombre de usuario y la contraseña reales con la opción <constant>CURLOPT_PROXYUSERPWD</constant>.
    Disponible a partir de PHP 7.3.0 y cURL 7.55.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-socks5-gssapi-nec">
  <term>
   <constant>CURLOPT_SOCKS5_GSSAPI_NEC</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Establecer en <literal>1</literal> para habilitar y en <literal>0</literal> para deshabilitar
    el intercambio no protegido de la negociación del modo de protección
    en el contexto de la negociación GSSAPI.
    Disponible a partir de cURL 7.19.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-socks5-gssapi-service">
  <term>
   <constant>CURLOPT_SOCKS5_GSSAPI_SERVICE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>string</type> que contiene el nombre del servicio SOCKSS.
    Por defecto en <literal>rcmd</literal>.
    Disponible a partir de cURL 7.19.4 y obsoleto a partir de cURL 7.49.0.
    Usar <constant>CURLOPT_PROXY_SERVICE_NAME</constant> en su lugar.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssh-auth-types">
  <term>
   <constant>CURLOPT_SSH_AUTH_TYPES</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una máscara de bits compuesta por una o más de las siguientes constantes:
    <simplelist type="inline">
     <member>
      <constant>CURLSSH_AUTH_PUBLICKEY</constant>
     </member>
     <member>
      <constant>CURLSSH_AUTH_PASSWORD</constant>
     </member>
     <member>
      <constant>CURLSSH_AUTH_HOST</constant>
     </member>
     <member>
      <constant>CURLSSH_AUTH_KEYBOARD</constant>
     </member>
     <member>
      <constant>CURLSSH_AUTH_AGENT</constant>
     </member>
     <member>
      <constant>CURLSSH_AUTH_ANY</constant>
     </member>
    </simplelist>
    .
    Por defecto, esto corresponde a <constant>CURLSSH_AUTH_ANY</constant>.
    Disponible a partir de cURL 7.16.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssh-compression">
  <term>
   <constant>CURLOPT_SSH_COMPRESSION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para habilitar, &false; para deshabilitar la compresión SSH integrada.
    Tenga en cuenta que el servidor puede ignorar esta solicitud.
    Por defecto, esto corresponde a &false;.
    Disponible a partir de PHP 7.3.0 y cURL 7.56.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssh-hostkeyfunction">
  <term>
   <constant>CURLOPT_SSH_HOSTKEYFUNCTION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>callable</type> que será llamado cuando la verificación de la clave del host SSH sea necesaria.
    La devolución de llamada debe tener la siguiente firma:
    <methodsynopsis>
     <type>int</type>
     <methodname>
      <replaceable>callback</replaceable>
     </methodname>
     <methodparam>
      <type>resource</type>
      <parameter>curlHandle</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>keyType</parameter>
     </methodparam>
     <methodparam>
      <type>string</type>
      <parameter>key</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>keyLength</parameter>
     </methodparam>
    </methodsynopsis>
   </para>
   <para>
    <variablelist role="function_parameters">
     <varlistentry>
      <term>
       <parameter>curlHandle</parameter>
      </term>
      <listitem>
       <simpara>
        El manejador cURL.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>keyType</parameter>
      </term>
      <listitem>
       <simpara>
        Uno de los tipos de clave
        <constant>CURLKHTYPE_
         <replaceable>*</replaceable>
        </constant>
        .
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>key</parameter>
      </term>
      <listitem>
       <simpara>
        La clave a verificar.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>keyLength</parameter>
      </term>
      <listitem>
       <simpara>
        La longitud de la clave en bytes.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    Esta opción reemplaza <constant>CURLOPT_SSH_KNOWNHOSTS</constant>.
    Disponible a partir de PHP 8.3.0 y cURL 7.84.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssh-host-public-key-md5">
  <term>
   <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> que contiene 32 dígitos hexadecimales que deben contener el
    checksum MD5 de la clave pública del host remoto, y cURL rechazará
    la conexión al host a menos que las sumas de control md5 coincidan.
    Esta opción es únicamente para transferencias SCP y SFTP.
    Disponible a partir de cURL 7.17.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssh-host-public-key-sha256">
  <term>
   <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> con el hash SHA256 codificado en base64
    de la clave pública del host remoto.
    La transferencia fallará si el hash proporcionado no coincide con el hash proporcionado por el host remoto.
    Disponible a partir de PHP 8.2.0 y cURL 7.80.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssh-knownhosts">
  <term>
   <constant>CURLOPT_SSH_KNOWNHOSTS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el nombre del archivo <filename>known_host</filename> a utilizar
    que debería usar el formato de archivo OpenSSH soportado por libssh2.
    Disponible a partir de cURL 7.19.6.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssh-private-keyfile">
  <term>
   <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El nombre del archivo de su clave privada. Si no se usa, cURL usa por omisión
    <filename>$HOME/.ssh/id_dsa</filename>
    si la variable de entorno HOME está definida,
    y solo <literal>id_dsa</literal> en el directorio actual si HOME no está definido.
    Si el archivo está protegido por contraseña, defina la contraseña con
    <constant>CURLOPT_KEYPASSWD</constant>.
    Disponible a partir de cURL 7.16.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssh-public-keyfile">
  <term>
   <constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El nombre del archivo de su clave pública. Si no se usa, cURL usa por omisión
    <filename>$HOME/.ssh/id_dsa.pub</filename>
    si la variable de entorno HOME está definida,
    y solo <literal>id_dsa.pub</literal> en el directorio actual si HOME no está definido.
    Disponible a partir de cURL 7.16.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslcert">
  <term>
   <constant>CURLOPT_SSLCERT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El nombre de un archivo que contiene un certificado en formato PEM.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslcertpasswd">
  <term>
   <constant>CURLOPT_SSLCERTPASSWD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    La contraseña requerida para usar el certificado
    <constant>CURLOPT_SSLCERT</constant>.
    Disponible a partir de cURL 7.1.0 y desaconsejado a partir de cURL 7.17.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslcerttype">
  <term>
   <constant>CURLOPT_SSLCERTTYPE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> con el formato del certificado. Los formatos soportados son :
    <simplelist type="inline">
     <member>
      <literal>PEM</literal>
     </member>
     <member>
      <literal>DER</literal>
     </member>
     <member>
      <literal>ENG</literal>
     </member>
     <member>
      <literal>P12</literal>
     </member>
    </simplelist>
    .
    <literal>P12</literal>
    (para archivos codificados en PKCS#12) está disponible a partir de OpenSSL 0.9.3.
    Por omisión, es <literal>PEM</literal>.
    Disponible a partir de cURL 7.9.3.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslcert-blob">
  <term>
   <constant>CURLOPT_SSLCERT_BLOB</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> con el certificado SSL del cliente.
    Disponible a partir de PHP 8.1.0 y cURL 7.71.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslengine">
  <term>
   <constant>CURLOPT_SSLENGINE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El identificador <type>string</type> para el motor criptográfico de la clave SSL privada
    especificada en <constant>CURLOPT_SSLKEY</constant>.
    Disponible a partir de cURL 7.9.3.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslengine-default">
  <term>
   <constant>CURLOPT_SSLENGINE_DEFAULT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El identificador del motor de criptografía usado para las operaciones de
    criptografía asimétrica.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslkey">
  <term>
   <constant>CURLOPT_SSLKEY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El nombre de un archivo que contiene una clave privada SSL.
    Disponible a partir de cURL 7.9.3.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslkeypasswd">
  <term>
   <constant>CURLOPT_SSLKEYPASSWD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    La contraseña requerida para usar la clave privada SSL
    especificada en <constant>CURLOPT_SSLKEY</constant>.
    <note>
     <para>
      Dado que esta opción contiene una contraseña sensible, no olvide mantener
      el script PHP en el que está contenido seguro.
     </para>
    </note>
    Disponible a partir de cURL 7.9.3 y desaconsejado a partir de cURL 7.17.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslkeytype">
  <term>
   <constant>CURLOPT_SSLKEYTYPE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tipo de clave privada SSL especificada en
    <constant>CURLOPT_SSLKEY</constant>. Los tipos de clave soportados son :
    <simplelist type="inline">
     <member>
      <literal>PEM</literal>
     </member>
     <member>
      <literal>DER</literal>
     </member>
     <member>
      <literal>ENG</literal>
     </member>
    </simplelist>
    .
    Por omisión, es <literal>PEM</literal>.
    Disponible a partir de cURL 7.9.3.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslkey-blob">
  <term>
   <constant>CURLOPT_SSLKEY_BLOB</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> clave privada para el certificado del cliente.
    Disponible a partir de PHP 8.1.0 y cURL 7.71.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-sslversion">
  <term>
   <constant>CURLOPT_SSLVERSION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una de
    las constantes siguientes
    <constant>CURL_SSLVERSION_
     <replaceable>*</replaceable>
    </constant>
    .
    <warning>
     <simpara>
      Es preferible no definir esta opción y dejar los valores por omisión.
      Definir esta opción a
      <constant>CURL_SSLVERSION_SSLv2</constant>
      o
      <constant>CURL_SSLVERSION_SSLv3</constant>
      es muy peligroso, dado las
      vulnerabilidades conocidas en SSLv2 y SSLv3.
     </simpara>
    </warning>
    Por omisión, es <constant>CURL_SSLVERSION_DEFAULT</constant>.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssl-cipher-list">
  <term>
   <constant>CURLOPT_SSL_CIPHER_LIST</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> separada por dos puntos de los cifrados a usar
    para la conexión TLS 1.2 (1.1, 1.0).
    Disponible a partir de cURL 7.9.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssl-ec-curves">
  <term>
   <constant>CURLOPT_SSL_EC_CURVES</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una lista de curvas elípticas delimitadas por dos puntos. Por ejemplo,
    <literal>X25519:P-521</literal>
    es una lista de dos curvas elípticas válidas.
    Esta opción define los algoritmos de intercambio de claves del cliente en el apretón de mano SSL,
    si el backend SSL de cURL está compilado para usarlo.
    Disponible a partir de PHP 8.2.0 y cURL 7.73.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssl-enable-alpn">
  <term>
   <constant>CURLOPT_SSL_ENABLE_ALPN</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &false; para deshabilitar ALPN en el apretón de mano SSL (si el backend SSL
    de cURL está compilado para usarlo), lo cual puede ser usado para
    negociar http2.
    Disponible a partir de PHP 7.0.7 y cURL 7.36.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssl-enable-npn">
  <term>
   <constant>CURLOPT_SSL_ENABLE_NPN</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &false; para deshabilitar NPN en el apretón de mano SSL (si el backend SSL
    de cURL está compilado para usarlo), lo cual puede ser usado para
    negociar http2.
    Disponible a partir de PHP 7.0.7 y cURL 7.36.0, y obsoleto a partir de cURL 7.86.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssl-falsestart">
  <term>
   <constant>CURLOPT_SSL_FALSESTART</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para habilitar y &false; para deshabilitar el inicio anticipado de TLS,
    que es un modo donde un cliente TLS comienza a enviar datos de aplicación
    antes de verificar el mensaje <literal>Finished</literal> del servidor.
    Disponible a partir de PHP 7.0.7 y cURL 7.42.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssl-options">
  <term>
   <constant>CURLOPT_SSL_OPTIONS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir las opciones de comportamiento SSL, que son una máscara de bits de las
    constantes
    <constant>CURLSSLOPT_
     <replaceable>*</replaceable>
    </constant>
    .
    Por omisión, ninguno de los bits está definido.
    Disponible a partir de PHP 7.0.7 y cURL 7.25.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssl-sessionid-cache">
  <term>
   <constant>CURLOPT_SSL_SESSIONID_CACHE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir a <literal>0</literal> para deshabilitar y a <literal>1</literal> para habilitar
    el caché de sesión SSL.
    Por omisión, todas las transferencias se realizan usando el caché habilitado.
    Disponible a partir de cURL 7.16.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssl-verifyhost">
  <term>
   <constant>CURLOPT_SSL_VERIFYHOST</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    <literal>2</literal>
    para verificar que un campo de nombre común o un campo de nombre alternativo
    en el certificado SSL del par coincide con el nombre de host proporcionado.
    <literal>0</literal>
    para no verificar los nombres.
    <literal>1</literal>
    no debe ser usado.
    En producción, el valor de esta opción
    debe mantenerse en <literal>2</literal> (valor por omisión). El soporte para el valor <literal>1</literal> fue
    eliminado a partir de cURL 7.28.1.
    Disponible a partir de cURL 7.8.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssl-verifypeer">
  <term>
   <constant>CURLOPT_SSL_VERIFYPEER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &false; para evitar que cURL verifique el certificado del
    par. Certificados alternativos a verificar pueden ser
    especificados con la opción
    <constant>CURLOPT_CAINFO</constant>
    o un directorio de certificados puede ser especificado con
    la opción <constant>CURLOPT_CAPATH</constant>.
    Por omisión, es &true; a partir de cURL 7.10.
    Paquete por omisión de certificados CA instalado a partir de cURL 7.10.
    Disponible a partir de cURL 7.4.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ssl-verifystatus">
  <term>
   <constant>CURLOPT_SSL_VERIFYSTATUS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para habilitar y &false; para deshabilitar la verificación del estado del certificado.
    Disponible a partir de PHP 7.0.7 y cURL 7.41.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-stderr">
  <term>
   <constant>CURLOPT_STDERR</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Acepta un descriptor de archivo <type>resource</type> que apunta hacia
    una ubicación alternativa para enviar errores en lugar de
    <constant>STDERR</constant>.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-stream-weight">
  <term>
   <constant>CURLOPT_STREAM_WEIGHT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir el peso numérico del flujo (un número entre <literal>1</literal> y <literal>256</literal>).
    Disponible a partir de PHP 7.0.7 y cURL 7.46.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-suppress-connect-headers">
  <term>
   <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para suprimir los encabezados de respuesta proxy CONNECT de las funciones de devolución de llamada de usuario
    <constant>CURLOPT_HEADERFUNCTION</constant>
    y <constant>CURLOPT_WRITEFUNCTION</constant>,
    cuando <constant>CURLOPT_HTTPPROXYTUNNEL</constant> es usado y una petición CONNECT es realizada.
    Por omisión, es &false;.
    Disponible a partir de PHP 7.3.0 y cURL 7.54.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tcp-fastopen">
  <term>
   <constant>CURLOPT_TCP_FASTOPEN</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para habilitar y &false; para deshabilitar TCP Fast Open.
    Disponible a partir de PHP 7.0.7 y cURL 7.49.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tcp-keepalive">
  <term>
   <constant>CURLOPT_TCP_KEEPALIVE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Si se define a <literal>1</literal>, se enviarán sondas de mantenimiento de conexión TCP. El intervalo y
    la frecuencia de estas sondas pueden ser controladas por las opciones
    <constant>CURLOPT_TCP_KEEPIDLE</constant>
    y <constant>CURLOPT_TCP_KEEPINTVL</constant>, siempre que el sistema operativo
    las soporte. Si se define a <literal>0</literal> (por omisión), las sondas de mantenimiento de conexión están
    deshabilitadas.
    El número máximo de sondas puede ser definido con la opción <constant>CURLOPT_TCP_KEEPCNT</constant>.
    Disponible a partir de cURL 7.25.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tcp-keepidle">
  <term>
   <constant>CURLOPT_TCP_KEEPIDLE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el intervalo, en segundos, que el sistema operativo esperará mientras la conexión está
    inutilizada antes de enviar sondas de mantenimiento de conexión, si <constant>CURLOPT_TCP_KEEPALIVE</constant> está
    habilitado. No todos los sistemas operativos soportan esta opción.
    El valor por omisión es <literal>60</literal>.
    Disponible a partir de cURL 7.25.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tcp-keepintvl">
  <term>
   <constant>CURLOPT_TCP_KEEPINTVL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el intervalo, en segundos, que el sistema operativo esperará entre el envío
    de sondas de mantenimiento de conexión, si <constant>CURLOPT_TCP_KEEPALIVE</constant> está habilitado.
    No todos los sistemas operativos soportan esta opción.
    El valor por omisión es <literal>60</literal>.
    Disponible a partir de cURL 7.25.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tcp-keepcnt">
  <term>
   <constant>CURLOPT_TCP_KEEPCNT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el número máximo de sondas de mantenimiento de conexión TCP.
    El valor por omisión es <literal>9</literal>.
    Disponible a partir de PHP 8.4.0 y cURL 8.9.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tcp-nodelay">
  <term>
   <constant>CURLOPT_TCP_NODELAY</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para deshabilitar el algoritmo de Nagle TCP, que intenta minimizar
    el número de pequeños paquetes en la red.
    Por omisión, es &true;.
    Disponible a partir de cURL 7.11.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-telnetoptions">
  <term>
   <constant>CURLOPT_TELNETOPTIONS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>array</type> de <type>string</type>s a pasar a las negociaciones telnet.
    Estas variables deben estar en el formato <literal>&gt;option=valor&lt;</literal>.
    cURL soporta las opciones <literal>TTYPE</literal>,
    <literal>XDISPLOC</literal>
    y <literal>NEW_ENV</literal>.
    Disponible a partir de cURL 7.7.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tftp-blksize">
  <term>
   <constant>CURLOPT_TFTP_BLKSIZE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el tamaño de bloque a usar para la transmisión de datos TFTP.
    El rango válido es de <literal>8</literal> a <literal>65464</literal> bytes.
    Por omisión, se usan <literal>512</literal> bytes si esta opción no está especificada.
    El tamaño de bloque especificado solo se usa si es soportado por el servidor remoto.
    SI el servidor no devuelve un ACK de opción
    o devuelve un ACK de opción sin tamaño de bloque,
    se usa el valor por omisión de <literal>512</literal> bytes.
    Disponible a partir de cURL 7.19.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tftp-no-options">
  <term>
   <constant>CURLOPT_TFTP_NO_OPTIONS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para no enviar solicitudes de opciones TFTP.
    Por omisión, es &false;.
    Disponible a partir de PHP 7.0.7 y cURL 7.48.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-timecondition">
  <term>
   <constant>CURLOPT_TIMECONDITION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir cómo <constant>CURLOPT_TIMEVALUE</constant> es tratado.
    Usar <constant>CURL_TIMECOND_IFMODSINCE</constant> para devolver la
    página solo si ha sido modificada desde el tiempo especificado en
    <constant>CURLOPT_TIMEVALUE</constant>. Si no ha sido modificada,
    un encabezado <literal>304 Not Modified</literal> será devuelto
    asumiendo que <constant>CURLOPT_HEADER</constant> es &true;.
    Usar <constant>CURL_TIMECOND_IFUNMODSINCE</constant> para el efecto inverso.
    Usar <constant>CURL_TIMECOND_NONE</constant> para ignorar
    <constant>CURLOPT_TIMEVALUE</constant>
    y siempre devolver la página.
    <constant>CURL_TIMECOND_NONE</constant>
    es el valor por omisión.
    Antes de cURL 7.46.0, el valor por omisión era
    <constant>CURL_TIMECOND_IFMODSINCE</constant>.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-timeout">
  <term>
   <constant>CURLOPT_TIMEOUT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El número máximo de segundos a esperar para las funciones cURL.
    Por omisión, es <literal>0</literal>, lo que significa que las funciones nunca exceden el tiempo de espera durante
    la transferencia.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-timeout-ms">
  <term>
   <constant>CURLOPT_TIMEOUT_MS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El número máximo de milisegundos a esperar para las funciones cURL
    se ejecutan.
    Si cURL está compilado para usar el resolutor de nombres estándar del sistema,
    esta parte de la conexión siempre usará una resolución de segundo completo
    para los tiempos de espera con un mínimo permitido de un segundo.
    Por omisión, es <literal>0</literal>, lo que significa que las funciones nunca exceden el tiempo de espera durante
    la transferencia.
    Disponible a partir de cURL 7.16.2.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-timevalue">
  <term>
   <constant>CURLOPT_TIMEVALUE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tiempo en segundos desde el 1 de enero de 1970. El tiempo será usado
    por <constant>CURLOPT_TIMECONDITION</constant>.
    Por omisión, es <literal>0</literal>.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-timevalue-large">
  <term>
   <constant>CURLOPT_TIMEVALUE_LARGE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tiempo en segundos desde el 1 de enero de 1970. El tiempo será usado
    por <constant>CURLOPT_TIMECONDITION</constant>. Por omisión, cero.
    La diferencia entre esta opción y
    <constant>CURLOPT_TIMEVALUE</constant>
    es el tipo del argumento. En sistemas donde 'long' solo tiene 32 bits de ancho,
    esta opción debe ser usada para definir fechas más allá del año 2038.
    Disponible a partir de PHP 7.3.0 y cURL 7.59.0
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tls13-ciphers">
  <term>
   <constant>CURLOPT_TLS13_CIPHERS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Una <type>string</type> con una lista de cifrados separados por dos puntos
    a usar para la conexión TLS 1.3.
    Esta opción actualmente solo se usa cuando cURL está compilado con OpenSSL 1.1.1 o versión posterior.
    Al usar otro backend SSL, las suites de cifrado TLS 1.3 pueden ser definidas
    con la opción <constant>CURLOPT_SSL_CIPHER_LIST</constant>.
    Disponible a partir de PHP 7.3.0 y cURL 7.61.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tlsauth-password">
  <term>
   <constant>CURLOPT_TLSAUTH_PASSWORD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tiempo de espera para las respuestas <literal>Expect: 100-continue</literal> en milisegundos.
    Por omisión, <literal>1000</literal> milisegundos.
    Esta opción acepta cualquier valor que pueda convertirse en un <type>int</type> válido.
    Disponible a partir de PHP 7.0.7 y cURL 7.36.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tlsauth-type">
  <term>
   <constant>CURLOPT_TLSAUTH_TYPE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define una <type>string</type> con el método de autenticación TLS.
    El método soportado es
    <literal>SRP</literal>
    (autenticación TLS Secure Remote Password).
    Disponible a partir de cURL 7.21.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-tlsauth-username">
  <term>
   <constant>CURLOPT_TLSAUTH_USERNAME</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define un <type>string</type> con el nombre de usuario a utilizar para el método de autenticación TLS
    especificado con la opción <constant>CURLOPT_TLSAUTH_TYPE</constant>.
    Requiere que la opción
    <constant>CURLOPT_TLSAUTH_PASSWORD</constant>
    también esté definida.
    Esta funcionalidad se basa en TLS SRP que no funciona con TLS 1.3.
    Disponible a partir de cURL 7.21.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-transfer-encoding">
  <term>
   <constant>CURLOPT_TRANSFER_ENCODING</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define a <literal>1</literal> para activar y a <literal>0</literal> para desactivar
    la solicitud de <literal>Transfer Encoding</literal> comprimido en la solicitud
    HTTP saliente. Si el servidor responde con un
    <literal>Transfer Encoding</literal>
    comprimido,
    cURL lo descomprimirá automáticamente al recibirlo.
    Por omisión, es <literal>0</literal>.
    Disponible a partir de cURL 7.21.6.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-transfertext">
  <term>
   <constant>CURLOPT_TRANSFERTEXT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para usar el modo ASCII para transferencias FTP.
    Para LDAP, recupera los datos en texto sin formato en lugar de HTML. En
    sistemas Windows, no establecerá <constant>STDOUT</constant> en
    modo binario.
    Por omisión, es &false;.
    Disponible a partir de cURL 7.1.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-unix-socket-path">
  <term>
   <constant>CURLOPT_UNIX_SOCKET_PATH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Activa el uso de sockets de dominio Unix como punto de conexión y
    define la ruta del <type>string</type> dado.
    Definir en &null; para desactivar.
    Por omisión, es &null;.
    Disponible a partir de PHP 7.0.7 y cURL 7.40.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-unrestricted-auth">
  <term>
   <constant>CURLOPT_UNRESTRICTED_AUTH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para continuar enviando el nombre de usuario y la contraseña
    al seguir las ubicaciones (usando
    <constant>CURLOPT_FOLLOWLOCATION</constant>), incluso cuando el
    nombre de host ha cambiado.
    Por omisión, es &false;.
    Disponible a partir de cURL 7.10.4.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-upkeep-interval-ms">
  <term>
   <constant>CURLOPT_UPKEEP_INTERVAL_MS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Algunos protocolos tienen mecanismos de "mantenimiento de la conexión". Estos mecanismos generalmente envían
    tráfico en las conexiones existentes para mantenerlas vivas. Esta opción define el intervalo de mantenimiento de la
    conexión.
    Actualmente, el único protocolo con un mecanismo de mantenimiento de la conexión es HTTP/2. Cuando el intervalo de
    mantenimiento de la
    conexión es excedido, un marco PING HTTP/2 es enviado en la conexión.
    Por omisión, es
    <constant>CURL_UPKEEP_INTERVAL_DEFAULT</constant>
    que actualmente es <literal>60</literal> segundos.
    Disponible a partir de PHP 8.2.0 y cURL 7.62.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-upload">
  <term>
   <constant>CURLOPT_UPLOAD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para preparar y realizar una subida.
    Por omisión, es &false;.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-upload-buffersize">
  <term>
   <constant>CURLOPT_UPLOAD_BUFFERSIZE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El tamaño de búfer preferido en bytes para la subida cURL.
    El tamaño de búfer de subida por omisión es de 64 kilobytes. El tamaño máximo de búfer permitido a ser definido es
    de 2 megabytes.
    El tamaño mínimo de búfer permitido a ser definido es de 16 kilobytes.
    Disponible a partir de PHP 8.2.0 y cURL 7.62.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-url">
  <term>
   <constant>CURLOPT_URL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    La URL a recuperar. Esto también puede ser definido durante la inicialización de una
    sesión con <function>curl_init</function>.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-use-ssl">
  <term>
   <constant>CURLOPT_USE_SSL</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Define el nivel de SSL/TLS deseado para la transferencia
    al utilizar FTP, SMTP, POP3, IMAP, etc.
    Estos son todos protocolos que comienzan en texto claro
    y son "mejorados" en SSL utilizando el comando STARTTLS.
    Definir en una de las constantes
    <constant>CURLUSESSL_
     <replaceable>*</replaceable>
    </constant>
    .
    Disponible a partir de cURL 7.17.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-useragent">
  <term>
   <constant>CURLOPT_USERAGENT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El contenido del encabezado <literal>User-Agent:</literal> a utilizar en una
    solicitud HTTP.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-username">
  <term>
   <constant>CURLOPT_USERNAME</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El nombre de usuario a utilizar en la autenticación.
    Disponible a partir de cURL 7.19.1.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-userpwd">
  <term>
   <constant>CURLOPT_USERPWD</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    El nombre de usuario y la contraseña en la forma
    <literal>[username]:[password]</literal>
    a utilizar
    para la conexión.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-verbose">
  <term>
   <constant>CURLOPT_VERBOSE</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    &true; para mostrar información detallada sobre la conexión.
    Escribe la salida en <constant>STDERR</constant>, o el archivo especificado utilizando
    <constant>CURLOPT_STDERR</constant>.
    Por omisión, es &false;.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-wildcardmatch">
  <term>
   <constant>CURLOPT_WILDCARDMATCH</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Definir en <literal>1</literal> para transferir múltiples archivos
    según un patrón de nombre de archivo.
    El patrón puede ser especificado como parte de la opción
    <constant>CURLOPT_URL</constant>,
    utilizando un patrón similar a fnmatch (Shell Pattern Matching)
    en la última parte de la URL (nombre de archivo).
    Disponible a partir de cURL 7.21.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-writefunction">
  <term>
   <constant>CURLOPT_WRITEFUNCTION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>callable</type> con la siguiente firma:
    <methodsynopsis>
     <type>int</type>
     <methodname>
      <replaceable>callback</replaceable>
     </methodname>
     <methodparam>
      <type>resource</type>
      <parameter>curlHandle</parameter>
     </methodparam>
     <methodparam>
      <type>string</type>
      <parameter>data</parameter>
     </methodparam>
    </methodsynopsis>
    <variablelist role="function_parameters">
     <varlistentry>
      <term>
       <parameter>curlHandle</parameter>
      </term>
      <listitem>
       <simpara>
        El manejador cURL.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>data</parameter>
      </term>
      <listitem>
       <simpara>
        Los datos a escribir.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    Los datos deben ser almacenados por el callback
    y el callback debe devolver el número exacto de bytes escritos
    o la transferencia será cancelada con un error.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-writeheader">
  <term>
   <constant>CURLOPT_WRITEHEADER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Acepta un manejador de archivo <type>resource</type> hacia el archivo en el cual la parte de encabezado de la
    transferencia es escrita.
    Disponible a partir de cURL 7.1.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-ws-options">
  <term>
   <constant>CURLOPT_WS_OPTIONS</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Acepta una máscara de bits para definir las opciones de comportamiento WebSocket.
    La única opción disponible es <constant>CURLWS_RAW_MODE</constant>.
    Por omisión, es <literal>0</literal>.
    Disponible a partir de PHP 8.3.0 y cURL 7.86.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-xferinfofunction">
  <term>
   <constant>CURLOPT_XFERINFOFUNCTION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>callable</type> con la siguiente firma:
    <methodsynopsis>
     <type>int</type>
     <methodname>
      <replaceable>callback</replaceable>
     </methodname>
     <methodparam>
      <type>resource</type>
      <parameter>curlHandle</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>bytesToDownload</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>bytesDownloaded</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>bytesToUpload</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>bytesUploaded</parameter>
     </methodparam>
    </methodsynopsis>
    <variablelist role="function_parameters">
     <varlistentry>
      <term>
       <parameter>curlHandle</parameter>
      </term>
      <listitem>
       <simpara>
        El manejador cURL.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>bytesToDownload</parameter>
      </term>
      <listitem>
       <simpara>
        El número total de bytes que deberían ser descargados durante esta transferencia.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>bytesDownloaded</parameter>
      </term>
      <listitem>
       <simpara>
        El número de bytes descargados hasta ahora.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>bytesToUpload</parameter>
      </term>
      <listitem>
       <simpara>
        El número total de bytes que deberían ser subidos durante esta transferencia.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>bytesUploaded</parameter>
      </term>
      <listitem>
       <simpara>
        El número de bytes subidos hasta ahora.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    Devolver <literal>1</literal> para cancelar la transferencia
    y establecer un error <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
    Disponible a partir de PHP 8.2.0 y cURL 7.32.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-server-response-timeout">
  <term>
   <constant>CURLOPT_SERVER_RESPONSE_TIMEOUT</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un tiempo de espera en segundos que cURL esperará para una respuesta de un
    servidor <acronym>FTP</acronym>, <acronym>SFTP</acronym>, <acronym>IMAP</acronym>,
    <acronym>SCP</acronym>, <acronym>SMTP</acronym>, o un servidor <acronym>POP3</acronym>.
    Esta opción reemplaza la opción existente
    <constant>CURLOPT_FTP_RESPONSE_TIMEOUT</constant>
    que está obsoleta a partir de cURL 7.85.0.
    Disponible a partir de PHP 8.4.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-xoauth2-bearer">
  <term>
   <constant>CURLOPT_XOAUTH2_BEARER</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Especifica el token de acceso OAuth 2.0.
    Definir en &null; para desactivar.
    Por omisión, es &null;.
    Disponible a partir de PHP 7.0.7 y cURL 7.33.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-prereqfunction">
  <term>
   <constant>CURLOPT_PREREQFUNCTION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Un <type>callable</type> con la siguiente firma que es llamada después de establecer la conexión,
    pero antes de que la carga útil de la solicitud (por ejemplo, la solicitud GET/POST/DELETE de una conexión HTTP)
    sea enviada, y que puede ser utilizada para cancelar o autorizar la conexión en función de la dirección IP de origen
    y los números de puerto de origen y destino:
    <methodsynopsis>
     <type>int</type>
     <methodname>
      <replaceable>callback</replaceable>
     </methodname>
     <methodparam>
      <type>CurlHandle</type>
      <parameter>curlHandle</parameter>
     </methodparam>
     <methodparam>
      <type>string</type>
      <parameter>destination_ip</parameter>
     </methodparam>
     <methodparam>
      <type>string</type>
      <parameter>local_ip</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>destination_port</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>local_port</parameter>
     </methodparam>
    </methodsynopsis>
    <variablelist role="function_parameters">
     <varlistentry>
      <term>
       <parameter>curlHandle</parameter>
      </term>
      <listitem>
       <simpara>
        El manejador cURL.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>destination_ip</parameter>
      </term>
      <listitem>
       <simpara>
        La dirección IP principal del servidor remoto establecido con esta conexión.
        Para <acronym>FTP</acronym>, es la IP de la conexión de control.
        Las direcciones IPv6 se representan sin corchetes.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>local_ip</parameter>
      </term>
      <listitem>
       <simpara>
        La dirección IP de origen para esta conexión.
        Las direcciones IPv6 se representan sin corchetes.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>destination_port</parameter>
      </term>
      <listitem>
       <simpara>
        El número de puerto principal en el servidor remoto establecido con esta conexión.
        Para <acronym>FTP</acronym>, es el puerto de la conexión de control.
        Esto puede ser un número de puerto <acronym>TCP</acronym> o <acronym>UDP</acronym> dependiendo del protocolo.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>local_port</parameter>
      </term>
      <listitem>
       <simpara>
        El número de puerto de origen para esta conexión.
        Esto puede ser un número de puerto <acronym>TCP</acronym> o <acronym>UDP</acronym> dependiendo del protocolo.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
    Devolver <constant>CURL_PREREQFUNC_OK</constant> para autorizar la solicitud, o
    <constant>CURL_PREREQFUNC_ABORT</constant>
    para cancelar la transferencia.
    Disponible a partir de PHP 8.4.0 y cURL 7.80.0.
   </para>
  </listitem>
 </varlistentry>
 <varlistentry xml:id="constant.curlopt-debugfunction">
  <term>
   <constant>CURLOPT_DEBUGFUNCTION</constant>
   (<type>int</type>)
  </term>
  <listitem>
   <para>
    Disponible a partir de PHP 8.4.0.
    Esta opción requiere la opción <constant>CURLOPT_VERBOSE</constant> activada.
    Un <type>callable</type> para reemplazar la salida verbose estándar de cURL.
    Este callback es llamado en diferentes etapas de la solicitud con información de depuración detallada.
    El callback debe coincidir con la siguiente firma:
    <methodsynopsis>
     <type>void</type>
     <methodname>
      <replaceable>callback</replaceable>
     </methodname>
     <methodparam>
      <type>CurlHandle</type>
      <parameter>curlHandle</parameter>
     </methodparam>
     <methodparam>
      <type>int</type>
      <parameter>type</parameter>
     </methodparam>
     <methodparam>
      <type>string</type>
      <parameter>data</parameter>
     </methodparam>
    </methodsynopsis>
    <variablelist role="function_parameters">
     <varlistentry>
      <term>
       <parameter>curlHandle</parameter>
      </term>
      <listitem>
       <simpara>
        El manejador cURL.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>type</parameter>
      </term>
      <listitem>
       <simpara>
        Una de las siguientes constantes que indica el tipo del valor <parameter>data</parameter>:
       </simpara>
       <variablelist xml:id="constant.curl-debugfunction.constants" role="constant_list">
        <varlistentry xml:id="constant.curlinfo-text">
         <term>
          <constant>CURLINFO_TEXT</constant>
          (<type>int</type>)
         </term>
         <listitem>
          <simpara>
           Texto informativo.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="constant.curlinfo-header-in">
         <term>
          <constant>CURLINFO_HEADER_IN</constant>
          (<type>int</type>)
         </term>
         <listitem>
          <simpara>
           Datos de encabezado (o similares a los encabezados) recibidos del par.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="constant.curlinfo-header-out-debug">
         <term>
          <constant linkend="constant.curlinfo-header-out-debug">CURLINFO_HEADER_OUT</constant>
          (<type>int</type>)
         </term>
         <listitem>
          <simpara>
           Datos de encabezado (o similares a los encabezados) enviados al par.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="constant.curlinfo-data-in">
         <term>
          <constant>CURLINFO_DATA_IN</constant>
          (<type>int</type>)
         </term>
         <listitem>
          <simpara>
           Datos de protocolo sin procesar recibidos del par.
           Incluso si los datos están codificados o comprimidos, no se proporcionan decodificados ni descomprimidos a
           este callback.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="constant.curlinfo-data-out">
         <term>
          <constant>CURLINFO_DATA_OUT</constant>
          (<type>int</type>)
         </term>
         <listitem>
          <simpara>
           Datos de protocolo enviados al par.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="constant.curlinfo-ssl-data-in">
         <term>
          <constant>CURLINFO_SSL_DATA_IN</constant>
          (<type>int</type>)
         </term>
         <listitem>
          <simpara>
           Datos <acronym>SSL</acronym>/<acronym>TLS</acronym> (binarios) recibidos del par.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="constant.curlinfo-ssl-data-out">
         <term>
          <constant>CURLINFO_SSL_DATA_OUT</constant>
          (<type>int</type>)
         </term>
         <listitem>
          <simpara>
           Datos <acronym>SSL</acronym>/<acronym>TLS</acronym> (binarios) enviados al par.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <parameter>data</parameter>
      </term>
      <listitem>
       <simpara>
        Datos de depuración detallados del tipo indicado por el parámetro <parameter>type</parameter>.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </listitem>
 </varlistentry>
</variablelist>
