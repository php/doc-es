<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: fe4e8b87d18f17394e7177917c498774b062448c Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="soapserver.addfunction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SoapServer::addFunction</refname>
  <refpurpose>Añade una o varias funciones que gestionarán las peticiones SOAP</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SoapServer">
   <modifier>public</modifier> <type>void</type><methodname>SoapServer::addFunction</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type><type>int</type></type><parameter>functions</parameter></methodparam>
  </methodsynopsis>
  <para>
   Exporta una o varias funciones para los clientes remotos.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>functions</parameter></term>
     <listitem>
      <para>
       Para exportar una sola función, debe pasarse su nombre en este argumento
       como string.
      </para>
      <para>
       Para exportar varias funciones, debe utilizarse
       un array de nombres de funciones.
      </para>
      <para>
       Para exportar todas las funciones, debe utilizarse la constante especial
       <constant>SOAP_FUNCTIONS_ALL</constant>.
      </para>
      <note>
       <para>
        <parameter>functions</parameter> debe recibir todos los argumentos de entrada
        en el mismo orden que el definido en el fichero WSDL (no debe recibir ningún parámetro de salida como argumento) y devuelve uno o varios valores. Para devolver varios valores, debe devolver un array que contenga los nombres de los parámetros de salida.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>SoapServer::addFunction</function></title>
    <programlisting role="php">
<![CDATA[
<?php

function echoString($inputString)
{
    return $inputString;
}

$server->addFunction("echoString");

function echoTwoStrings($inputString1, $inputString2)
{
    return array("outputString1" => $inputString1,
                 "outputString2" => $inputString2);
}
$server->addFunction(array("echoString", "echoTwoStrings"));

$server->addFunction(SOAP_FUNCTIONS_ALL);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SoapServer::__construct</methodname></member>
    <member><methodname>SoapServer::setClass</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
