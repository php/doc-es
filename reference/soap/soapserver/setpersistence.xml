<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 89ae180a851621c308f0ea4604ff2e919aa57a7f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="soapserver.setpersistence" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SoapServer::setPersistence</refname>
  <refpurpose>Activa el modo persistente de SoapServer</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SoapServer">
   <modifier>public</modifier> <type>void</type><methodname>SoapServer::setPersistence</methodname>
   <methodparam><type>int</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función permite cambiar la persistencia de un objeto SoapServer entre las
   peticiones. Permite guardar los datos entre las peticiones, mediante las
   sesiones PHP. Esta función solo tiene efecto después de haber exportado la lista de funciones
   mediante <methodname>SoapServer::setClass</methodname>.
  </para>
   <note>
    <para>
     La constante de persistencia <constant>SOAP_PERSISTENCE_SESSION</constant>
     hace persistentes únicamente los objetos de la clase dada, pero no
     los datos estáticos. En este caso, <varname>$this->bar</varname>
     en lugar de self::$bar.
    </para>
   </note>
  <note>
    <para>
     <constant>SOAP_PERSISTENCE_SESSION</constant> serializa los datos del objeto entre
     las peticiones. En el caso de los recursos (por ejemplo <classname>PDO</classname>),
     <link linkend="object.wakeup">__wakeup()</link> y <link linkend="object.sleep">__sleep()</link> deben ser
     utilizadas.
    </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Una de las constantes <constant>SOAP_PERSISTENCE_<replaceable>*</replaceable></constant>.
      </para>
      <para>
       <constant>SOAP_PERSISTENCE_REQUEST</constant> - Los datos de SoapServer
       no son persistentes entre las peticiones. Este es el comportamiento por
       <emphasis role="bold">omisión</emphasis> de todo objeto SoapServer después
       de llamar a setClass().
      </para>
      <para>
       <constant>SOAP_PERSISTENCE_SESSION</constant> - Los datos de SoapServer
       persisten entre las peticiones. Esto se realiza serializando los datos de
       la clase SoapServer en <varname>$_SESSION['_bogus_session_name']</varname>,
       por lo que <function>session_start</function> debe ser llamada antes de pasar
       a este modo de persistencia.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo <function>SoapServer::setPersistence</function></title>
    <programlisting role="php">
<![CDATA[
<?php
 class MyFirstPersistentSoapServer {
     private $resource; // (Por ejemplo PDO, mysqli, etc..)
     public $myvar1;
     public $myvar2;

     public function __construct() {
         $this->__wakeup(); // Se llama a nuestro wakeup para reiniciar nuestro recurso
     }

     public function __wakeup() {
         $this->resource = CodeToStartOurResourceUp();
     }

     public function __sleep() {
         // Se asegura de eliminar $resource aquí, así nuestros datos pueden persistir en sesión
         // Si se olvida, la deserialización en la próxima petición fallará y nuestro objeto
         // SoapObject no será persistente entre las peticiones.
         return array('myvar1','myvar2');
     }
 }

 try {
     session_start();
     $server = new SoapServer(null, array('uri' => $_SERVER['REQUEST_URI']));
     $server->setClass('MyFirstPersistentSoapServer');
     // setPersistence() DEBE ser llamada después de setClass(), ya que el comportamiento de setClass()
     // afecta SESSION_PERSISTENCE_REQUEST.
     $server->setPersistence(SOAP_PERSISTENCE_SESSION);
     $server->handle();
 } catch(SoapFault $e) {
     error_log("SOAP ERROR: ". $e->getMessage());
 }
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SoapServer::setClass</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
