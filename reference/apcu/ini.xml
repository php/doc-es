<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 07266b59e0062dc9194f9512b4dbdb16782c9d5d Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no Maintainer: Marqitos -->
<section xml:id="apcu.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  Aunque los ajustes predeterminados de APCu funcionan correctamente en muchas
  instalaciones, es útil considerar ajustar estos parámetros de configuración.
 </para>
 <para>
  Una cuestión importante para la configuración de APCu es
  cuál es el tamaño adecuado que debe asignarse en la memoria a APCu.
  La directiva ini que controla este parámetro es <literal>apc.shm_size</literal>.
  El párrafo a continuación es importante para responder a esta pregunta.
 </para>
 <para>
  Una vez iniciado el servidor, el script <literal>apc.php</literal>, disponible con
  la extensión, puede ser copiado en el document root y ejecutado por el
  navegador. Este script proporciona un análisis detallado del funcionamiento interno
  de APCu. Si la biblioteca GD está activada en PHP, entonces el script puede mostrar
  gráficos pertinentes.
 </para>
 <para>
  Si APCu está funcionando, el número de <literal>Cache full count</literal> (a la izquierda)
  mostrará el número de veces que el caché ha alcanzado su capacidad máxima y ha tenido que
  evacuar entradas para liberar memoria. Durante la evacuación, si
  <literal>apc.ttl</literal> ha sido especificado, APCu intentará primero eliminar las
  entradas expiradas, es decir, las entradas cuyo TTL ha expirado o las entradas
  que no tienen TTL definido y que no han sido consultadas en los últimos
  <literal>apc.ttl</literal> segundos. Si <literal>apc.ttl</literal> no ha sido
  definido o si la eliminación de las entradas expiradas no ha liberado suficiente
  espacio, APCu borrará la totalidad del caché.
 </para>
 <para>
  El número de evacuaciones debe ser mínimo en un caché bien configurado. Si el
  caché está constantemente lleno y por lo tanto liberado a la fuerza, el removimiento resultante tendrá
  efectos perjudiciales en el rendimiento del script. La manera más sencilla
  de reducir este número es asignar más memoria a APCu.
 </para>
 <para>
  Cuando APCu es compilado con mmap (Memory Mapping), solo utilizará un
  segmento de memoria, a diferencia del caso en que APCu es construido con
  SHM (SysV Shared Memory) que utiliza varios segmentos de memoria. MMAP no tiene
  un límite máximo como SHM en <literal>/proc/sys/kernel/shmmax</literal>.
  En general, el uso de MMAP es recomendado ya que reclama la memoria
  más rápidamente cuando el servidor web es reiniciado y reduce el impacto en
  la asignación de memoria al inicio.
 </para>
 <para>
  <table>
   <title>Opciones de configuración de APCu</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.apcu.enabled">apc.enabled</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.shm-segments">apc.shm_segments</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.shm-size">apc.shm_size</link></entry>
      <entry>"32M"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.entries-hint">apc.entries_hint</link></entry>
      <entry>512 * apc.shm_size</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry>Prior to APcu 5.1.25, the default was 4096</entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.ttl">apc.ttl</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.gc-ttl">apc.gc_ttl</link></entry>
      <entry>"3600"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.mmap-file-mask">apc.mmap_file_mask</link></entry>
      <entry>NULL</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.slam-defense">apc.slam_defense</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.enable-cli">apc.enable_cli</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.use-request-time">apc.use_request_time</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Anteriormente a APCu 5.1.19, el valor predeterminado era <literal>1</literal>.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.serializer">apc.serializer</link></entry>
      <entry>"php"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry>Anteriormente a APCu 5.1.15, el valor predeterminado era <literal>"default"</literal>.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.coredump-unmap">apc.coredump_unmap</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.preload-path">apc.preload_path</link></entry>
      <entry>NULL</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.apcu.enabled">
    <term>
     <parameter>apc.enabled</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      <literal>apc.enabled</literal> puede ser puesto a 0 para desactivar APC.
      Esto puede ser útil cuando APC es compilado estáticamente en PHP
      ya que no hay otra manera de desactivarlo (cuando APC es
      compilado como DSO, la línea <literal>extension</literal>
      en el fichero <literal>php.ini</literal> puede simplemente ser comentada).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.shm-segments">
    <term>
     <parameter>apc.shm_segments</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      El número de segmentos de memoria compartida a asignar al caché de compilación
      Si APC carece de memoria compartida pero que <literal>apc.shm_size</literal>
      está puesto al valor máximo permitido por el sistema, entonces aumentar
      este valor puede evitar que APC agote su memoria.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.shm-size">
    <term>
     <parameter>apc.shm_size</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      El tamaño de cada segmento de memoria compartida dado en notación abreviada
      como se indica en esta <link linkend="faq.using.shorthandbytes">FAQ</link>.
      Por defecto, algunos sistemas (incluyendo la mayoría de las variantes de BSD)
      tienen un límite muy bajo para el tamaño de un segmento de memoria compartida.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.entries-hint">
    <term>
     <parameter>apc.entries_hint</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Un "indicio" sobre el número de variables distintas que pueden ser almacenadas.
      Poner a cero o en caso de duda omitir.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.ttl">
    <term>
     <parameter>apc.ttl</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Considerar que las entradas de caché sin TTL explícito son expiradas si no han sido consultadas desde hace tantos segundos. En efecto, esto permite que estas
      entradas sean oportunamente eliminadas durante una inserción en el caché,
      o antes de una eliminación completa. Tenga en cuenta que debido a que la eliminación es
      oportunista, las entradas pueden seguir siendo legibles incluso si son
      más antiguas que <literal>apc.ttl</literal> segundos. Este parámetro no tiene ningún
      efecto sobre las entradas de caché para las cuales un TTL explícito está especificado.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.gc-ttl">
    <term>
     <parameter>apc.gc_ttl</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      El número de segundos durante los cuales una entrada de caché puede
      permanecer en la lista de recolección de basura después de haber sido retirada o invalidada.
      Las entradas son elegibles para eliminación si su número de referencias es cero, o si exceden este límite de tiempo.
      Si se establece en <literal>0</literal>, la limpieza basada en el tiempo está desactivada,
      y las entradas solo se eliminan cuando su número de referencias cae a cero.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.mmap-file-mask">
    <term>
     <parameter>apc.mmap_file_mask</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Si APCu ha sido compilado con la opción MMAP usando
      <literal>--enable-mmap</literal>, este parámetro recibe la máscara de
      fichero de tipo mktemp-style a pasar al módulo mmap para determinar
      si la región de la memoria usando mmap será guardada a través
      de un fichero o por la de la memoria compartida.
      En el caso de que el guardado se haga a través de un fichero,
      la máscara será de la forma <literal>/tmp/apc.XXXXXX</literal>
      (con exactamente 6 <literal>X</literal>).
      Para usar shm_open/mmap de la norma POSIX, la máscara debe contener
      <literal>.shm</literal>, como en el siguiente ejemplo:
      <literal>/apc.shm.XXXXXX</literal>. Este parámetro puede ser definido por
      <literal>/dev/zero</literal> para usar la interfaz
      <literal>/dev/zero</literal> del núcleo con una memoria usando mmap
      anónimamente. Dejar este parámetro indefinido forzará un mmap anónimo.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.slam-defense">
    <term>
     <parameter>apc.slam_defense</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Al inicio o durante la modificación de un fichero en un servidor
      muy ocupado, varios procesos pueden entrar en competencia
      para poner en caché el mismo fichero al mismo tiempo.
      Configurar <literal>apc.slam_defense</literal> en <literal>1</literal>
      puede ayudar a evitar que varios procesos pongan en caché
      el mismo fichero simultáneamente introduciendo un mecanismo
      de probabilidad. Si la misma clave es intentada ser puesta en caché
      en un corto lapso de tiempo por diferentes procesos, salta
      la puesta en caché para el proceso actual para mitigar los posibles
      problemas de puesta en caché.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.enable-cli">
    <term>
     <parameter>apc.enable_cli</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Principalmente usado para pruebas y depuración. Definir este
      parámetro permite activar APC en la versión CLI de PHP.
      Normalmente, no es ideal crear, alimentar y
      destruir el caché APC en cada solicitud CLI. Sin embargo, en muchos escenarios de prueba es útil poder activar
      fácilmente APC en la versión CLI de PHP.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.serializer">
    <term>
     <parameter>apc.serializer</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Este parámetro permite a APC usar un serializador de terceros
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.coredump-unmap">
    <term>
     <parameter>apc.coredump_unmap</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Activa la gestión por APC de señales, tales como SIGSEGV, que provocan
      la escritura de ficheros core dump cuando son recibidas. Cuando estas
      señales son recibidas, APC intentará desasignar el segmento de memoria
      compartida reservado a mmap con el objetivo de excluirlo del fichero core
      dump. Esta opción puede mejorar la estabilidad del sistema cuando
      se reciben señales fatales y APC está configurado con un largo
      segmento de memoria compartida.
     </para>
     <warning>
      <para>
       Esta opción es potencialmente peligrosa. Desasignar un segmento de
       memoria compartida usado por mmap en el gestor de señales
       fatales puede causar un comportamiento impredecible si ocurre un error fatal.
      </para>
     </warning>
     <note>
      <para>
       Aunque algunos núcleos pueden proporcionar la posibilidad de ignorar
       muchos tipos de memoria compartida cuando generan un fichero
       core dump, estas implementaciones también pueden ignorar importantes
       segmentos de memoria compartida como el tablero de Apache.
      </para>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.preload-path">
    <term>
     <parameter>apc.preload_path</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Opcional, define una ruta hacia el directorio donde APC cargará
      los datos del caché al inicio.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apcu.use-request-time">
    <term>
     <parameter>apc.use_request_time</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Usa el tiempo de inicio de la solicitud de la interfaz <acronym>SAPI</acronym>
      para la duración de vida (<acronym>TTL</acronym>).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
