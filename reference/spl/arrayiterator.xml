<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 077aab2687db07bcf71c2c7e26f677ea61f5916a Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<reference xml:id="class.arrayiterator" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>&class.theclass; <classname>ArrayIterator</classname></title>
 <titleabbrev>ArrayIterator</titleabbrev>

 <partintro>

<!-- {{{ ArrayIterator intro -->
  <section xml:id="arrayiterator.intro">
   &reftitle.intro;
   <para>
    Permite la eliminación de elementos y la modificación de
    claves o valores durante la iteración de <type>array</type>s o de <type>object</type>s.
   </para>
   <para>
    Para recorrer el mismo array varias veces, se recomienda
    instanciar <classname>ArrayObject</classname> y utilizar la instancia de
    <classname>ArrayIterator</classname> ya sea creada implícitamente
    utilizando &foreach; para iterar sobre el array almacenado internamente, o creando una
    llamando manualmente al método <methodname>ArrayObject::getIterator</methodname>.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="arrayiterator.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <classname>ArrayIterator</classname>
    </ooclass>

    <oointerface>
     <modifier>implements</modifier>
     <interfacename>SeekableIterator</interfacename>
    </oointerface>

    <oointerface>
     <interfacename>ArrayAccess</interfacename>
    </oointerface>

    <oointerface>
     <interfacename>Serializable</interfacename>
    </oointerface>

    <oointerface>
     <interfacename>Countable</interfacename>
    </oointerface>

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="arrayiterator.constants.std-prop-list">ArrayIterator::STD_PROP_LIST</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="arrayiterator.constants.array-as-props">ArrayIterator::ARRAY_AS_PROPS</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.arrayiterator')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[@role='ArrayIterator'])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.arrayiterator')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='ArrayIterator'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>

  </section>

  <section xml:id="arrayiterator.constants">
   &reftitle.constants;
   <section xml:id="arrayiterator.constants.flags">
    <title>Flags de ArrayIterator</title>
    <variablelist>

     <varlistentry xml:id="arrayiterator.constants.std-prop-list">
      <term><constant>ArrayIterator::STD_PROP_LIST</constant></term>
      <listitem>
       <para>
        Las propiedades del objeto conservan sus funcionalidades normales
        cuando son accedidas como lista (<function>var_dump</function>, &foreach;, etc.).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="arrayiterator.constants.array-as-props">
      <term><constant>ArrayIterator::ARRAY_AS_PROPS</constant></term>
      <listitem>
       <para>
        Las entradas pueden ser accedidas como propiedades (lectura y escritura).
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
  </section>

 </partintro>

 &reference.spl.entities.arrayiterator;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
