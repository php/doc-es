<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 60af8c2b746d51c1556cc2ddc4d4163222347b96 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.class-implements" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>class_implements</refname>
  <refpurpose>
   Devuelve las interfaces implementadas por una clase o interfaz dada
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>class_implements</methodname>
   <methodparam><type class="union"><type>object</type><type>string</type></type><parameter>object_or_class</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>autoload</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Esta función devuelve un array con los nombres de las
   interfaces que la clase <parameter>object_or_class</parameter>
   así como sus padres implementan.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>object_or_class</parameter></term>
     <listitem>
      <para>
       Un objeto (instancia) o una cadena de caracteres (nombre de la clase o de
       la interfaz).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>autoload</parameter></term>
     <listitem>
      <para>
       Define si debe <link linkend="language.oop5.autoload">autocargarse</link>
       si no está ya autocargado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un array en caso de éxito, o &false; cuando la clase dada no existe.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>class_implements</function></title>
    <programlisting role="php">
<![CDATA[
<?php

interface foo { }
class bar implements foo {}

print_r(class_implements(new bar));

// También se puede especificar el argumento como una cadena de caracteres
print_r(class_implements('bar'));

spl_autoload_register();

// Uso del autoloading para cargar la clase 'not_loaded'
print_r(class_implements('not_loaded', true));

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [foo] => foo
)
Array
(
    [foo] => foo
)
Array
(
    [interface_de_non_chargée] => interface_de_non_chargée
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Es preferible utilizar &instanceof; o la función <function>is_a</function>
    para verificar que un objeto implementa una interfaz.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>class_parents</function></member>
    <member><function>get_declared_interfaces</function></member>
    <member><function>is_a</function></member>
    <member>&instanceof;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
