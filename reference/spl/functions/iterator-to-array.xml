<?xml version='1.0' encoding='utf-8'?>
<!-- $Revision$ -->
<!-- EN-Revision: 70ac605e66b5ce0c03a345df92297f3e03f088ca Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.iterator-to-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>iterator_to_array</refname>
  <refpurpose>
   Copia un iterador en un array
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>iterator_to_array</methodname>
   <methodparam><type class="union"><type>Traversable</type><type>array</type></type><parameter>iterator</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>preserve_keys</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Copia los elementos de un iterador en un &array;.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>iterator</parameter></term>
     <listitem>
      <para>
       El iterador a copiar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>preserve_keys</parameter></term>
     <listitem>
      <para>
       Si se deben utilizar los elementos del iterador como clave.
      </para>
      <para>
       Si una clave es un <type>array</type> o un
       <type>object</type>, se generará una advertencia. Las claves &null; serán
       convertidas en una cadena vacía, las claves de tipo <type>float</type>
       serán truncadas a sus partes <type>int</type>, las claves
       de tipo <type>resource</type> generarán una advertencia y serán convertidas
       en identificador de la recurso, y las claves de tipo <type>bool</type>
       serán convertidas en enteros.
      </para>
      <note>
       <para>
        Si este argumento no está definido o está definido en &true;, las claves duplicadas
        serán sobrescritas. El último valor con una clave dada estará en el
        <type>array</type> devuelto. Definir este argumento en &false; para obtener
        todas las valores en todo caso.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un &array; que contiene los elementos del iterador
   <parameter>iterator</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.2.0</entry>
      <entry>
       El tipo de <parameter>iterator</parameter> ha sido ampliado de
       <type>Traversable</type> a
       <type class="union"><type>Traversable</type><type>array</type></type>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>iterator_to_array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$iterator = new ArrayIterator(array('recipe'=>'crêpes', 'oeufs', 'lait', 'farine'));
var_dump(iterator_to_array($iterator, true));
var_dump(iterator_to_array($iterator, false));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(4) {
  ["recipe"]=>
  string(7) "crêpes"
  [0]=>
  string(5) "oeufs"
  [1]=>
  string(4) "lait"
  [2]=>
  string(6) "farine"
}
array(4) {
  [0]=>
  string(7) "crêpes"
  [1]=>
  string(5) "oeufs"
  [2]=>
  string(4) "lait"
  [3]=>
  string(6) "farine"
}

]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
