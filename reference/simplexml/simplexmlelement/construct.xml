<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c1f37a6c270aadbbb3da56a3973ffd62197adf2b Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="simplexmlelement.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::__construct</refname>
  <refpurpose>
   Crea un nuevo objeto SimpleXMLElement
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="SimpleXMLElement">
   <modifier>public</modifier> <methodname>SimpleXMLElement::__construct</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>dataIsURL</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>namespaceOrPrefix</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>isPrefix</parameter><initializer>&false;</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Crea un nuevo objeto <classname>SimpleXMLElement</classname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Una cadena XML bien formada o la ruta de acceso o un URL que apunta a un documento XML si <parameter>dataIsURL</parameter> vale &true;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Opcionalmente utilizado para especificar
       <link linkend="libxml.constants">parámetros adicionales de Libxml</link>,
       que afectan la lectura de documentos XML. Las opciones que afectan la salida
       de los documentos XML (por ejemplo <constant>LIBXML_NOEMPTYTAG</constant>)
       son ignoradas silenciosamente.
      </para>
      <note>
       <para>
        Puede ser necesario pasar <constant>LIBXML_PARSEHUGE</constant>
        para poder tratar nodos de texto profundamente anidados o muy voluminosos.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dataIsURL</parameter></term>
     <listitem>
      <para>
       Por omisión, <parameter>dataIsURL</parameter> vale &false;. Utilice
       &true; para especificar que el parámetro <parameter>data</parameter> es
       una ruta de acceso o un URL que apunta a un documento XML en lugar de una
       cadena de datos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>namespaceOrPrefix</parameter></term>
     <listitem>
      <para>
       Prefijo de espacio de nombres o URI.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>isPrefix</parameter></term>
     <listitem>
      <para>
       &true; si <parameter>namespaceOrPrefix</parameter> es un prefijo, &false; en caso contrario.
       Valor por omisión: &false;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Produce un mensaje de error de tipo <constant>E_WARNING</constant>
   para cada error encontrado en los datos XML y
   lanza también una <classname>exception</classname> si los datos XML no pueden ser
   analizados.
  </para>
  <tip>
   <para>
    Utilice la función <function>libxml_use_internal_errors</function>
    para suprimir todos los errores XML y la función
    <function>libxml_get_errors</function> para recorrerlos.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <note>
    <para>
     Los ejemplos listados incluyen a veces <literal>examples/simplexml-data.php</literal>,
     esto hace referencia a la cadena XML del primer ejemplo de
     <link linkend="simplexml.examples-basic">el uso básico</link>.
    </para>
   </note>
   <example>
    <title>Crea un objeto SimpleXMLElement</title>
    <programlisting role="php">
<![CDATA[
<?php

include 'examples/simplexml-data.php';

$sxe = new SimpleXMLElement($xmlstr);
echo $sxe->movie[0]->title;

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
PHP: Behind the Parser
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Crea un objeto SimpleXMLElement a partir de un URL</title>
    <programlisting role="php">
<![CDATA[
<?php

$sxe = new SimpleXMLElement('http://example.org/document.xml', 0, true);
echo $sxe->asXML();

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="simplexml.examples-basic"/></member>
    <member><function>simplexml_load_string</function></member>
    <member><function>simplexml_load_file</function></member>
    <member><xref linkend="simplexml.examples-errors"/></member>
    <member><function>libxml_use_internal_errors</function></member>
    <member><function>libxml_set_streams_context</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
