<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2e60c5134e7a847c99f81eb3f7ecee1f5efeeace Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.array-udiff-uassoc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_udiff_uassoc</refname>
  <refpurpose>Calcula la diferencia entre dos arrays asociativos, compara los datos y los índices con una función de retorno</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_udiff_uassoc</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>arrays</parameter></methodparam>
   <methodparam><type>callable</type><parameter>value_compare_func</parameter></methodparam>
   <methodparam><type>callable</type><parameter>key_compare_func</parameter></methodparam>
  </methodsynopsis>
  <para>
   Calcula la diferencia entre dos arrays asociativos, compara los datos y los índices con una función de retorno.
  </para>
  <para>
   Se debe tener en cuenta que las claves se utilizan en las comparaciones, a diferencia de
   <function>array_diff</function> y <function>array_udiff</function>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       El primer array.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>arrays</parameter></term>
     <listitem>
      <para>
       Arrays a comparar
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>value_compare_func</parameter></term>
     <listitem>
      &sort.callback.description;
      &sort.callback.description.presort;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>key_compare_func</parameter></term>
     <listitem>
      <para>
       La comparación de las claves (índices) se realiza mediante la función de retorno
       <parameter>key_compare_func</parameter>. Este comportamiento difiere del de
       <function>array_udiff_assoc</function>, ya que esta última utiliza una función interna
       para comparar los índices.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un &array; que contiene todas las claves del array
   <parameter>array</parameter> que no están presentes en
   ningún otro argumento.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>array_udiff_uassoc</function></title>
    <programlisting role="php">
<![CDATA[
<?php
class cr {
    private $priv_member;
    function __construct($val)
    {
        $this->priv_member = $val;
    }

    static function comp_func_cr($a, $b)
    {
        if ($a->priv_member === $b->priv_member) return 0;
        return ($a->priv_member > $b->priv_member)? 1:-1;
    }

    static function comp_func_key($a, $b)
    {
        if ($a === $b) return 0;
        return ($a > $b)? 1:-1;
    }
}
$a = array("0.1" => new cr(9), "0.5" => new cr(12), 0 => new cr(23), 1=> new cr(4), 2 => new cr(-15),);
$b = array("0.2" => new cr(9), "0.5" => new cr(22), 0 => new cr(3), 1=> new cr(4), 2 => new cr(-15),);

$result = array_udiff_uassoc($a, $b, array("cr", "comp_func_cr"), array("cr", "comp_func_key"));
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0.1] => cr Object
        (
            [priv_member:cr:private] => 9
        )

    [0.5] => cr Object
        (
            [priv_member:cr:private] => 12
        )

    [0] => cr Object
        (
            [priv_member:cr:private] => 23
        )
)
]]>
    </screen>
   </example>
  </para>
  <simpara>
   En nuestro ejemplo, se observa que el par <literal>"1" =&gt; new cr(4)</literal>
   está presente en ambos arrays y, por lo tanto, ausente del array resultante.
   Se debe tener en cuenta que se deben proporcionar dos funciones de retorno.
  </simpara>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Se debe tener en cuenta que esta función solo verifica una dimensión de un array
    multidimensional. Por supuesto, se puede probar una dimensión
    particular utilizando, por ejemplo,
    <literal>array_udiff_uassoc($array1[0], $array2[0], "data_compare_func",
     "key_compare_func");</literal>.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_diff</function></member>
    <member><function>array_diff_assoc</function></member>
    <member><function>array_udiff</function></member>
    <member><function>array_udiff_assoc</function></member>
    <member><function>array_intersect</function></member>
    <member><function>array_intersect_assoc</function></member>
    <member><function>array_uintersect</function></member>
    <member><function>array_uintersect_assoc</function></member>
    <member><function>array_uintersect_uassoc</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
