<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 72a7d33dffcf85fec18425bb1273d0331f26ac65 Maintainer: chuso Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.version-compare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>version_compare</refname>
  <refpurpose>Compara dos números de versiones estandarizados de PHP</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>version_compare</methodname>
   <methodparam><type>string</type><parameter>version1</parameter></methodparam>
   <methodparam><type>string</type><parameter>version2</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>operator</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>version_compare</function> compara dos string de números
   de versiones estandarizados de PHP.
  </para>
  <para>
   Esta función, en primer lugar reemplaza los <literal>_</literal>, <literal>-</literal> y
   <literal>+</literal> por puntos <literal>.</literal> y las cadenas de texto de
   versiones y añade puntos <literal>.</literal> antes y después de cualquier
   código no numérico, de manera que  '4.3.2RC1' sería '4.3.2.RC.1'. Después,
   compara cada una de las partes, de izquierda a derecha. Si alguna parte contuviera
   un texto especial de versión, se manejarían con el siguiente orden:
   <literal>cualquier texto que no se encuentre en esta lista</literal> &lt; 
   <literal>dev</literal> &lt; <literal>alpha</literal> =
   <literal>a</literal> &lt; <literal>beta</literal> =
   <literal>b</literal> &lt; <literal>RC</literal> =  
   <literal>rc</literal> &lt; <literal>#</literal> &lt;
   <literal>pl</literal> = <literal>p</literal>. De esta forma, no solo se pueden comparar
   versiones con diferentes niveles, como '4.1' y '4.1.2', sino que también se pueden
   comparar versiones específicas de PHP que contengan el estado de desarrollo en que se encuentran.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>version1</parameter></term>
     <listitem>
      <para>
       Primer número de versión.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>version2</parameter></term>
     <listitem>
      <para>
       Segundo número de versión.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>operator</parameter></term>
     <listitem>
      <para>
       Si se especifica el tercer argumento opcional <parameter>operator</parameter>,
       se prueba para una relación en particular. Los posibles operadores
       son: <literal>&lt;</literal>, <literal>lt</literal>,
       <literal>&lt;=</literal>, <literal>le</literal>, <literal>&gt;</literal>,
       <literal>gt</literal>, <literal>&gt;=</literal>, <literal>ge</literal>,
       <literal>==</literal>, <literal>=</literal>, <literal>eq</literal>,
       <literal>!=</literal>, <literal>&lt;&gt;</literal>, <literal>ne</literal>
       respectivamente. 
      </para>
      <para>
       Este parámetro es sensible a mayúsculas, por lo que los valores debes estar en minúsculas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Por omisión, <function>version_compare</function> devuelve
   <literal>-1</literal> si la primera versión es inferior a la segunda,
   <literal>0</literal> si son iguales, y
   <literal>1</literal> si la segunda es inferior.
  </para>
  <para>
   Al usar el argumento opcional <parameter>operator</parameter>, la
   función de volverá &true; si se cumpliera la relación especificada por
   el operador, o &false; en caso contrario.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Los siguientes ejemplos usan la constante <constant>PHP_VERSION</constant>,
   ya que esta contiene el valor de la versión de PHP con que se está ejecutando
   el código.
  </para>
  <para>
   <example>
    <title>Ejemplos de <function>version_compare</function></title>
    <programlisting role="php">
<![CDATA[
<?php
if (version_compare(PHP_VERSION, '6.0.0') >= 0) {
    echo 'Soy al menos la versión 6.0.0 de PHP, mi versión: ' . PHP_VERSION . "\n";
}

if (version_compare(PHP_VERSION, '5.3.0') >= 0) {
    echo 'Soy al menos la versión 5.3.0 de PHP, mi versión: ' . PHP_VERSION . "\n";
}

if (version_compare(PHP_VERSION, '5.0.0', '>=')) {
    echo 'Estoy usando la versión 5 de PHP, mi versión: ' . PHP_VERSION . "\n";
}

if (version_compare(PHP_VERSION, '5.0.0', '<')) {
    echo 'Estoy usando la versión 4 de PHP, mi versión: ' . PHP_VERSION . "\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    La constante <constant>PHP_VERSION</constant> almacena la versión de PHP en uso.
   </para>
  </note>
  <note>
   <para>
    Tenga presente que las versiones preeliminares, como por ejemplo 5.3.0-dev, se las
    considera inferiores a la versión final (como por ejemplo 5.3.0).
   </para>
  </note>
  <note>
   <para>
    Las cadenas de versiones especiales como <literal>alpha</literal> y <literal>beta</literal>
    son sensibles a mayúsculas/minúsculas. Las cadenas de versiones desde fuentes
    arbitrarias que no se adhieren al estándar de PHP podrían necesitar ser convertidas a minúsculas
    mediante <function>strtolower</function> antes de llamar a
    <function>version_compare</function>.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>phpversion</function></member>
    <member><function>php_uname</function></member>
    <member><function>function_exists</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
