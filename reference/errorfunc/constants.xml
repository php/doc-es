<?xml version="1.0" encoding="utf-8"?>
<!-- ES-Revision: 4c9b6ff9fbc0b2516d21a3f82ad36b91ea1d0aa4 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<appendix xml:id="errorfunc.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants.core;

 <simpara>
  Las constantes siguientes (ya sea el valor numérico correspondiente, o su
  nombre simbólico) se utilizan como una máscara de bits para especificar los errores a reportar.
  Es posible utilizar
  <link linkend="language.operators.bitwise">los operadores a nivel de bits</link>
  para combinar estos valores o enmascarar ciertos tipos de errores.
 </simpara>

 <tip>
  <simpara>
   Los nombres de las constantes pueden ser utilizados en &php.ini;
   en lugar de los valores numéricos brutos a los que corresponden.
   Sin embargo, solo los operadores
   <literal>|</literal>,
   <literal>~</literal>,
   <literal>^</literal>,
   <literal>!</literal>,
   <literal>&amp;</literal>
   son comprendidos en &php.ini;.
  </simpara>
 </tip>

 <warning>
  <simpara>
   No es posible utilizar los nombres simbólicos fuera de PHP.
   Por ejemplo, en &httpd.conf; el valor calculado de la máscara de bits debe ser utilizado en su lugar.
  </simpara>
 </warning>

 <variablelist xml:id="errorfunc.constants.errorlevels">
  <varlistentry xml:id="constant.e-error">
   <term>
    <constant>E_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Errores fatales durante la ejecución
     Estos indican errores de los cuales no es posible recuperarse,
     como un problema de asignación de memoria.
     La ejecución del script es detenida.
    </simpara>
    <simpara>
     Valor de la constante: <literal>1</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-warning">
   <term>
    <constant>E_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Advertencias durante la ejecución (errores no fatales).
     La ejecución del script no es interrumpida.
    </simpara>
    <simpara>
     Valor de la constante: <literal>2</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-parse">
   <term>
    <constant>E_PARSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Errores de análisis durante la compilación.
     Los errores de análisis deberían ser generados únicamente por el analizador sintáctico.
    </simpara>
    <simpara>
     Valor de la constante: <literal>4</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-notice">
   <term>
    <constant>E_NOTICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Notificaciones de ejecución.
     Indican que el script ha encontrado algo que podría señalar un error,
     pero que también podría ocurrir normalmente durante la ejecución de un script.
    </simpara>
    <simpara>
     Valor de la constante: <literal>8</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-core-error">
   <term>
    <constant>E_CORE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Errores fatales que ocurren durante el inicio inicial de PHP.
     Es como una <constant>E_ERROR</constant>,
     excepto que es generada por el núcleo de PHP.
    </simpara>
    <simpara>
     Valor de la constante: <literal>16</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-core-warning">
   <term>
    <constant>E_CORE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Advertencias (errores no fatales) que ocurren durante el inicio inicial de PHP.
     Es como un <constant>E_WARNING</constant>,
     excepto que es generada por el núcleo de PHP.
    </simpara>
    <simpara>
     Valor de la constante: <literal>32</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-compile-error">
   <term>
    <constant>E_COMPILE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Errores fatales de compilación.
     Es como un <constant>E_ERROR</constant>,
     excepto que es generado por el motor de script Zend.
    </simpara>
    <simpara>
     Valor de la constante: <literal>64</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-compile-warning">
   <term>
    <constant>E_COMPILE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Advertencias de compilación (errores no fatales).
     Es como un <constant>E_WARNING</constant>,
     excepto que es generado por el motor de script Zend.
    </simpara>
    <simpara>
     Valor de la constante: <literal>128</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-deprecated">
   <term>
    <constant>E_DEPRECATED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Avisos de depreciación durante la ejecución.
     Actívelo para recibir advertencias sobre código
     que no funcionará en versiones futuras.
    </simpara>
    <simpara>
     Valor de la constante: <literal>8192</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-error">
   <term>
    <constant>E_USER_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Mensaje de error generado por el usuario.
     Esto se asemeja a un <constant>E_ERROR</constant>,
     excepto que es generado en el código PHP utilizando la función PHP
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valor de la constante: <literal>256</literal>
    </simpara>
    <warning>
     <simpara>
      El uso de esta constante con <function>trigger_error</function> está
      obsoleto a partir de PHP 8.4.0.
      Se recomienda lanzar una <exceptionname>Exception</exceptionname>
      o llamar a <function>exit</function> en su lugar.
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-warning">
   <term>
    <constant>E_USER_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Mensaje de advertencia generado por el usuario.
     Esto se asemeja a un <constant>E_NOTICE</constant>,
     excepto que es generado en el código PHP utilizando la función PHP
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valor de la constante: <literal>512</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-notice">
   <term>
    <constant>E_USER_NOTICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Mensaje de notificación generado por el usuario.
     Esto se asemeja a un <constant>E_NOTICE</constant>,
     excepto que es generado en el código PHP utilizando la función PHP
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valor de la constante: <literal>1024</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-deprecated">
   <term>
    <constant>E_USER_DEPRECATED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Mensaje de depreciación generado por el usuario.
     Esto se asemeja a un <constant>E_DEPRECATED</constant>,
     excepto que es generado en el código PHP utilizando la función PHP
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valor de la constante: <literal>16384</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-strict">
   <term>
    <constant>E_STRICT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sugerencias de ejecución emitidas por PHP sobre el código ejecutado
     para garantizar la compatibilidad futura.
    </simpara>
    <simpara>
     Valor de la constante: <literal>2048</literal>
    </simpara>
    <warning>
     <simpara>
      Este nivel de error no es utilizado,
      y ha sido depreciado a partir de PHP 8.4.0.
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-recoverable-error">
   <term>
    <constant>E_RECOVERABLE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     "Excepciones" del motor antiguo correspondientes a un error fatal recuperable.
     Similar a <exceptionname>Error</exceptionname> pero debe ser capturado mediante un
     manejador de errores definido por el usuario (ver <function>set_error_handler</function>).
     Si no es gestionado, se comporta como <constant>E_ERROR</constant>.
    </simpara>
    <simpara>
     Valor de la constante: <literal>4096</literal>
    </simpara>
    <note>
     <simpara>
      Este nivel de error está efectivamente inutilizado,
      el único caso en el que puede ocurrir es cuando la interpretación de un
      &object; como <type>bool</type> falla.
      Esto solo puede ocurrir para objetos internos.
     </simpara>
     <simpara>
      El ejemplo más común, anterior a PHP 8.4.0, es el uso de una
      instancia <classname>GMP</classname> en una condición.
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-all">
   <term>
    <constant>E_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Máscara de bits que contiene todos los errores, advertencias y notificaciones.
    </simpara>
    <simpara>
     Valor de la constante: <literal>30719</literal>
    </simpara>
    <warning>
     <simpara>
      Anterior a PHP 8.4, el valor de la constante era <literal>32767</literal>.
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

 </variablelist>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
