<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 72b70d7c3c3b2b87423641906da2db407c32c3c3 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.trigger-error" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>trigger_error</refname>
  <refpurpose>Desencadena un error de usuario</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>true</type><methodname>trigger_error</methodname>
   <methodparam><type>string</type><parameter>message</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>error_level</parameter><initializer><constant>E_USER_NOTICE</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>trigger_error</function> se utiliza para desencadenar
   un error de usuario. También puede ser utilizada en
   conjunción con un manejador de errores interno, o un manejador
   de errores de usuario que haya sido seleccionado como manejador
   de errores con <function>set_error_handler</function>.
  </para>
  <para>
   <function>trigger_error</function> es práctico cuando se debe
   generar una respuesta particular durante
   la ejecución.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>message</parameter></term>
     <listitem>
      <para>
       El mensaje de error designado para este error. Está limitado en longitud a 1024
       bytes. Todos los caracteres después de los 1024 bytes serán ignorados.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error_level</parameter></term>
     <listitem>
      <para>
       El tipo de error designado para este error. Solo funciona con
       la familia de constantes <constant>E_USER_<replaceable>*</replaceable></constant>
       y será por omisión <constant>E_USER_NOTICE</constant>.
      </para>
      <warning>
       <simpara>
        Pasar <constant>E_USER_ERROR</constant> como
        <parameter>error_level</parameter> está ahora deprecado.
        Lance una <exceptionname>Exception</exceptionname> o
        llame a <function>exit</function> en su lugar.
       </simpara>
      </warning>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.true.always;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Esta función lanza una <classname>ValueError</classname> si el
   <parameter>error_level</parameter> no es uno de los
   <constant>E_USER_ERROR</constant>, <constant>E_USER_WARNING</constant>,
   <constant>E_USER_NOTICE</constant>, <constant>E_USER_DEPRECATED</constant>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.4.0</entry>
      <entry>
       Pasar <constant>E_USER_ERROR</constant> como
       <parameter>error_level</parameter> está ahora deprecado.
       Lance una <exceptionname>Exception</exceptionname> o
       llame a <function>exit</function> en su lugar.
      </entry>
     </row>
     <row>
      <entry>8.4.0</entry>
      <entry>
       La función tiene ahora un tipo de retorno <type>true</type>
       en lugar de <type>bool</type>.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       La función lanza ahora una <classname>ValueError</classname> si se especifica un
       <parameter>error_level</parameter> inválido. Anteriormente, devolvía &false;.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>trigger_error</function></title>
    <para>
     Ver <function>set_error_handler</function> para un ejemplo más sustancial.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$password = $_POST['password'] ?? '';
if ($password === '') {
  trigger_error("Usar una contraseña vacía no es seguro", E_USER_WARNING);
}
$hash = password_hash($password, PASSWORD_DEFAULT);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Las entidades HTML contenidas en el parámetro <parameter>message</parameter>
    no son escapadas. Utilice la función <function>htmlentities</function>
    en el mensaje si el error debe ser mostrado en un navegador.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>error_reporting</function></member>
    <member><function>set_error_handler</function></member>
    <member><function>restore_error_handler</function></member>
    <member>Las <link linkend="errorfunc.constants">constantes de nivel de error</link></member>
    <member>El atributo <classname>Deprecated</classname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
