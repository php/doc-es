<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 769812c12f00c1978bf7dd711dca38dbf05462da Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.error-log" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>error_log</refname>
  <refpurpose>Envía un mensaje de error al gestor de errores definido</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>error_log</methodname>
   <methodparam><type>string</type><parameter>message</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>message_type</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>destination</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>additional_headers</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Envía un mensaje de error al historial de errores
   del servidor web o a un fichero.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>message</parameter></term>
     <listitem>
      <para>
       El mensaje de error que debe ser almacenado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>message_type</parameter></term>
     <listitem>
      <para>
       Especifica el destino del mensaje de error.
       Los tipos posibles de mensajes son:
      </para>
      <para>
       <table>
        <title><function>error_log</function> tipos de registro</title>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry>0</entry>
           <entry>
            <parameter>message</parameter> es enviado al historial
            PHP, que se basa en el historial del sistema o un fichero,
            dependiendo de la configuración de <link
            linkend="ini.error-log">error_log</link>. Esta es la opción por omisión.
           </entry>
          </row>
          <row>
           <entry>1</entry>
           <entry>
            <parameter>message</parameter> es enviado por email a
            la dirección <parameter>destination</parameter>. Este es el único tipo que
            utiliza el cuarto parámetro
            <parameter>additional_headers</parameter>.
           </entry>
          </row>
          <row>
           <entry>2</entry>
           <entry>
            Ya no es una opción.
           </entry>
          </row>
          <row>
           <entry>3</entry>
           <entry>
            <parameter>message</parameter> es añadido al fichero
            <parameter>destination</parameter>. No se añade automáticamente una nueva línea
            (retorno de carro) al final de la cadena
            <parameter>message</parameter>.
           </entry>
          </row>
          <row>
           <entry>4</entry>
           <entry>
           <parameter>message</parameter> es enviado directamente al gestor de identificación SAPI.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>destination</parameter></term>
     <listitem>
      <para>
       El destino. Esto depende del parámetro
       <parameter>message_type</parameter> descrito anteriormente.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>additional_headers</parameter></term>
     <listitem>
      <para>
       Los encabezados adicionales. Estos son utilizados cuando el parámetro
       <parameter>message_type</parameter> está definido a
       <literal>1</literal>. Este tipo de mensaje utiliza la misma función interna
       que la función <function>mail</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
   Si <parameter>message_type</parameter> es cero, entonces esta función siempre retorna &true;,
   independientemente de si el error pudo ser registrado en el registro de eventos.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>destination</parameter> y
       <parameter>additional_headers</parameter>
       ahora son nullables.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example role="php">
    <title>Ejemplos con <function>error_log</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Envía una notificación por el historial del servidor web,
// si la conexión a la base de datos es imposible.
if (!Ora_Logon($username, $password)) {
  error_log("Base Oracle no disponible !", 0);
}

// Indicar al administrador, por email, que no hay más FOO
if (!($foo = allocate_new_foo())) {
  error_log("¡Ay!, No quedan más FOO disponibles !", 1,
  "operador@example.com");
}

// Otras maneras de llamar a error_log():
error_log("¡Gran error !", 3, "/var/tmp/mis-errors.log");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <simpara>
    La función <function>error_log</function> no es segura a nivel binario.
    El parámetro <parameter>message</parameter> será truncado por un carácter nulo.
   </simpara>
  </warning>
  <tip>
   <simpara>
    El parámetro <parameter>message</parameter> no debe contener caracteres
    nulos. Tenga en cuenta que el parámetro <parameter>message</parameter> puede ser enviado
    hacia un fichero, un correo, syslog, etc. Utilice las funciones apropiadas de
    conversión/escape, <function>base64_encode</function>, <function>rawurlencode</function>
    o <function>addslashes</function> antes de llamar a la función <function>error_log</function>.
   </simpara>
  </tip>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
