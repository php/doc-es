<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9caac4c5cce859b4ae5d497972442fcfaa840d81 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.error-reporting" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>error_reporting</refname>
  <refpurpose>Establece el nivel de reporte de errores de PHP</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>error_reporting</methodname>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>error_level</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>error_reporting</function> modifica la directiva
   <link linkend="ini.error-reporting">error_reporting</link>
   durante la ejecución del script. PHP posee varios niveles de errores,
   utilizar esta función configura este nivel durante la duración (de ejecución)
   del script. Si el parámetro opcional <parameter>error_level</parameter>
   no está definido, <function>error_reporting</function> retornará
   únicamente el nivel de reporte de errores actual.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>error_level</parameter></term>
     <listitem>
      <para>
       El nuevo nivel <link linkend="ini.error-reporting">error_reporting</link>.
       Puede ser un campo de bits o una combinación de constantes.
       El uso de constantes es altamente recomendado para asegurar una
       compatibilidad máxima con las futuras versiones.
       A medida que se crean nuevos niveles de errores, los valores
       evolucionan, por lo que los valores antiguos ya no tienen necesariamente el mismo significado.
      </para>
      <para>
       Las constantes que representan los niveles de errores disponibles y la
       significación de estos niveles de errores se describe
       en el manual sobre las
       <link linkend="errorfunc.constants">constantes predefinidas</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna el nivel de <link linkend="ini.error-reporting">error_reporting</link>,
   <emphasis>before</emphasis> de que sea cambiado a <parameter>error_level</parameter>
  </para>
  <note>
   <simpara>
    El operador de <link linkend="language.operators.errorcontrol">control de errores</link>
    <literal>@</literal> modifica el <parameter>error_level</parameter> durante la gestión de errores.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>error_level</parameter> ahora es nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>error_reporting</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Desactivar el reporte de errores
error_reporting(0);

// Reportar errores de ejecución de script
error_reporting(E_ERROR | E_WARNING | E_PARSE);

// Reportar E_NOTICE puede ayudar a mejorar los scripts
// (variables no inicializadas, variables mal escritas..)
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);

// Reportar todas las errores excepto E_NOTICE
// Esta es la configuración por omisión de php.ini
error_reporting(E_ALL & ~E_NOTICE);

// Reportar todas las errores PHP
error_reporting(E_ALL);

// Reportar todas las errores PHP
error_reporting(-1);

// Igual que error_reporting(E_ALL);
ini_set('error_reporting', E_ALL);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <simpara>
    Al pasar el valor <literal>-1</literal>, todas las errores posibles
    serán mostradas, incluso al agregar nuevos niveles y constantes
    en las futuras versiones de PHP. Este comportamiento
    es equivalente a proporcionar la constante <constant>E_ALL</constant>.
   </simpara>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>La directiva <link linkend="ini.display-errors">display_errors</link></member>
    <member>La directiva <link linkend="ini.html-errors">html_errors</link></member>
    <member>La directiva <link linkend="ini.xmlrpc-errors">xmlrpc_errors</link></member>
    <member>El operador de <link linkend="language.operators.errorcontrol">control de errores</link></member>
    <member><function>ini_set</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
