<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b7f50f1b73cb39a55706cc5e21b19eed1f644cc1 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<set xml:id="set.mysqlinfo" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Controladores y complementos de MySQL</title>
  <titleabbrev>MySQL</titleabbrev>

  <info xml:id="mysqlinfo.info">
    <abstract>
      <para>
        PHP ofrece varios controladores y complementos de MySQL para acceder y manejar MySQL.
      </para>
      <para>
        Las diferencias y la funcionalidad de las extensiones de MySQL están descritas dentro de la información general de esta sección.
      </para>
      <para>
        Las extensiones listadas soportan el protocolo MySQL.
        Ejemplos de servidores de bases de datos compatibles son
        <link xlink:href="&url.mariadb;">MariaDB Server</link>,
        <link xlink:href="&url.mysql;">MySQL Server</link>,
        <link xlink:href="&url.perconaserver;">Percona Server for MySQL</link>,
        y
        <link xlink:href="&url.tidb;">TiDB</link>.
      </para>
    </abstract>
  </info>

  <book xml:id="mysql">
    <title>Información general de los controladores de MySQL para PHP</title>

    <preface xml:id="mysqlinfo.intro">
      <title>Introducción</title>
      <para>
        Dependiendo de la versión de PHP, existen dos o tres API de PHP para acceder a las bases dedatos de MySQL. Los usuarios de PHP 5 pueden elegir entre la extensión
        <link linkend="book.mysql">mysql</link>
        obsoleta,
        <link linkend="book.mysqli">mysqli</link>, o
        <link linkend="ref.pdo-mysql">PDO_MySQL</link>. PHP 7 elimina la extensión mysql, dejando solamente las últimas dos opciones.
      </para>
      <para>
        Esta guía explica la
        <link linkend="mysqlinfo.terminology">terminología</link>
        empleada para describir cada API, información sobre
        <link linkend="mysqlinfo.api.choosing">qué API elegir</link>, y también información para ayudar a elegir
        <link linkend="mysqlinfo.library.choosing">qué biblioteca de MySQL usar</link>
        con la API.
      </para>
    </preface>

    <chapter xml:id="mysqlinfo.terminology" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
      <title>Información general de la terminología</title>
      <para>
        Esta sección proporciona una introducción de las opciones disponibles al desarrollar una aplicación de PHP que necesite interactuar con una base de datos de MySQL.
      </para>

      <para>
        <emphasis role="bold">¿Qué es una API?</emphasis>
      </para>

      <para>
        Una Interfaz de Programación de Aplicaciones (o API de sus siglas en inglés), define las clases, métodos, funciones y variables que una aplicación necesita llamar para realizar una tarea. En el caso de aplicaciones de PHP que necesiten comunicarse con bases de datos, las API necesarias normalmente son expuestas mediante extensiones de PHP.
      </para>

      <para>
        Las API pueden ser procedimentales u orientadas a objetos. Con una API procedimental se llaman a funciones para realizar tareas, con una API orientada a objetos se instancian clases y luego se llaman a métodos de los objetos resultantes. De las dos, la última normalmente es la interfaz preferida debido a que es más moderna y conduce a un código mejor organizado.
      </para>

      <para>
        Al escribir aplicaciones de PHP que necesitan conectarse a un servidor de MySQL, existen varias opciones de API disponibles. Este documento trata sobre lo que está disponible y cómo elegir la mejor solución para una aplicación.
      </para>

      <para>
        <emphasis role="bold">¿Qué es un conector?</emphasis>
      </para>

      <para>
        En la documentación de MySQL, el término
        <emphasis>conector</emphasis>
        se refiere a una pieza de software que permite a las aplicaciones conectarse con el servidor de bases de datos de MySQL. MySQL proporciona conectores para muchos lenguajes, incluido PHP.
      </para>

      <para>
        Si una aplicación de PHP necesita comunicarse con un servidor de bases de datos, será necesario escribir código de PHP para llevar a cabo actividades como conectarse al servidor de la base de datos, consultar la base de datos y otras funciones relacionas con la base de datos. Se requiere software para proporcionar la API que utilizará la aplicacion de PHP, y también manejar la comunicación entre la aplicación y el servidor de la base de datos, posiblemente empleando otras bibliotecas intermediarias cuando sea necesario. Este software se conoce generalmente como conector, ya que permite a la aplicación
        <emphasis>conectarse</emphasis>
        al servidor de la base de datos.
      </para>

      <para>
        <emphasis role="bold">¿Qué es un controlador?</emphasis>
      </para>

      <para>
        Un controlador (o driver) es una pieza de software diseñada para la comunicación con un tipo específico de servidor de bases de datos. El controlador también llama a una biblioteca, como la Biblioteca Cliente de MySQL o el Controlador Nativo de MySQL. Estas bibliotecas implementan el protocolo de bajo nivel usado para comunicarse con el servidor de bases de datos de MySQL.
      </para>

      <para>
        Por poner un ejemplo, la capa de abstracción de bases de datos
        <link linkend="mysqli.overview.pdo">Objetos de Datos de PHP (PDO)</link>
        pueden usar uno de los varios controladores específicos de bases de datos. Uno de los controladores disponibles es el controlador de MySQL de PDO, que permite hacer de interfaz con el servidor MySQL.
      </para>

      <para>
        A veces se emplean los términos conector y controlador intercambiablemente, y esto puede ser confuso. El la documentación relacionada con MySQL, el término
        <quote>controlador</quote>
        está reservado para el software que proporciona la parte específica de bases de datos de un paquete conector.
      </para>

      <para>
        <emphasis role="bold">¿Qué es una extensión?</emphasis>
      </para>

      <para>
        En la documentación de PHP se encontrará con otro término:
        <emphasis>extensión</emphasis>. El código de PHP consiste en un núcleo, con extensiones opcionales para la funcionalidad del núcleo. Las extensiones relacionadas con MySQL de PHP, como la extensión
        <literal>mysqli</literal>, y la extensión
        <literal>mysql</literal>, están implementadas con el marco de extensiones de PHP.
      </para>

      <para>
        Una extensión típicamente expone una API al programador de PHP para así utilizar sus prestaciones programáticamente. Sin embargo, algunas extensiones que usan el marco de extensiones de PHP no exponen una API al programador de PHP.
      </para>

      <para>
        La extensión del controlador de MySQL de PDO, por ejemplo, no expone una API al programador de PHP, pero proporciona una interfaz para la capa superior a PDO.
      </para>

      <para>
        Los términos API y extensión no deberían tomarse como si fuesen la misma cosa; una extensión puede no exponer necesariamente una API al programador.
      </para>
    </chapter>

    <chapter xml:id="mysqlinfo.api.choosing" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
      <title>Elegir una API</title>
      <para>
        PHP ofrece tres API diferentes para conectarse a MySQL. Abajo se muestran las API proporcionadas por las extensiones mysql, mysqli, y PDO. Cada trozo de código crea una conexión al servidor de MySQL que se está ejecutando en "ejemplo.com" con el nombre de usuario "usuario" y la contraseña "contraseña". También se ejecuta una consulta para saludar al usuario.
      </para>
      <para>
        <example>
          <title>Comparación de las tres API de MySQL</title>
          <programlisting role="php">
            <![CDATA[
<?php
// mysqli
$mysqli = new mysqli("ejemplo.com", "usuario", "contraseña", "basedatos");
$resultado = $mysqli->query("SELECT '¡Hola, querido usuario de MySQL!' AS _message FROM DUAL");
$fila = $resultado->fetch_assoc();
echo htmlentities($fila['_message']);

// PDO
$pdo = new PDO('mysql:host=ejemplo.com;dbname=basedatos', 'usuario', 'contraseña');
$sentencia = $pdo->query("SELECT '¡Hola, querido usuario de MySQL!' AS _message FROM DUAL");
$fila = $sentencia->fetch(PDO::FETCH_ASSOC);
echo htmlentities($fila['_message']);

// mysql
$c = mysql_connect("ejemplo.com", "usuario", "contraseña");
mysql_select_db("basedatos");
$resultado = mysql_query("SELECT '¡Hola, querido usuario de MySQL!' AS _message FROM DUAL");
$fila = mysql_fetch_assoc($resultado);
echo htmlentities($fila['_message']);
?>
]]>
          </programlisting>
        </example>
      </para>
      <para>
        <emphasis role="bold">API recomendada</emphasis>
      </para>
      <para>
        Se recomienda usar las extensiones
        <link linkend="book.mysqli">mysqli</link>
        o
        <link linkend="ref.pdo-mysql">PDO_MySQL</link>. No se recomienda usar la extensión
        <link linkend="ref.mysql">mysql</link>
        antigua para nuevos desarrollos, ya que ha sido declarada obsoleta en PHP 5.5.0 y eliminada en PHP 7. Se proporciona una matriz detallada de comparación de características más abajo. El rendimiento global de las tres extensiones se considera que sea aproximadamente el mismo. Aunque el rendimiento de la extensión aporta solamente una fracción del total del tiempo de ejecución de una consulta web de PHP. A menudo, el impacto es tan bajo como 0.1%.
      </para>
      <para>
        <emphasis role="bold">Comparación de características</emphasis>
      </para>
      <informaltable>
        <tgroup cols="4">
          <thead>
            <row>
              <entry></entry>
              <entry>ext/mysqli</entry>
              <entry>PDO_MySQL</entry>
              <entry>ext/mysql</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Versión de PHP donde se introdujo</entry>
              <entry>5.0</entry>
              <entry>5.1</entry>
              <entry>2.0</entry>
            </row>
            <row>
              <entry>Incluida con PHP 5.x</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
            </row>
            <row>
              <entry>Incluida con PHP 7.x</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Estado de desarrollo</entry>
              <entry>Activo</entry>
              <entry>Activo</entry>
              <entry>Mantenimiento solamente en 5.x; eliminada en 7.x</entry>
            </row>
            <row>
              <entry>Ciclo de vida</entry>
              <entry>Activo</entry>
              <entry>Activo</entry>
              <entry>Obsoleto en 5.x; eliminado en 7.x</entry>
            </row>
            <row>
              <entry>Recomendada para nuevos proyectos</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Interfaz de POO</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Interfaz procedimental</entry>
              <entry>Sí</entry>
              <entry>No</entry>
              <entry>Sí</entry>
            </row>
            <row>
              <entry>La API admite la no espera, consultas asíncronas con mysqlnd</entry>
              <entry>Sí</entry>
              <entry>No</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Conexiones persistentes</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
            </row>
            <row>
              <entry>La API admite conjunto de caracteres</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
            </row>
            <row>
              <entry>La API admite sentencias preparadas del lado del servidor</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>La API admite sentencias preparadas del lado del cliente</entry>
              <entry>No</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>La API admite procedimientos almacenados</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>API admite sentencias múltiples</entry>
              <entry>Sí</entry>
              <entry>La mayoría</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>La API admite transacciones</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Las transacciones se pueden controlar con SQL</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
            </row>
            <row>
              <entry>Admite toda la funcionalidad de MySQL 5.1+</entry>
              <entry>Sí</entry>
              <entry>La mayoría</entry>
              <entry>No</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </chapter>

    <chapter xml:id="mysqlinfo.library.choosing" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
      <title>Elegir una biblioteca</title>
      <para>
        Las extensiones de PHP mysqli, PDO_MySQL y mysql son envolturas ligeras sobre una biblioteca cliente en C. Las extensiones pueden usar la biblioteca
        <link linkend="book.mysqlnd">mysqlnd</link>
        o la biblioteca
        <literal>libmysqlclient</literal>. Elegir una biblioteca es una decisión que se ha de tomar durante la compilación.
      </para>
      <para>
        La biblioteca mysqlnd es parte de la distribrución de PHP desde la versión 5.3.0. Ofrece características como conexiones inactivas y caché de consultas, características que no están disponibles con libmysqlclient, por lo que se recomienda encarecedamente usar la biblioteca mysqlnd interna. Véase la
        <link linkend="book.mysqlnd">documentación de mysqlnd</link>
        para detalles adicionales y una lista de las características y funcionalidades que ofrece.
      </para>
      <para>
        <example>
          <title>Comandos de configuración para usar mysqlnd o libmysqlclient</title>
          <programlisting role="shell">
            <![CDATA[
// Recomendado, compila con mysqlnd
$ ./configure --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-mysql=mysqlnd

// Recomendado como alternativa, compila con mysqlnd a partir de PHP 5.4
$ ./configure --with-mysqli --with-pdo-mysql --with-mysql

// No recomendado, compila con libmysqlclient
$ ./configure --with-mysqli=/ruta/a/mysql_config --with-pdo-mysql=/ruta/a/mysql_config --with-mysql=/ruta/a/mysql_config
]]>
          </programlisting>
        </example>
      </para>
      <para>
        <emphasis role="bold">Comparación de las características de las bibliotecas</emphasis>
      </para>
      <para>
        Se recomienda usar la biblioteca
        <link linkend="book.mysqlnd">mysqlnd</link>
        en lugar de la biblioteca Cliente Servidor de MySQL (libmysqlclient). Ambas bibliotecas están soportadas y se mejoran constantemente.
      </para>
      <informaltable>
        <tgroup cols="3">
          <thead>
            <row>
              <entry></entry>
              <entry>Controlador Nativo de MySQL (
                <link linkend="book.mysqlnd">mysqlnd</link>)</entry>
              <entry>Biblioteca Cliente Servidor de MySQL (<literal>libmysqlclient</literal>)</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Parte de la distribución de PHP</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Versión de PHP donde se introdujo</entry>
              <entry>5.3.0</entry>
              <entry>N/A</entry>
            </row>
            <row>
              <entry>Licencia</entry>
              <entry>Licencia PHP 3.01</entry>
              <entry>Licencia Dual</entry>
            </row>
            <row>
              <entry>Estado de desarrollo</entry>
              <entry>Activo</entry>
              <entry>Activo</entry>
            </row>
            <row>
              <entry>Ciclo de vida</entry>
              <entry>Fin no anunciado</entry>
              <entry>Fin no anunciado</entry>
            </row>
            <row>
              <entry>PHP 5.4 y superior; compilación predeterminada (para todas las extensiones de MySQL)</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>PHP 5.3; compilación predeterminada (para todas las extensiones de MySQL)</entry>
              <entry>No</entry>
              <entry>Sí</entry>
            </row>
            <row>
              <entry>Soporte para el protocolo de compresión</entry>
              <entry>Sí (5.3.1+)</entry>
              <entry>Sí</entry>
            </row>
            <row>
              <entry>Soporte para SSL</entry>
              <entry>Sí (5.3.3+)</entry>
              <entry>Sí</entry>
            </row>
            <row>
              <entry>Soporte para tubería con nombre</entry>
              <entry>Sí (5.3.4+)</entry>
              <entry>Sí</entry>
            </row>
            <row>
              <entry>No bloqueo, consultas asíncronas</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Estadísticas de rendimiento</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>LOAD LOCAL INFILE respecto a la
                <link linkend="ini.open-basedir">directiva open_basedir</link>
              </entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Usa el sistema de gestión de memoria nativo de PHP (p.ej., cumple con los límites de memoria de PHP)</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Devuelve columnas numéricas como valores de tipo double (COM_QUERY)</entry>
              <entry>Sí</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Devuelve columnas númericas como valores de tipo string (COM_QUERY)</entry>
              <entry>Sí</entry>
              <entry>Sí</entry>
            </row>
            <row>
              <entry>API de complementos</entry>
              <entry>Sí</entry>
              <entry>Limitada</entry>
            </row>
            <row>
              <entry>Separación de lectura/escritura para la Replicación de MySQL</entry>
              <entry>Sí, con complemento</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Equilibrado de carga</entry>
              <entry>Sí, con complemento</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Tolerancia a fallos</entry>
              <entry>Sí, con complemento</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Conexiones inactivas</entry>
              <entry>Sí, con complemento</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Caché de consultas</entry>
              <entry>Sí, con complemento</entry>
              <entry>No</entry>
            </row>
            <row>
              <entry>Manipulación transparente de consultas (p.ej., auto-EXPLAIN o monitorización)</entry>
              <entry>Sí, con complemento</entry>
              <entry>No</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </chapter>

      &reference.mysqlinfo.concepts;

 </book>

 &reference.mysqli.book;
 &reference.mysql-xdevapi.book;
 &reference.mysql.book;
 &reference.mysqlnd.book;

</set>
