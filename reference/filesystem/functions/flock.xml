<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 0bfb0eb957e0468912af86bba09fae588010c1df Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.flock" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>flock</refname>
  <refpurpose>Bloquea el fichero</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>flock</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam><type>int</type><parameter>operation</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">would_block</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>flock</function> permite realizar un sistema simple de
   bloqueos de escritura/lectura, que puede ser utilizado en
   cualquier plataforma (incluyendo Unix y Windows).
  </para>
  <para>
   El bloqueo también se libera con <function>fclose</function>,
   o cuando <parameter>stream</parameter> es recogido por el recolector de basura.
  </para>
  <para>
   PHP dispone de un sistema completo de bloqueo de ficheros.
   Todos los programas que accedan al fichero deben utilizar la
   misma metodología de bloqueo para que sea efectivo. Por
   omisión, esta función se bloqueará hasta que el bloqueo solicitado
   sea adquirido; este comportamiento puede ser controlado con la opción <constant>LOCK_NB</constant>
   cuya documentación se encuentra a continuación.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      &fs.file.pointer;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>operation</parameter></term>
     <listitem>
      <para>
       <parameter>operation</parameter> puede tomar uno de los siguientes valores:
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>LOCK_SH</constant> para adquirir un bloqueo compartido (lectura).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LOCK_EX</constant> para adquirir un bloqueo exclusivo (escritura).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LOCK_UN</constant> para liberar un bloqueo (compartido o exclusivo).
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
      <para>
       Asimismo, es posible añadir <constant>LOCK_NB</constant>
       como máscara de una de las operaciones anteriores si no
       se desea que la función <function>flock</function> se bloquee durante
       el bloqueo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>would_block</parameter></term>
     <listitem>
      <para>
       Este tercer argumento opcional se establece a 1 si el bloqueo
       debe bloquear el script (condición de error <literal>EWOULDBLOCK</literal>).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>flock</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$fp = fopen("/tmp/lock.txt", "r+");

if (flock($fp, LOCK_EX)) { // adquiere un bloqueo exclusivo
    ftruncate($fp, 0);     // borrado del contenido
    fwrite($fp, "Escribir en un fichero\n");
    fflush($fp);            // libera el contenido antes de quitar el bloqueo
    flock($fp, LOCK_UN);    // Quita el bloqueo
} else {
    echo "¡Imposible bloquear el fichero!";
}

fclose($fp);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo con <function>flock</function> utilizando la opción <constant>LOCK_NB</constant></title>
    <programlisting role="php">
<![CDATA[
<?php
$fp = fopen('/tmp/lock.txt', 'r+');

/* Activación de la opción LOCK_NB durante una operación LOCK_EX */
if(!flock($fp, LOCK_EX | LOCK_NB)) {
    echo 'Imposible obtener el bloqueo';
    exit(-1);
}

/* ... */

fclose($fp);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>flock</function> utiliza bloqueos obligatorios bajo Windows, que también son
    soportados en Linux y sistemas derivados de System V mediante la llamada
    al sistema fcntl(): si el fichero en cuestión tiene el bit setgid activado y el bit
    de grupo vacío. En Linux, el sistema de ficheros deberá ser montado con la opción
    mand para que esto funcione.
   </para>
  </note>
  <note>
   <para>
    Al requerir un puntero de fichero, <function>flock</function>
    puede ser necesario utilizar un bloqueo especial para proteger el acceso al fichero
    que se desea truncar al abrirlo en modo escritura (con "w" o "w+"
    como argumento de <function>fopen</function>).
   </para>
  </note>
  <note>
   <para>
    Debería ser utilizado únicamente en recursos provenientes de <function>fopen</function>
    para ficheros locales o mediante el gestor de flujos personalizado definiendo
    <function>streamWrapper::stream_lock</function>.
   </para>
  </note>
  <warning>
   <para>
    Asignar otro valor al argumento <parameter>stream</parameter>
    en este código liberará el bloqueo.
   </para>
  </warning>
  <warning>
   <para>
    En ciertos sistemas operativos, <function>flock</function> está implementado
    a nivel de proceso. Al utilizar una API multihilo, puede que no se pueda
    confiar en <function>flock</function> para proteger ficheros contra otros
    scripts PHP que funcionen en paralelo en otros hilos del mismo servidor.
   </para>
   <para>
    <function>flock</function> no es soportado en sistemas de ficheros antiguos
    como <literal>FAT</literal> y sus derivados, y siempre devolverá
    &false; en estos entornos.
   </para>
  </warning>
  <note>
   <para>
    En Windows, si el procedimiento de bloqueo abre un fichero por segunda vez,
    no puede acceder al fichero a través de este gestor hasta que
    el fichero sea desbloqueado.
   </para>
  </note>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
