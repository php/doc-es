<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 45e26d4e5d36a3918da3779fc6d61f7ed41ebb51 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: seros -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.fread">
 <refnamediv>
  <refname>fread</refname>
  <refpurpose>Lectura de un fichero en modo binario seguro</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>fread</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>fread</function> lee hasta
   <parameter>length</parameter> bytes desde el puntero al fichero
   referenciado por <parameter>handle</parameter>. La lectura termina tan pronto como
   se encuentre una de las siguientes condiciones:
   <itemizedlist>
    <listitem>
     <simpara>
      <parameter>length</parameter> bytes han sido leídos
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      EOF (fin de fichero) es alcanzado
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      un paquete se encuentra disponible o el <link linkend="function.socket-set-timeout">
      tiempo límite del socket</link> se agota (para flujos de red)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      si el flujo es leído en buffer y no representa un fichero plano, se
      realiza al menos una lectura de hasta un número de bytes igual al tamaño del trozo
      (normalmente 8192); dependiendo del la información previamente almacenada en buffer, el tamaño de la
      información devuelta puede ser mayor que el tamaño del trozo.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>handle</parameter></term>
     <listitem>
      &fs.file.pointer;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Lectura de hasta <parameter>length</parameter> número de bytes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la cadena leída &return.falseforfailure;.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo sencillo de <function>fread</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// poner el contenido de un fichero en una cadena
$nombre_fichero = "/usr/local/algo.txt";
$gestor = fopen($nombre_fichero, "r");
$contenido = fread($gestor, filesize($nombre_fichero));
fclose($gestor);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo de lectura binaria de <function>fread</function></title>
    <warning>
     <para>
      En sistemas en los que se diferencia entre archivos binarios y de texto
      (esto es, Windows) el fichero debe ser abierto con 'b' incluida en el
      parámetro modo de <function>fopen</function>.
     </para>
    </warning>
    <programlisting role="php">
<![CDATA[
<?php
$filename = "c:\\files\\imagen.gif";
$gestor = fopen($filename, "rb");
$contenido = fread($gestor, filesize($filename));
fclose($gestor);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplos de lectura remota con <function>fread</function></title>
    <warning>
     <para>
      Cuando se lee desde algo que no es un fichero local normal, como
      los flujos devueltos cuando
      se leen <link linkend="features.remote-files">ficheros remotos</link> o desde
      <function>popen</function> y <function>fsockopen</function>, la lectura
      se detendrá después de que esté disponible un paquete. Esto significa que debería
      reuinir la información en trozos como se muestra en los ejemplos de abajo.
     </para>
    </warning>
    <programlisting role="php">
<![CDATA[
<?php
// Para PHP 5 y superior
$gestor = fopen("http://www.example.com/", "rb");
$contenido = stream_get_contents($gestor);
fclose($gestor);
?>
]]>
    </programlisting>
    <programlisting role="php">
<![CDATA[
<?php
$gestor = fopen("http://www.example.com/", "rb");
if (FALSE === $gestor) {
    exit("Falló la apertura del flujo a la URL");
}

$contenido = '';
while (!feof($gestor)) {
    $contenido .= fread($gestor, 8192);
}
fclose($gestor);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Si sólo quiere poner el contenido de un fichero en una cadena, use
    <function>file_get_contents</function> ya que tiene mucho mejor rendimiento
    que el código de arriba.
   </para>
  </note>
  <note>
   <para>
    Observe que <function>fread</function> lee desde la posción actual del
    puntero al fichero. Use <function>ftell</function> para encontrar la posición
    actual del puntero y <function>rewind</function> para rebobinar la
    posición del puntero.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fwrite</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>fgets</function></member>
    <member><function>fgetss</function></member>
    <member><function>fscanf</function></member>
    <member><function>file</function></member>
    <member><function>fpassthru</function></member>
    <member><function>ftell</function></member>
    <member><function>rewind</function></member>
    <member><function>unpack</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
