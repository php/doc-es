<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bb9bfdfc5a4a8ffe27ab4edcfe0d8747a375e2f2 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.glob" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>glob</refname>
  <refpurpose>Búsqueda de rutas que coinciden con un patrón</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>glob</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>glob</function> busca todas las rutas que coinciden con
   el patrón <parameter>pattern</parameter>, siguiendo las reglas utilizadas por
   la función <literal>glob()</literal> de la libc, que son las mismas que las
   utilizadas por el Shell en general.
  </para>
  <simpara>
   El comportamiento en sistemas Unix y macOS está determinado por
   la implementación de glob() del sistema. En Windows, se utiliza una
   implementación conforme a la definición POSIX 1003.2 de glob(), con
   una extensión para manejar la convención <literal>[!...]</literal> que permite
   negar un rango.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       El patrón. No se realiza sustitución de tilde
       (<literal>~</literal>) ni de parámetro.
      </para>
      <para>
       Caracteres especiales:
       <itemizedlist>
        <listitem>
         <simpara>
          <literal>*</literal> - Asocia cero o más caracteres.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <literal>?</literal> - Asocia exactamente un carácter (cualquier
          carácter).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <literal>[...]</literal> - Asocia un carácter de un conjunto de
          caracteres. Si el primer carácter es <literal>!</literal>,
          asocia cualquier carácter que no esté en este conjunto.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <literal>{a,b,c}</literal> - Asocia una cadena de un grupo de
          cadenas separadas por comas cuando se utiliza el flag
          <constant>GLOB_BRACE</constant>.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <literal>\</literal> - Escapa el carácter siguiente, excepto cuando
          se utiliza el flag <constant>GLOB_NOESCAPE</constant>.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Cualquiera de las constantes <constant>GLOB_<replaceable>*</replaceable></constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un array que contiene los ficheros y directorios que coinciden con
   el patrón, un array vacío si no hay coincidencias, o &false; si ocurre un error.
   A menos que se utilice <literal>GLOB_NOSORT</literal>, los nombres serán ordenados
   alfabéticamente.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Un método práctico para reemplazar <function>opendir</function>
     por <function>glob</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php
foreach (glob("*.txt") as $filename) {
    echo "$filename ocupa " . filesize($filename) . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
funclist.txt ocupa 44686
funcsummary.txt ocupa 267625
quickref.txt ocupa 137820
]]>
    </screen>
   </example>
   <example>
    <title>
     Ejemplo con un patrón más complejo
    </title>
    <programlisting role="php">
<![CDATA[
<?php
foreach (glob("path/*/*.{txt,md}", \GLOB_BRACE) as $filename) {
    echo "$filename\n";
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
path/docs/mailinglist-rules.md
path/docs/README.md
path/docs/release-process.md
path/pear/install-pear.txt
path/Zend/README.md
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.no-remote;
  <note>
   <simpara>
    Esta función no está disponible en algunos sistemas (por ejemplo, viejos Sun OS).
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>opendir</function></member>
    <member><function>readdir</function></member>
    <member><function>closedir</function></member>
    <member><function>fnmatch</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
