<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: cdc9d28d334bbc08386fecf8aade66080004a9dd Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.sem-acquire" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sem_acquire</refname>
  <refpurpose>Reserva un semáforo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>sem_acquire</methodname>
   <methodparam><type>SysvSemaphore</type><parameter>semaphore</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>non_blocking</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>sem_acquire</function> se bloquea por omisión
   (si es necesario) hasta que el semáforo pueda ser reservado.
   Un proceso que intenta reservar un semáforo que ya ha
   reservado quedará en espera indefinida, si esta adquisición excede
   el número máximo de adquisiciones simultáneas (max_acquire).
  </para>
  <para>
   Al final de un script, todos los semáforos reservados
   pero no liberados explícitamente, serán liberados
   automáticamente, y se generará una advertencia.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>semaphore</parameter></term>
     <listitem>
      <para>
       <parameter>semaphore</parameter> es un recurso de
       semáforo, obtenido de la función <function>sem_get</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>non_blocking</parameter></term>
     <listitem>
      <para>
       Especifica si el proceso no debe esperar la adquisición del semáforo.
       Si es &true;, la llamada devolverá
       &false; inmediatamente si un semáforo no puede ser
       adquirido inmediatamente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>semaphore</parameter> ahora espera una <classname>SysvSemaphore</classname>;
        anteriormente, se esperaba un <type>resource</type>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sem_get</function></member>
    <member><function>sem_release</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
