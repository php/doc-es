<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c0fa5077c8862405942d8aac7360c5169558b59b Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="reflectionclass.resetaslazyproxy" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <refnamediv>
  <refname>ReflectionClass::resetAsLazyProxy</refname>
  <refpurpose>Reinicia un objeto y lo marca como perezoso</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="ReflectionClass">
   <modifier>public</modifier> <type>void</type><methodname>ReflectionClass::resetAsLazyProxy</methodname>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
   <methodparam><type>callable</type><parameter>factory</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   El comportamiento de este método es el mismo que
   <methodname>ReflectionClass::resetAsLazyGhost</methodname> excepto que utiliza
   la estrategia de proxy.
  </simpara>
  <simpara>
   El <parameter>object</parameter> mismo se convierte en el proxy. De manera similar
   a <methodname>ReflectionClass::resetAsLazyGhost</methodname>, el objeto no es
   reemplazado por otro, y su identidad no cambia, incluso después
   de la inicialización. El proxy y la instancia real son objetos distintos, con
   identidades distintas.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>object</parameter></term>
    <listitem>
     <simpara>
      Un objeto no perezoso, o un objeto perezoso inicializado.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>factory</parameter></term>
    <listitem>
     <simpara>
      Una función de devolución de llamada con la misma firma y propósito que en
      <methodname>ReflectionClass::newLazyProxy</methodname>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('reflectionclass.resetaslazyghost.parameters.options')/*)">
     <xi:fallback/>
    </xi:include>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   &return.void;
  </simpara>
 </refsect1>

 <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('reflectionclass.resetaslazyghost')/db:refsect1[@role='errors'])">
  <xi:fallback/>
 </xi:include>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>ReflectionClass::newLazyProxy</methodname></member>
   <member><methodname>ReflectionClass::resetAsLazyGhost</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
