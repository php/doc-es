<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e41806c30bf6975e452c0d4ce35ab0984c2fa68c Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="oauth.getaccesstoken" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>OAuth::getAccessToken</refname>
  <refpurpose>Recupera un token de acceso</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>OAuth::getAccessToken</methodname>
   <methodparam><type>string</type><parameter>access_token_url</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>auth_session_handle</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>verifier_token</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>http_method</parameter></methodparam>
  </methodsynopsis>
  <para>
   Lee un token de acceso, un secreto y cualquier información adicional en
   un proveedor de servicios.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>access_token_url</parameter></term>
     <listitem>
      <para>
       La URL a utilizar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>auth_session_handle</parameter></term>
     <listitem>
      <para>
       El identificador de sesión. Este parámetro no existe
       en las especificaciones OAuth 1.0, pero puede ser implementado
       por grandes implementaciones. Véase
       <link xlink:href="&url.oauth.scale;"><literal>ScalableOAuth</literal></link>
       para más detalles.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>verifier_token</parameter></term>
     <listitem>
      <para>
       Para los proveedores de servicio que soportan 1.0a,
       el parámetro <parameter>verifier_token</parameter> debe ser
       proporcionado, al intercambiar el token de solicitud para obtener el token
       de acceso. Si <parameter>verifier_token</parameter> está presente en
       <parameter>$_GET</parameter> o <parameter>$_POST</parameter>, es
       automáticamente pasado y el llamante no necesita especificar
       el parámetro <parameter>verifier_token</parameter> (generalmente, el token
       de acceso es intercambiado vía la URL de devolución <parameter>callback_url</parameter>).
       Véase <link xlink:href="&url.oauth.scale;">ScalableOAuth</link>
       para más información.
      </para>
     </listitem>
    </varlistentry>
<varlistentry>
     <term><parameter>http_method</parameter></term>
     <listitem>
      <para>
       Método HTTP a utilizar, por ejemplo
       <literal>GET</literal> o <literal>POST</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un array que contiene la respuesta OAuth analizada, en caso de éxito,
   y &false; en caso contrario.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL oauth 1.0.0</entry>
       <entry>
        &oauth.changelog.error.null;
       </entry>
      </row>
      <row>
       <entry>PECL oauth 0.99.9</entry>
       <entry>
        Se añadió el parámetro <parameter>verifier_token</parameter>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
   </para>
  </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>OAuth::getAccessToken</function></title>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $oauth = new OAuth(OAUTH_CONSUMER_KEY,OAUTH_CONSUMER_SECRET);
    $oauth->setToken($request_token,$request_token_secret);
    $access_token_info = $oauth->getAccessToken("https://example.com/oauth/access_token");
    if(!empty($access_token_info)) {
        print_r($access_token_info);
    } else {
        print "Error al obtener el token de acceso, la respuesta fue: " . $oauth->getLastResponse();
    }
} catch(OAuthException $E) {
    echo "Respuesta: ". $E->lastResponse . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [oauth_token] => some_token
    [oauth_token_secret] => some_token_secret
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>OAuth::getLastResponse</methodname></member>
    <member><methodname>OAuth::getLastResponseInfo</methodname></member>
    <member><methodname>OAuth::setToken</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
