<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 22583751fbfdaa3eaa41aeb6470d1343f5cb2c78 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="gearmanclient.addtaskstatus" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GearmanClient::addTaskStatus</refname>
  <refpurpose>Añade una tarea para obtener el estado</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="GearmanClient">
   <modifier>public</modifier> <type class="union"><type>GearmanTask</type><type>false</type></type><methodname>GearmanClient::addTaskStatus</methodname>
   <methodparam><type>string</type><parameter>job_handle</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>context</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Utilizado para solicitar el estado al servidor Gearman, que llamará al retorno de estado
   especificado (mediante <methodname>GearmanClient::setStatusCallback</methodname>).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>job_handle</parameter></term>
     <listitem>
      <para>
       El descriptor para la tarea cuyo estado se desea obtener
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Los datos a pasar al retorno de estado, generalmente una referencia a un array o a un objeto
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un objeto <classname>GearmanTask</classname> o &false; en caso de error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Supervisar la finalización de múltiples tareas en segundo plano</title>
    <para>
     Un retraso artificial se introduce en el agente de este ejemplo para simular un
     proceso largo. Solo se lanza un agente en este ejemplo.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

/* crea nuestro objeto */
$gmclient= new GearmanClient();

/* añade el servidor por omisión */
$gmclient->addServer();

/* lanza una tarea en segundo plano y guarda los descriptores */
$handles = array();
$handles[0] = $gmclient->doBackground("inverse", "¡Hola mundo!");
$handles[1] = $gmclient->doBackground("inverse", "!ednom el ruojnoB");

$gmclient->setStatusCallback("inverse_estado");

/* Consulta al servidor para ver cuándo las tareas en segundo plano terminan; */
/* un método mejor consiste en llamar a los retornos de evento */
do
{
   /* Utiliza la variable de contexto para saber cuántas tareas se han completado */
   $done = 0;
   $gmclient->addTaskStatus($handles[0], $done);
   $gmclient->addTaskStatus($handles[1], $done);
   $gmclient->runTasks();
   echo "Completado: $done\n";
   sleep(1);
}
while ($done != 2);

function inverse_estado($task, $done)
{
   if (!$task->isKnown())
      $done++;
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Completado: 0
Completado: 0
Completado: 0
Completado: 0
Completado: 0
Completado: 0
Completado: 0
Completado: 0
Completado: 0
Completado: 0
Completado: 0
Completado: 0
Completado: 1
Completado: 1
Completado: 1
Completado: 1
Completado: 1
Completado: 1
Completado: 1
Completado: 1
Completado: 1
Completado: 1
Completado: 1
Completado: 1
Completado: 2
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>GearmanClient::setStatusCallback</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
