<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3c0b61c45a5dabe46865510311e57b77ea3dddb7 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="gearmanclient.dostatus" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GearmanClient::doStatus</refname>
  <refpurpose>Recupera el estado de la tarea en curso</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="GearmanClient">
   <modifier>public</modifier> <type>array</type><methodname>GearmanClient::doStatus</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Devuelve el estado de la tarea en curso. Puede ser utilizado durante
   múltiples llamadas al método <methodname>GearmanClient::doNormal</methodname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un array que representa el porcentaje de realización proporcionado en forma
   de fracción, donde el primer elemento es el numerador, y el segundo,
   el denominador.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Recupera el estado de un trabajo cuya ejecución tarda tiempo</title>
    <para>
     El agente en este ejemplo tiene un retraso artificial añadido durante la ejecución de la
     función. Después de cada retraso, llama al método <methodname>GearmanJob::status</methodname>
     del cual el cliente recupera la información.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

echo "Inicio\n";

# Crea un cliente.
$gmclient= new GearmanClient();

# Añade un servidor por defecto (localhost).
$gmclient->addServer();

echo "Envío de un trabajo\n";

# Envío del trabajo
do
{
  $result = $gmclient->doNormal("reverse", "Hello!");

  # Verifica los diferentes paquetes y errores devueltos.
  switch($gmclient->returnCode())
  {
    case GEARMAN_WORK_DATA:
      break;
    case GEARMAN_WORK_STATUS:
      # Recupera el estado del trabajo en curso
      list($numerator, $denominator)= $gmclient->doStatus();
      echo "Estado : $numerator/$denominator complete\n";
      break;
    case GEARMAN_WORK_FAIL:
      echo "Fallo \n";
      exit;
    case GEARMAN_SUCCESS:
      break;
    default:
      echo "RET : " . $gmclient->returnCode() . "\n";
      exit;
  }
}
while($gmclient->returnCode() != GEARMAN_SUCCESS);

echo "Éxito : $result\n";

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Inicio
Envío de un trabajo
Estado : 1/6 complete
Estado : 2/6 complete
Estado : 3/6 complete
Estado : 4/6 complete
Estado : 5/6 complete
Estado : 6/6 complete
Éxito : !olleH
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>GearmanClient::doNormal</methodname></member>
    <member><methodname>GearmanJob::status</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
