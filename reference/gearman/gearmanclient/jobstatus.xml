<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3c0b61c45a5dabe46865510311e57b77ea3dddb7 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="gearmanclient.jobstatus" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GearmanClient::jobStatus</refname>
  <refname>gearman_job_status</refname>
  <refpurpose>Recupera el estado de un trabajo en segundo plano</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (método) :</para>
  <methodsynopsis role="GearmanClient">
   <modifier>public</modifier> <type>array</type><methodname>GearmanClient::jobStatus</methodname>
   <methodparam><type>string</type><parameter>job_handle</parameter></methodparam>
  </methodsynopsis>
  <para>
   Recupera el estado de un trabajo en segundo plano para el gestor de
   trabajos proporcionado. Las informaciones de estado especifican si el trabajo es conocido,
   si el trabajo está actualmente en ejecución, así como el porcentaje
   de realización.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>job_handle</parameter></term>
     <listitem>
      <para>
       &gearman.parameter.jobhandle;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un array que contiene las informaciones de estado para el trabajo
   correspondiente al gestor de trabajos proporcionado. El primer elemento es un
   bool indicando si el trabajo es conocido, el segundo es un bool indicando
   si el trabajo está en ejecución, el tercero y el cuarto corresponden al numerador y denominador del porcentaje de realización.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Supervisa el estado de un trabajo en segundo plano que tarda en ejecutarse</title>
    <programlisting role="php">
<![CDATA[
<?php

/* Crea un cliente */
$gmclient= new GearmanClient();

/* Añade un servidor por defecto */
$gmclient->addServer();

/* Ejecuta el cliente */
$job_handle = $gmclient->doBackground("reverse", "this is a test");

if ($gmclient->returnCode() != GEARMAN_SUCCESS)
{
  echo "Código de retorno incorrecto\n";
  exit;
}

$done = false;
do
{
   sleep(3);
   $stat = $gmclient->jobStatus($job_handle);
   if (!$stat[0]) // el trabajo es conocido, significando que no ha terminado
      $done = true;
   echo "Ejecución : " . ($stat[1] ? "true" : "false") . ", numerador : " . $stat[2] . ", denominador : " . $stat[3] . "\n";
}
while(!$done);

echo "hecho !\n";

?>
]]>
     </programlisting>
     &example.outputs.similar;
     <screen>
<![CDATA[
Ejecución : true, numerador : 3, denominador : 14
Ejecución : true, numerador : 6, denominador : 14
Ejecución : true, numerador : 9, denominador : 14
Ejecución : true, numerador : 12, denominador : 14
Ejecución : false, numerador : 0, denominador : 0
hecho !
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>GearmanClient::doStatus</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
