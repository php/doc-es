<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1c3a0a021e0d97acce54fda55f6e941557056afe Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="memcache.set" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::set</refname>
  <refname>memcache_set</refname>
  <refpurpose>Almacena datos en el servidor de caché</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Memcache::set</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flag</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>expire</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>memcache_set</methodname>
   <methodparam><type>Memcache</type><parameter>memcache</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flag</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>expire</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>Memcache::set</function> almacena el elemento <parameter>var</parameter>
   con la clave <parameter>key</parameter> en el servidor de caché.
   El parámetro <parameter>expire</parameter> representa el tiempo de expiración en segundos
   del elemento. Si vale 0, el elemento no expirará nunca (aunque el servidor
   de caché no garantiza que este elemento siempre estará almacenado, puede ser
   eliminado de la caché para hacer espacio para otros elementos).
   Puede utilizarse la constante <constant>MEMCACHE_COMPRESSED</constant>
   como valor del parámetro <parameter>flag</parameter>
   si se desea utilizar la compresión en tiempo real (utilizando la biblioteca zlib).
   <note>
    <para>
     Tenga en cuenta que los recursos (es decir, identificadores de archivos o conexiones)
     no pueden almacenarse en la caché, ya que no pueden ser representados linealmente.
    </para>
   </note>
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       La clave que se asociará con el elemento.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       La variable a registrar. Los strings y los integers se registran como tales,
       los demás tipos se registran de manera serializada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flag</parameter></term>
     <listitem>
      <para>
       Utilice <constant>MEMCACHE_COMPRESSED</constant> para registrar
       el elemento comprimido (utiliza zlib).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>expire</parameter></term>
     <listitem>
      <para>
       Tiempo de expiración para el elemento. Si es igual a &zero;, el elemento no expirará.
       También puede utilizarse un timestamp Unix o un número de segundos a partir de la fecha actual,
       pero en este último caso, el número de segundos no debe exceder 2592000 (30 días).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>Memcache::set</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* API procedimental */

/* conexión al servidor de caché */
$memcache_obj = memcache_connect('memcache_host', 11211);

/*
define el valor del elemento identificado por la clave 'var_key' ;
utilización del valor 0 para el flag ;
la compresión no se utiliza ;
el tiempo de expiración es de 30 segundos
*/
memcache_set($memcache_obj, 'var_key', 'algunas variables', 0, 30);

echo memcache_get($memcache_obj, 'var_key');

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Ejemplo con <function>Memcache::set</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* API orientada a objetos */

$memcache_obj = new Memcache;

/* conexión al servidor de caché */
$memcache_obj->connect('memcache_host', 11211);

/*
define el valor del elemento identificado por la clave 'var_key' ;
utilización de la compresión en tiempo real ;
el tiempo de expiración es de 50 segundos
*/
$memcache_obj->set('var_key', 'algunas variables grandes', MEMCACHE_COMPRESSED, 50);

echo $memcache_obj->get('var_key');

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::add</function></member>
    <member><function>Memcache::replace</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
