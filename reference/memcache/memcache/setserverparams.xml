<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1c3a0a021e0d97acce54fda55f6e941557056afe Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="memcache.setserverparams" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::setServerParams</refname>
  <refname>memcache_set_server_params</refname>
  <refpurpose>Modifica los parámetros y los estados del servidor durante la ejecución</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Memcache::setServerParams</methodname>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>11211</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retry_interval</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>status</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>failure_callback</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>memcache_set_server_params</methodname>
   <methodparam><type>Memcache</type><parameter>memcache</parameter></methodparam>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>11211</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retry_interval</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>status</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>failure_callback</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>Memcache::setServerParams</function> modifica los parámetros del
   servidor durante la ejecución.
  </para>
  <note>
   <para>
    Esta función fue añadida en la versión 2.1.0 de Memcache.
   </para>
  </note>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>host</parameter></term>
     <listitem>
      <para>
       Host donde memcache escucha para conexiones.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Puerto donde memcache escucha para conexiones.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Valor en segundos que será utilizado para conectarse al demonio.
       Piénselo dos veces antes de cambiar el valor por omisión de un segundo
       - podría perderse todos los beneficios del uso de la caché si la conexión es demasiado lenta.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>retry_interval</parameter></term>
     <listitem>
      <para>
       Controla cuántas veces se intentará conectar a un servidor que falla:
       el valor por omisión es de 15 segundos. Si este parámetro vale -1, no se realizará
       ningún nuevo intento. Ni este parámetro, ni el parámetro
       <parameter>persistent</parameter> tienen efecto cuando esta extensión
       es cargada dinámicamente mediante la función <function>dl</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>status</parameter></term>
     <listitem>
      <para>
       Controla si el servidor debe ser indicado como en línea.
       Cuando este parámetro vale &false; y el parámetro <parameter>retry_interval</parameter>
       vale -1, permite mantener un servidor fallido en la lista
       y no afectará al algoritmo de distribución de claves. Las peticiones
       para este servidor fallarán inmediatamente según la configuración del
       parámetro <parameter>memcache.allow_failover</parameter>.
       Por omisión, este parámetro vale &true;, significando que el servidor debe ser
       considerado como en línea.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>failure_callback</parameter></term>
     <listitem>
      <para>
       Permite al usuario especificar una función de devolución de llamada para
       manejar un error. La función es ejecutada antes de alcanzar el límite de intentos.
       La función toma dos argumentos; el nombre del host y el puerto
       del servidor que falló.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>Memcache::setServerParams</function></title>
    <programlisting role="php">
<![CDATA[
<?php

function _callback_memcache_failure($host, $port) {
    print "memcache '$host:$port' falló";
}

/* API orientada a objetos */

$memcache = new Memcache;

// Añade el servidor en modo fuera de línea
$memcache->addServer('memcache_host', 11211, false, 1, 1, -1, false);

// Reemplaza el servidor en línea
$memcache->setServerParams('memcache_host', 11211, 1, 15, true, '_callback_memcache_failure');

/* API procedimental */

$memcache_obj = memcache_connect('memcache_host', 11211);
memcache_set_server_params($memcache_obj, 'memcache_host', 11211, 1, 15, true, '_callback_memcache_failure');

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::addServer</function></member>
    <member><function>Memcache::getServerStatus</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
