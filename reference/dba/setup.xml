<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8b2eba9e48eb1037f11aef36820db6b5b07fa08c Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<!-- CREDITS: DAnnebicque -->

<chapter xml:id="dba.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.setup;

 <!-- {{{ Requirements -->
 <section xml:id="dba.requirements">
  &reftitle.required;
  <para>
   El comportamiento de ciertos aspectos depende de la implementación de la
   base de datos subyacente. Las funciones como
   <function>dba_optimize</function> y <function>dba_sync</function>
   funcionan como se espera para una base de datos, mientras que pueden no hacer nada en otras. Deben descargarse e instalarse los gestores DBA soportados.
   <table>
    <title>Lista de gestores DBA</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Gestor</entry>
       <entry>Notas</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>dbm</literal></entry>
       <entry>
        DBM es la más antigua (la original) de las bases de datos
        de estilo Berkeley DB. Debería evitarse su uso
        si es posible. No se proporciona soporte para la compatibilidad de las funciones internas a DB2 y gdbm, ya que solo son compatibles a nivel de código fuente, pero no pueden manejar el formato original DBM.
       </entry>
      </row>

      <row>
       <entry><literal>ndbm</literal></entry>
       <entry>
        Ndbm es un nuevo tipo y más flexible que dbm. Sin embargo,
        presenta limitaciones arbitrarias de dbm
        (y por lo tanto, está obsoleto).
       </entry>
      </row>

      <row>
       <entry><literal>gdbm</literal></entry>
       <entry>
        Gdbm es un <link xlink:href="&url.gdbm;">gestor de
        bases de datos GNU</link>.
       </entry>
      </row>

      <row>
       <entry><literal>db2</literal></entry>
       <entry>
        <link xlink:href="&url.sleepycat;">Oracle Berkeley
         DB 2</link>. Se describe como "un toolkit que proporciona
        soporte de alto rendimiento para bases de datos,
        tanto del lado cliente como del lado servidor."
       </entry>
      </row>

      <row>
       <entry><literal>db3</literal></entry>
       <entry>
        <link xlink:href="&url.sleepycat;">Oracle Berkeley DB
         3</link>.
       </entry>
      </row>

      <row>
       <entry><literal>db4</literal></entry>
       <entry>
        <link xlink:href="&url.sleepycat;">Oracle Berkeley DB
        4 o 5</link>. Esta opción puede
        utilizarse con BDB 5 a partir de PHP 5.3.3.
       </entry>
      </row>

      <row>
       <entry><literal>cdb</literal></entry>
       <entry>
        Cdb es un paquete rápido, ligero y fiable para crear y leer
        bases de datos constantes. Fue creado por el autor
        de qmail y puede encontrarse en
        <link xlink:href="&url.cdb;">&url.cdb;</link>. Dado que es "constante",
        solo se soportarán las operaciones de lectura.
        También se soporta la escritura (y no la actualización)
        mediante la biblioteca interna cdb.
       </entry>
      </row>

      <row>
       <entry><literal>cdb_make</literal></entry>
       <entry>
        Se soporta la escritura (y no la actualización)
        de archivos cdb cuando se utiliza la biblioteca cdb.
       </entry>
      </row>

      <row>
       <entry><literal>flatfile</literal></entry>
       <entry>
        Esto está disponible por razones de compatibilidad con
        la extensión obsoleta <literal>dbm</literal>. Sin embargo, puede
        utilizarse cuando los archivos han sido creados en este formato.
        Ocurre cuando la configuración no ha logrado encontrar una
        biblioteca externa.
       </entry>
      </row>

      <row>
       <entry><literal>inifile</literal></entry>
       <entry>
        Esto está disponible para permitir la modificación de los
        archivos php.ini desde scripts PHP. Al utilizar archivos ini, pueden pasarse arrays de la forma
        (0=>grupo,1=>nombre_valor) o strings de la forma
        "[grupo]nombre_valor" donde el grupo es opcional. Dado que las
        funciones <function>dba_firstkey</function> y <function>dba_nextkey</function>
        devuelven un string representando la clave, existe una nueva función, <function>dba_key_split</function>,
        que permite convertir las claves en arrays sin pérdida.
       </entry>
      </row>

      <row>
       <entry><literal>qdbm</literal></entry>
       <entry>
        La biblioteca qdbm puede descargarse desde
        <link xlink:href="&url.qdbm;"/>.
       </entry>
      </row>

      <row>
       <entry><literal>tcadb</literal></entry>
       <entry>
        La biblioteca Tokyo Cabinet puede ser
        descargada desde <link xlink:href="&url.tcadb;"/>.
       </entry>
      </row>
      <row>
       <entry><literal>lmdb</literal></entry>
       <entry>
        Disponible a partir de PHP 7.2.0. La biblioteca Lightning
        Memory-Mapped Database puede ser descargada desde
         <link xlink:href="&url.lmdb;"/>.
       </entry>
      </row>

     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   Al llamar a la función <function>dba_open</function> o
   la función <function>dba_popen</function>, debe proporcionarse uno de los
   nombres de gestor como argumento. La lista
   de gestores disponibles puede mostrarse utilizando
   la función <function>phpinfo</function> o la función
   <function>dba_handlers</function>.
  </para>
 </section>
 <!-- }}} -->

 <!-- {{{ Installation -->
 &reference.dba.configure;
 <!-- }}} -->

 <!-- {{{ Configuration -->
 <section xml:id="dba.configuration">
  &reftitle.runtime;
  &extension.runtime;
  <para>
   <table>
    <title>&ConfigureOptions; DBA</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody xml:id="dba.configuration.list">
      <row>
       <entry>
        <link linkend="ini.dba.default_handler">dba.default_handler</link>
       </entry>
       <entry>DBA_DEFAULT</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry><!-- leave empty, this will be filled by an automatic script --></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  &ini.descriptions.title;

  <para>
   <variablelist>
    <varlistentry xml:id="ini.dba.default_handler">
     <term>
      <parameter>dba.default_handler</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       El nombre del gestor por defecto
      </para>
     </listitem>

    </varlistentry>

   </variablelist>
  </para>
 </section>
 <!-- }}} -->

 <!-- {{{ Resources -->
 <section xml:id="dba.resources">
  &reftitle.resources;
  <para>
   A partir de PHP 8.4.0, la mayoría de las funciones DBA operan sobre o devuelven recursos (por ejemplo, <function>dba_open</function>
   devuelve un identificador de enlace DBA positivo requerido por la mayoría de las funciones DBA).
  </para>
 </section>
 <!-- }}} -->

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
