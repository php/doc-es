<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phardata.compressfiles" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PharData::compressFiles</refname>
  <refpurpose>Comprime todos los ficheros del archivo tar/zip actual</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PharData">
   <modifier>public</modifier> <type>void</type><methodname>PharData::compressFiles</methodname>
   <methodparam><type>int</type><parameter>compression</parameter></methodparam>
  </methodsynopsis>

  <para>
   Para los archivos basados en tar, este método genera una excepción
   <classname>BadMethodCallException</classname> ya que la compresión individual de los ficheros
   de un archivo tar no es soportada por este formato de archivo. Utilice
   <function>PharData::compress</function> para comprimir un archivo basado en tar completo.
  </para>
  <para>
   Para los archivos basados en Zip, este método comprime todos los ficheros del archivo
   utilizando la compresión especificada.
   Las extensiones <link linkend="ref.zlib">zlib</link> o <link linkend="ref.bzip2">bzip2</link>
   deben estar activadas para aprovechar esta funcionalidad. Además, si al menos un fichero
   ya está comprimido utilizando la compresión bzip2/zlib, la extensión adecuada debe estar activada
   para descomprimir los ficheros antes de volver a comprimirlos.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>compression</parameter></term>
     <listitem>
      <para>
        La compresión debe ser <literal>Phar::GZ</literal> o
     <literal>Phar::BZ2</literal> para aplicar una compresión, o <literal>Phar::NONE</literal>
     para eliminarla.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Genera una excepción <classname>BadMethodCallException</classname> si la variable
   INI <link linkend="ini.phar.readonly">phar.readonly</link> está a on, si la extensión
   <link linkend="ref.zlib">zlib</link> no está disponible o si al menos un fichero está
   comprimido vía bzip2 y la extensión <link linkend="ref.bzip2">bzip2</link> no está
   activada.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo con <function>PharData::compressFiles</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$p = new Phar('/ruta/al/mon.phar', 0, 'mon.phar');
$p['monfichero.txt'] = 'hola';
$p['monfichero2.txt'] = 'hola';
foreach ($p as $file) {
    var_dump($file->getFileName());
    var_dump($file->isCompressed());
    var_dump($file->isCompressed(Phar::BZ2));
    var_dump($file->isCompressed(Phar::GZ));
}
$p->compressFiles(Phar::GZ);
foreach ($p as $file) {
    var_dump($file->getFileName());
    var_dump($file->isCompressed());
    var_dump($file->isCompressed(Phar::BZ2));
    var_dump($file->isCompressed(Phar::GZ));
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(14) "monfichero.txt"
bool(false)
bool(false)
bool(false)
string(15) "monfichero2.txt"
bool(false)
bool(false)
bool(false)
string(14) "monfichero.txt"
int(4096)
bool(false)
bool(true)
string(15) "monfichero2.txt"
int(4096)
bool(false)
bool(true)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PharFileInfo::getCompressedSize</function></member>
    <member><function>PharFileInfo::isCompressed</function></member>
    <member><function>PharFileInfo::compress</function></member>
    <member><function>PharFileInfo::decompress</function></member>
    <member><function>Phar::canCompress</function></member>
    <member><function>Phar::isCompressed</function></member>
    <member><function>PharData::decompressFiles</function></member>
    <member><function>Phar::getSupportedCompression</function></member>
    <member><function>PharData::compress</function></member>
    <member><function>PharData::decompress</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
