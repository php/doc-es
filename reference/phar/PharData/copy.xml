<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8d09722b6d95d2545d5a4c9415c6955efc3a464e Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phardata.copy" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>PharData::copy</refname>
  <refpurpose>Copia un fichero interno del archivo tar/zip a otro fichero dentro del mismo archivo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PharData">
   <modifier>public</modifier> <type>true</type><methodname>PharData::copy</methodname>
   <methodparam><type>string</type><parameter>from</parameter></methodparam>
   <methodparam><type>string</type><parameter>to</parameter></methodparam>
  </methodsynopsis>
  <para>
   Copia un fichero interno del archivo tar/zip a otro fichero dentro del mismo archivo.
   Es una alternativa orientada a objetos al uso de <function>copy</function> con
   el gestor de flujos phar.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>from</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>to</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.true.always;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Se lanza una excepción <classname>UnexpectedValueException</classname> si el fichero de origen no existe,
   si el fichero de destino ya existe, si el soporte de escritura está desactivado, si falla la apertura
   de alguno de los dos ficheros o si falla la lectura del fichero de origen; o se lanza una excepción
   <classname>PharException</classname> si falla la escritura de los cambios del archivo phar.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo con <function>PharData::copy</function></title>
    <para>
     Este ejemplo muestra el uso de <function>PharData::copy</function> y su equivalente
     en términos de gestor de flujos. La principal diferencia entre ambos enfoques
     radica en la gestión de errores. Todos los métodos PharData lanzan excepciones, mientras
     que el gestor de flujos utiliza <function>trigger_error</function>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

try {
    $phar = new PharData('monphar.tar');
    $phar['a'] = 'salut';
    $phar->copy('a', 'b');
    echo $phar['b']; // Muestra "phar://myphar.tar/b"
} catch (Exception $e) {
    // Se manejan los errores
}

// El equivalente en términos de flujo del ejemplo anterior.
// Se lanzan E_WARNING en caso de error en lugar de excepciones.
copy('phar://monphar.tar/a', 'phar//monphar.tar/c');
echo file_get_contents('phar://monphar.tar/c'); // Muestra "salut"
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
