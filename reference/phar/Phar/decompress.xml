<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phar.decompress" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Phar::decompress</refname>
  <refpurpose>Descomprime el archivo tar completo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>public</modifier> <type class="union"><type>Phar</type><type>null</type></type><methodname>Phar::decompress</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>extension</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
 &phar.write;

  <para>
   Para los archivos phar basados en tar y en phar, este método descomprime el archivo completo.
  </para>
  <para>
   Para los archivos phar basados en Zip, este método falla y lanza una excepción.
   La extensión <link linkend="ref.zlib">zlib</link> debe estar activa para descomprimir
   un archivo comprimido con gzip, y la extensión <link linkend="ref.bzip2">bzip2</link>
   debe estar activa para descomprimir un archivo comprimido con bzip2.
   Al igual que con todas las funcionalidades que modifican el contenido de un phar, la variable INI
   <link linkend="ini.phar.readonly">phar.readonly</link> debe estar a off
   para que funcione.
  </para>
  <para>
   Además, este método cambia automáticamente la extensión del archivo,
   <literal>.phar</literal>
   Por omisión para los archivos phar, o <literal>.phar.tar</literal> para los archivos phar basados en tar.
   De lo contrario, se puede especificar una extensión de archivo utilizando el segundo
   argumento.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>extension</parameter></term>
     <listitem>
      <para>
       Para descomprimir, las extensiones de archivo por omisión
       son <literal>.phar</literal> y <literal>.phar.tar</literal>.
       Utilice este argumento para especificar otra extensión de archivo.
       Cabe señalar que todos los archivos phar ejecutables deben contener <literal>.phar</literal>
       en su nombre de archivo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Se devuelve un objeto <classname>Phar</classname> en caso de éxito,
   o &null; en caso de fallo.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Se lanza una excepción <classname>BadMethodCallException</classname> si
   la variable INI <link linkend="ini.phar.readonly">phar.readonly</link>
   está a on, si la extensión <link linkend="ref.zlib">zlib</link>
   no está disponible, o si la extensión <link linkend="ref.bzip2">bzip2</link>
   no está activada.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>extension</parameter> ahora es nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo con <function>Phar::decompress</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$p = new Phar('/ruta/al/mon.phar', 0, 'mon.phar.gz');
$p['monfichero.txt'] = 'hola';
$p['monfichero.txt'] = 'hola';
$p3 = $p2->decompress(); // crea /ruta/al/mon.phar
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PharFileInfo::getCompressedSize</function></member>
    <member><function>PharFileInfo::isCompressed</function></member>
    <member><function>PharFileInfo::compress</function></member>
    <member><function>PharFileInfo::decompress</function></member>
    <member><function>PharData::compress</function></member>
    <member><function>Phar::canCompress</function></member>
    <member><function>Phar::isCompressed</function></member>
    <member><function>Phar::compress</function></member>
    <member><function>Phar::getSupportedCompression</function></member>
    <member><function>Phar::compressFiles</function></member>
    <member><function>Phar::decompressFiles</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
