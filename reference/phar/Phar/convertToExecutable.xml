<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 656d1610af1a960d87c8b7056e54d0d4c75fb123 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phar.converttoexecutable" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::convertToExecutable</refname>
  <refpurpose>Convertir un archivo phar en otro formato de archivo phar ejecutable</refpurpose>
 </refnamediv>


 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>Phar</type><methodname>Phar::convertToExecutable</methodname>
   <methodparam choice="opt"><type>int</type><parameter>format</parameter><initializer>9021976</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>compression</parameter><initializer>9021976</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>extension</parameter></methodparam>
  </methodsynopsis>
  &phar.write;
  <para>
   Este método se utiliza para convertir un archivo phar en otro formato de fichero. Por ejemplo,
   se puede utilizar para crear un archivo phar ejecutable basado en tar desde un archivo phar ejecutable
   basado en zip, o desde un archivo phar ejecutable en el formato de fichero phar.
   Además, se puede utilizar para aplicar la compresión al archivo completo a un archivo basado en phar
   o tar.
  </para>
  <para>
   Si no se especifica ningún cambio, este método lanza una excepción de tipo <classname>BadMethodCallException</classname>
  </para>
  <para>
   En caso de éxito, el metodo crea un nuevo archivo en disco y devuelve un objeto de la clase
   <classname>PharData</classname>. El archivo antiguo no se elimina del disco, y debería hacerse manualmente después
   de que el proceso haya finalizado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       Este parámetro debería ser <constant>Phar::PHAR</constant>, <constant>Phar::TAR</constant>,
       o <constant>Phar::ZIP</constant>. Si se establece a &null;, se conservará el
       formato de fichero existente.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>compression</parameter></term>
     <listitem>
      <para>
       Este parámetro debería ser <constant>Phar::NONE</constant> para no comprimir el archivo
       completo, <constant>Phar::GZ</constant> para la compresión basada en zlib, y
       <constant>Phar::BZ2</constant> para la compresión basada en bzip.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>extension</parameter></term>
     <listitem>
      <para>
       Este parámetro se utiliza para sobrescribir la extensión de fichero predeterminada de un
       archivo convertido. Observe que todos los archivos phar basados en zip o en tar deben contener
       <literal>.phar</literal> en su extensión de fichero para poder ser procesados como un
       archivo phar.
      </para>
      <para>
       Si se convierte a un archivo basado en phar, las extensiones predeterminadas son
       <literal>.phar</literal>, <literal>.phar.gz</literal>, o <literal>.phar.bz2</literal>
       dependiendo de la compresión especificada. Para archivos phar basados en tar, las
       extensiones predeterminadas son <literal>.phar.tar</literal>, <literal>.phar.tar.gz</literal>,
       y <literal>.phar.tar.bz2</literal>. Para archivos phar basados en zip, la
       estensión predeterminada es <literal>.phar.zip</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El método devuelve un objeto <classname>Phar</classname> en caso de éxito, y lanza una
   excepción en caso de error.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Este método lanza una excepción de tipo <classname>BadMethodCallException</classname> cuando no se
   puede comprimir, se ha especificado un método de compresión desconocido, el archivo
   solicitado está almacenado en buffer con <function>Phar::startBuffering</function> y
   no se ha cerrado con <function>Phar::stopBuffering</function>, una
   excepción de tipo <classname>UnexpectedValueException</classname> si el soporte para escritura está deshabilitado,
   y una excepción de tipo <classname>PharException</classname> si se encontró algún problema
   durante el proceso de la creación de phar.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>Phar::convertToExecutable</function></title>
    <para>
     Utilizar Phar::convertToExecutable():
    </para>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $tarphar = new Phar('miphar.phar.tar');
    // convertirlo al formato de fichero phar
    // observe que miphar.phar.tar *no* está desvinculado
    $phar = $tarphar->convertToExecutable(Phar::PHAR); // crea miphar.phar
    $phar->setStub($phar->createDefaultStub('cli.php', 'web/index.php'));
    // crea miphar.phar.tgz
    $comprimido = $phar->convertToExecutable(Phar::TAR, Phar::GZ, '.phar.tgz');
} catch (Exception $e) {
    // manejar el error aquí
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::convertToData</function></member>
    <member><function>PharData::convertToExecutable</function></member>
    <member><function>PharData::convertToData</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
