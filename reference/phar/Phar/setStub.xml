<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9c828621cbce488cf6306b21c39e208f847eabd5 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="phar.setstub">
 <refnamediv>
  <refname>Phar::setStub</refname>
  <refpurpose>Utilizado para especificar el cargador PHP o el contenedor de carga de un archivo Phar</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>public</modifier> <type>bool</type><methodname>Phar::setStub</methodname>
   <methodparam><type class="union"><type>resource</type><type>string</type></type><parameter>stub</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  &phar.write;

  <para>
   Este método se utiliza para añadir un cargador PHP a un nuevo archivo Phar, o
   para reemplazar el contenedor de carga de un archivo Phar existente.
  </para>
  <para>
   El contenedor de carga de un archivo Phar se utiliza cuando un archivo es incluido directamente
   como en este ejemplo:
  </para>
  <programlisting role="php">
<![CDATA[
<?php
include 'monphar.phar';
?>
   ]]>
  </programlisting>
  <para>
   El cargador no se utiliza cuando un fichero es incluido a través del flujo <literal>phar</literal>
   como esto:
  </para>
  <programlisting role="php">
   <![CDATA[
<?php
include 'phar://monphar.phar/unfchier.php';
?>
   ]]>
  </programlisting>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stub</parameter></term>
     <listitem>
      <para>
       Una cadena o un &resource; de flujo abierto a utilizar
       como contenedor ejecutable para este archivo phar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>

      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Una excepción <classname>UnexpectedValueException</classname> es lanzada si
   <link linkend="ini.phar.readonly">phar.readonly</link> está activado en
   el php.ini.
   Una excepción <classname>PharException</classname> es lanzada si se encuentran problemas al
   escribir los cambios en el disco.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Llamar a <methodname>Phar::setStub</methodname> con una
       <type>resource</type> y una <parameter>length</parameter>
       ahora está obsoleto. Tales llamadas deberían ser reemplazadas por:
       <code>$phar->setStub(stream_get_contents($resource));</code>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo con <function>Phar::setStub</function></title>
    <para>
    </para>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $p = new Phar(dirname(__FILE__) . '/nouveau.phar', 0, 'nouveau.phar');
    $p['a.php'] = '<?php var_dump("Salut");';
    $p->setStub('<?php var_dump("Premier"); Phar::mapPhar("nouveau.phar"); __HALT_COMPILER(); ?>');
    include 'phar://nouveau.phar/a.php';
    var_dump($p->getStub());
    $p['b.php'] = '<?php var_dump("Tout le monde");';
    $p->setStub('<?php var_dump("Second"); Phar::mapPhar("nouveau.phar"); __HALT_COMPILER(); ?>');
    include 'phar://nouveau.phar/b.php';
    var_dump($p->getStub());
} catch (Exception $e) {
    echo 'Error al escribir nuevo.phar: ', $e;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(5) "Salut"
string(79) "<?php var_dump("Premier"); Phar::mapPhar("nouveau.phar"); __HALT_COMPILER(); ?>"
string(13) "Tout le monde"
string(78) "<?php var_dump("Second"); Phar::mapPhar("nouveau.phar"); __HALT_COMPILER(); ?>"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::getStub</function></member>
    <member><function>Phar::createDefaultStub</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
