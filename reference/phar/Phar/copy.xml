<?xml version='1.0' encoding='utf-8'?>
<!-- EN-Revision: 8d09722b6d95d2545d5a4c9415c6955efc3a464e Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phar.copy" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::copy</refname>
  <refpurpose>Copia un fichero perteneciente a un archivo hacia otro fichero del mismo archivo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>public</modifier> <type>true</type><methodname>Phar::copy</methodname>
   <methodparam><type>string</type><parameter>from</parameter></methodparam>
   <methodparam><type>string</type><parameter>to</parameter></methodparam>
  </methodsynopsis>
  &phar.write;

  <para>
   Copia un fichero perteneciente a un archivo hacia un nuevo
   fichero del mismo archivo. Es una alternativa orientada a objetos
   al uso de <function>copy</function> con un flujo phar.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>from</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>to</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.true.always;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Levanta una excepción <classname>UnexpectedValueException</classname>
   si el fichero origen no existe, si el fichero destino ya existe,
   si el acceso en escritura está desactivado, si abrir uno u otro
   de los ficheros falla, si la lectura del fichero origen falla, o levanta
   una excepción <classname>PharException</classname>
   si la escritura de los cambios en el phar falla.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>Phar::copy</function></title>
    <para>
     Este ejemplo muestra cómo utilizar <function>Phar::copy</function> y la comparación en términos
     de rendimiento con el equivalente utilizando el flujo phar. La diferencia principal entre
     los dos métodos concierne la gestión de errores. Todos los métodos Phar levantan excepciones,
     mientras que las funciones de flujo utilizan <function>trigger_error</function>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

try {
    $phar = new Phar('monphar.phar');

    $phar['a'] = 'salut';
    $phar->copy('a', 'b');

    echo $phar['b']; // Muestra "phar://myphar.phar/b"
} catch (Exception $e) {
    // Maneja los errores
}

// El equivalente en términos de flujo del código anterior
// se devuelven E_WARNING en lugar de excepciones
copy('phar://monphar.phar/a', 'phar//monphar.phar/c');
echo file_get_contents('phar://monphar.phar/c'); // Muestra "salut"

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
