<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 0ffb9c9fc8f4bf1589a1a573644e1c23b6b451d1 Maintainer: seros Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="imagick.distortimage">
 <refnamediv>
  <refname>Imagick::distortImage</refname>
  <refpurpose>Deforma una imagen utilizando varios métodos de distorsión</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Imagick::distortImage</methodname>
   <methodparam><type>int</type><parameter>method</parameter></methodparam>
   <methodparam><type>array</type><parameter>arguments</parameter></methodparam>
   <methodparam><type>bool</type><parameter>bestfit</parameter></methodparam>
  </methodsynopsis>
  <para>
   Deforma una imagen utilizando varios métodos de distorsión, mapeando la paleta
   de colores de la imagen de origen a una nueva imagen destino normalmente del mismo
   tamaño que la imagen de origen, a menos que 'bestfit' esté establecido a &true;.
  </para>
  <para>
   Si 'bestfit' está habilitado, y la distorsión lo permite, la imagen destino
   se ajusta para asegurarse de que la 'imagen' de origen entera se ajustará dentro de
   la imagen destino final, la cuál será redimensionada e compensada acordemente. También,
   en la mayoría de los casos el índice virtual de la imagen de origen será tomado en cuenta
   en el mapeado.
  </para>
  <para>
   &imagick.method.available.0x636;
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>method</parameter></term>
     <listitem>
      <para>
       El método de distorsión de la imagen. Véase <link
       linkend="imagick.constants.distortion">constantes de distorsión</link>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arguments</parameter></term>
     <listitem>
      <para>
       Los argumentos para este método de distorsión
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bestfit</parameter></term>
     <listitem>
      <para>
       Intenta redimensionar la imagen destino para ajustarse a la imagen de origen deformada
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &imagick.return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   &imagick.imagick.throws;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Usar <function>Imagick::distortImage</function>:</title>
    <para>
     Deformar una imagen y mostrarla en el navegador.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Crear un nuevo objeto */
$im = new Imagick();

/* Crear un nuevo patrón de tablero de ajedrez */
$im->newPseudoImage(100, 100, "pattern:checkerboard");

/* Esteblecer el formato de la imagen a png */
$im->setImageFormat('png');

/* Rellenar las nuevas áreas visibles con transparente */
$im->setImageVirtualPixelMethod(Imagick::VIRTUALPIXELMETHOD_TRANSPARENT);

/* Activar el mate */
$im->setImageMatte(true);

/* Puntos de control para la distorsión */
$puntosControl = array( 10, 10,
                        10, 5,

                        10, $im->getImageHeight() - 20,
                        10, $im->getImageHeight() - 5,

                        $im->getImageWidth() - 10, 10,
                        $im->getImageWidth() - 10, 20,

                        $im->getImageWidth() - 10, $im->getImageHeight() - 10,
                        $im->getImageWidth() - 10, $im->getImageHeight() - 30);

/* Realizar la distorsión */
$im->distortImage(Imagick::DISTORTION_PERSPECTIVE, $puntosControl, true);

/* Imprimir la imagen */
header("Content-Type: image/png");
echo $im;
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Salida del ejemplo : Using Imagick::distortImage()</alt>
     <imageobject>
      <imagedata fileref="en/reference/imagick/figures/distortImage.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Imagick::blurImage</function></member>
    <member><function>Imagick::motionBlurImage</function></member>
    <member><function>Imagick::radialBlurImage</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
