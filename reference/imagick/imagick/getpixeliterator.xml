<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 65c4446ab35754d2f3cd8abec11302650a150bf9 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="imagick.getpixeliterator">
 <refnamediv>
  <refname>Imagick::getPixelIterator</refname>
  <refpurpose>Devuelve un MagickPixelIterator</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>ImagickPixelIterator</type><methodname>Imagick::getPixelIterator</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Devuelve un MagickPixelIterator.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto MagickPixelIterator.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   &imagick.imagick.throws;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>Imagick::getPixelIterator</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function getPixelIterator($imagePath) {
    $imagick = new \Imagick(realpath($imagePath));
    $imageIterator = $imagick->getPixelIterator();

    foreach ($imageIterator as $row => $pixels) { /* Se recorren las líneas de píxeles */
        foreach ($pixels as $column => $pixel) { /* Se recorren los píxeles en la línea (columna) */
            /** @var $pixel \ImagickPixel */
            if ($column % 2) {
                $pixel->setColor("rgba(0, 0, 0, 0)"); /* Se pintan todos los segundos píxeles en negro */
            }
        }
        $imageIterator->syncIterator(); /* Se sincroniza el iterador, es importante hacerlo en cada iteración */
    }

    header("Content-Type: image/jpg");
    echo $imagick;
}

?>
]]>
     </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
