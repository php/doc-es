<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1f68eecaa7c4c723abe72a5a040ea7b15023a5aa Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<section xml:id="intl.collator-constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 <para>
  <variablelist>
   <varlistentry xml:id="collator.constants.french-collation">
    <term>
     <constant>Collator::FRENCH_COLLATION</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Se ordenan los strings con diferentes acentos, al final de la cadena.
      Este atributo se configura automáticamente a <emphasis>On</emphasis>
      para las locales francesas, y algunas otras. Los usuarios no necesitan
      configurar explícitamente este atributo. Existe un coste de rendimiento
      al comparar strings cuando este atributo está a <emphasis>On</emphasis>,
      pero el tamaño de las claves de ordenación permanece inalterado. Los
      valores posibles son:
      <simplelist>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::OFF</constant>(por omisión)</member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Reglas de FRENCH_COLLATION</title>
       <para>
        <simplelist>
         <member>F=OFF cote &lt; coté &lt; côte &lt; côté </member>
         <member>F=ON cote &lt; côte &lt; coté &lt; côté</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.alternate-handling">
    <term>
     <constant>Collator::ALTERNATE_HANDLING</constant>
    </term>
    <listitem>
     <para>
      El atributo alterno se utiliza para controlar el manejo de caracteres
      variables de UCA: espacios en blanco, puntuación y símbolos. Si Alternate
      está configurado a <emphasis>NonIgnorable</emphasis> (N), entonces las
      diferencias entre estos caracteres tienen la misma importancia que las
      diferencias entre letras. Si Alternate está configurado a <emphasis>Shifted</emphasis>
      (S), entonces estos caracteres tendrán una importancia menor. El valor
      <emphasis>Shifted</emphasis> se utiliza a menudo conjuntamente con Quaternary
      que vale <emphasis>Strength</emphasis>. En este caso, los espacios en blanco,
      la puntuación y los símbolos se consideran durante la comparación, pero
      únicamente si los otros aspectos de la cadena (letras base, acentos y mayúsculas)
      son todos idénticos. Si Alternate no está configurado a Shifted, no hay
      entonces diferencia entre una Strength de 3 y una Strength de 4.
      Para más información y ejemplos, véase Variable_Weighting en
      <link xlink:href="&url.icu.uca;">UCA</link>. La razón por la que los
      valores de Alternate no son simplemente <emphasis>On</emphasis> y
      <emphasis>Off</emphasis> es que valores adicionales para Alternate podrían
      ser añadidos en el futuro. La opción UCA Blanked se expresa con un valor
      de Strength a 3, y Alternate configurado a Shifted. El valor por omisión
      para la mayoría de locales es NonIgnorable. Si Shifted es seleccionado,
      puede ser más lento si hay muchas cadenas que son idénticas, excepto por
      la puntuación: el tamaño de la clave de ordenación permanecerá inalterado,
      a menos que el nivel de Strength sea elevado.
     </para>
     <para>
      Los valores posibles son:
      <simplelist>
       <member><constant>Collator::NON_IGNORABLE</constant>(por omisión)</member>
       <member><constant>Collator::SHIFTED</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Reglas ALTERNATE_HANDLING</title>
       <para>
        <simplelist>
         <member>
          S=3, A=N di Silva &lt; Di Silva &lt; diSilva &lt; U.S.A. &lt; USA
         </member>
         <member>
          S=3, A=S di Silva = diSilva &lt; Di Silva &lt; U.S.A. = USA
         </member>
         <member>
          S=4, A=S di Silva &lt; diSilva &lt; Di Silva &lt; U.S.A. &lt; USA
         </member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.case-first">
    <term>
     <constant>Collator::CASE_FIRST</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      El atributo Case_First se utiliza para controlar si las mayúsculas
      deben ser consideradas antes que las minúsculas, y viceversa, en
      ausencia de otros discriminantes. Los valores posibles son
      <emphasis>Uppercase_First</emphasis> (U) y <emphasis>Lowercase_First</emphasis>
      (L), más los valores estándar <emphasis>Default</emphasis> y
      <emphasis>Off</emphasis>. No hay casi diferencia entre Off y Lowercase_First
      en términos de resultados, por lo que los usuarios típicos no utilizarán
      Lowercase_First: únicamente Off o Uppercase_First. (Aquellos interesados
      en las diferencias entre X y L deberán consultar la sección
      <literal>Collation Customization</literal>). Especificar L o U no cambiará
      el rendimiento de comparación, pero afectará el tamaño de la clave de ordenación.
     </para>
     <para>
      Los valores posibles son:
      <simplelist>
       <member><constant>Collator::OFF</constant>(por omisión)</member>
       <member><constant>Collator::LOWER_FIRST</constant></member>
       <member><constant>Collator::UPPER_FIRST</constant></member>
       <member><constant>Collator:DEFAULT</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Reglas CASE_FIRST</title>
       <para>
        <simplelist>
         <member>C=X or C=L "china" &lt; "China" &lt; "denmark" &lt; "Denmark"</member>
         <member>C=U "China" &lt; "china" &lt; "Denmark" &lt; "denmark"</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.case-level">
    <term>
     <constant>Collator::CASE_LEVEL</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      El atributo Case_Level se utiliza para ignorar los acentos, pero no la casilla.
      En estas situaciones, póngase el atributo Strength a <emphasis>Primary</emphasis>,
      y Case_Level a <emphasis>On</emphasis>. En la mayoría de locales, este
      atributo está a Off por omisión. Existe un pequeño coste de rendimiento
      para la comparación de cadenas, e impacto en el tamaño de los índices de ordenación
      si este atributo está a <emphasis>On</emphasis>.
     </para>
     <para>
      Los valores posibles son:
      <simplelist>
       <member><constant>Collator::OFF</constant>(por omisión)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Reglas CASE_LEVEL</title>
       <para>
        <simplelist>
         <member>S=1, E=X role = Role = rôle</member>
         <member>S=1, E=O role = rôle &lt; Role</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.normalization-mode">
    <term>
     <constant>Collator::NORMALIZATION_MODE</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      El atributo Normalization determina si se debe normalizar totalmente
      el texto o no, para la comparación. Aunque este atributo esté a Off (que
      es el caso por omisión para muchas locales), los textos comparados
      para un uso ordinario serán correctos (para detalles, véase UTN #5).
      Solo habrá un problema si las marcas de acento no son canónicas.
      Si este atributo está a <emphasis>On</emphasis>, entonces los mejores resultados
      están garantizados para todos los textos. Existe un coste de comparación
      medio si este atributo vale <emphasis>On</emphasis>, dependiendo de la frecuencia
      de las secuencias que requieren normalización. No hay efecto significativo
      en el tamaño de los índices de ordenación. Si el texto está en las formas
      de normalización NFD o NFKD, no es necesario activar la opción de Normalization.
     </para>
     <para>
      Los valores posibles son:
      <simplelist>
       <member><constant>Collator::OFF</constant>(por omisión)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.strength">
    <term>
     <constant>Collator::STRENGTH</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      El servicio de collation ICU soporta muchos niveles de comparación
      (llamados "Levels", pero también conocidos como "Strengths").
      Con estas categorías, ICU puede ordenar strings con precisión,
      según las convenciones locales. Sin embargo, permitiendo el uso
      selectivo de los niveles, la búsqueda de un string en un texto
      puede ser realizada, a partir de diferentes condiciones. Para más
      información, véase el capítulo <function>collator_set_strength</function>.
     </para>
     <para>
      Los valores posibles son:
      <simplelist>
       <member><constant>Collator::PRIMARY</constant></member>
       <member><constant>Collator::SECONDARY</constant></member>
       <member><constant>Collator::TERTIARY</constant>(por omisión)</member>
       <member><constant>Collator::QUATERNARY</constant></member>
       <member><constant>Collator::IDENTICAL</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.hiragana-quaternary-mode">
    <term>
     <constant>Collator::HIRAGANA_QUATERNARY_MODE</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      La compatibilidad con JIS x 4061 requiere la introducción de un nivel
      adicional para distinguir caracteres Hiragana y Katakana.
      Si la compatibilidad con el estándar es necesaria, entonces este atributo
      debe ser utilizado a <emphasis>On</emphasis>, y la Strength debe tomar
      el valor de Quaternary. Esto afectará el tamaño de los índices de ordenación,
      y el rendimiento de comparaciones de strings.
     </para>
     <para>
      Los valores posibles son:
      <simplelist>
       <member><constant>Collator::OFF</constant>(por omisión)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.numeric-collation">
    <term>
     <constant>Collator::NUMERIC_COLLATION</constant>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Cuando está activado, este atributo genera una clave de collation para
      los valores numéricos de sub-cadenas. Es un método para que '100' sea
      ordenado después de '2'.
     </para>
     <para>
      Los valores posibles son:
      <simplelist>
       <member><constant>Collator::OFF</constant>(por omisión)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.default-value">
    <term>
     <constant>Collator::DEFAULT_VALUE</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.primary">
    <term>
     <constant>Collator::PRIMARY</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.secondary">
    <term>
     <constant>Collator::SECONDARY</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.tertiary">
    <term>
     <constant>Collator::TERTIARY</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.default-strength">
    <term>
     <constant>Collator::DEFAULT_STRENGTH</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.quaternary">
    <term>
     <constant>Collator::QUATERNARY</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.identical">
    <term>
     <constant>Collator::IDENTICAL</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.off">
    <term>
     <constant>Collator::OFF</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.on">
    <term>
     <constant>Collator::ON</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.shifted">
    <term>
     <constant>Collator::SHIFTED</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.non-ignorable">
    <term>
     <constant>Collator::NON_IGNORABLE</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.lower-first">
    <term>
     <constant>Collator::LOWER_FIRST</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.upper-first">
    <term>
     <constant>Collator::UPPER_FIRST</constant>
     <type>int</type>
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.sort-regular">
    <term>
     <constant>Collator::SORT_REGULAR</constant>
     <type>int</type>
    </term>
    <listitem>
     <para/>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.sort-string">
    <term>
     <constant>Collator::SORT_STRING</constant>
     <type>int</type>
    </term>
    <listitem>
     <para/>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.sort-numeric">
    <term>
     <constant>Collator::SORT_NUMERIC</constant>
     <type>int</type>
    </term>
    <listitem>
     <para/>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
