<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 89562618e93396020a5120a8d8c466ae6457cc77 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<section xml:id="intl.numberformatter-constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 
 <section xml:id="intl.numberformatter-constants.unumberformatstyle">
  <title>Tipos de Formato</title>
  <para>
   Estos estilos son utilizados por la función <function>numfmt_create</function>
   para definir el tipo del formateador.
   <variablelist>
    <varlistentry xml:id="numberformatter.constants.pattern-decimal">
     <term>
      <constant>NumberFormatter::PATTERN_DECIMAL</constant>
     </term>
     <listitem>
      <simpara>Formato decimal definido por un patrón</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.decimal">
     <term>
      <constant>NumberFormatter::DECIMAL</constant>
     </term>
     <listitem>
      <simpara>Formato decimal</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.currency">
     <term>
      <constant>NumberFormatter::CURRENCY</constant>
     </term>
     <listitem>
      <simpara>Formato de moneda</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.percent">
     <term>
      <constant>NumberFormatter::PERCENT</constant>
     </term>
     <listitem>
      <simpara>Formato de porcentaje</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.scientific">
     <term>
      <constant>NumberFormatter::SCIENTIFIC</constant>
     </term>
     <listitem>
      <simpara>Formato científico</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.spellout">
     <term>
      <constant>NumberFormatter::SPELLOUT</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Formato basado en reglas de números escritos con palabras</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.ordinal">
     <term>
      <constant>NumberFormatter::ORDINAL</constant>
     </term>
     <listitem>
      <simpara>Formato basado en reglas de números ordinales</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.duration">
     <term>
      <constant>NumberFormatter::DURATION</constant>
     </term>
     <listitem>
      <simpara>Formato basado en reglas de duración</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.pattern-rulebased">
     <term>
      <constant>NumberFormatter::PATTERN_RULEBASED</constant>
     </term>
     <listitem>
      <simpara>Formato basado en reglas definido por un patrón</simpara>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="numberformatter.constants.currency-accounting">
     <term>
      <constant>NumberFormatter::CURRENCY_ACCOUNTING</constant>
     </term>
     <listitem>
      <simpara>
      Formato de moneda para contabilidad, por ejemplo, <literal>($3.00)</literal> para cantidades negativas
      en lugar de <literal>-$3.00</literal>. Disponible desde PHP 7.4.1 e ICU 53.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.default-style">
     <term>
      <constant>NumberFormatter::DEFAULT_STYLE</constant>
     </term>
     <listitem>
      <simpara>Formato predeterminado para la configuración regional</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.ignore">
     <term>
      <constant>NumberFormatter::IGNORE</constant>
     </term>
     <listitem>
      <simpara>Alias de PATTERN_DECIMAL</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
   
  </para>
 </section>
 
 <section xml:id="intl.numberformatter-constants.types">
  <title>Especificadores de formato de números</title>
  <para>
   Estas constantes definen cómo se procesan o formatean los números. Deberían
   usarse como argumentos de <function>numfmt_format</function>
   y <function>numfmt_parse</function>.
   <variablelist>
    <varlistentry xml:id="numberformatter.constants.type-default">
     <term>
      <constant>NumberFormatter::TYPE_DEFAULT</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Deriva el tipo de número del tipo de la variable</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.type-int32">
     <term>
      <constant>NumberFormatter::TYPE_INT32</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Formatear/procesar como un valor integer de 32 bits</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.type-int64">
     <term>
      <constant>NumberFormatter::TYPE_INT64</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Formatear/procesar como un valor integer de 64 bits</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.type-double">
     <term>
      <constant>NumberFormatter::TYPE_DOUBLE</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Formatear/procesar como un valor de coma flotante</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.type-currency">
     <term>
      <constant>NumberFormatter::TYPE_CURRENCY</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>FFormatear/procesar como un valor de moneda</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="intl.numberformatter-constants.unumberformatattribute">
  <title>Atributos de formato de números</title>
  <para>
   Atributos de formato numérico usados por
   <function>numfmt_get_attribute</function>
   y
   <function>numfmt_set_attribute</function>.
   <variablelist>
    <varlistentry xml:id="numberformatter.constants.parse-int-only">
     <term>
      <constant>NumberFormatter::PARSE_INT_ONLY</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Procesar sólo los enteros.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.grouping-used">
     <term>
      <constant>NumberFormatter::GROUPING_USED</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Usar un separador de agrupación.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.decimal-always-shown">
     <term>
      <constant>NumberFormatter::DECIMAL_ALWAYS_SHOWN</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Mostrar siempre la coma (punto) decimal.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.max-integer-digits">
     <term>
      <constant>NumberFormatter::MAX_INTEGER_DIGITS</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Número máximo de dígitos enteros.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.min-integer-digits">
     <term>
      <constant>NumberFormatter::MIN_INTEGER_DIGITS</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Número mínimo de dígitos enteros.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.integer-digits">
     <term>
      <constant>NumberFormatter::INTEGER_DIGITS</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Dígitos enteros.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.max-fraction-digits">
     <term>
      <constant>NumberFormatter::MAX_FRACTION_DIGITS</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Número máximo de dígitos fraccionarios.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.min-fraction-digits">
     <term>
      <constant>NumberFormatter::MIN_FRACTION_DIGITS</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Número mínimo de dígitos fraccionarios.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.fraction-digits">
     <term>
      <constant>NumberFormatter::FRACTION_DIGITS</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Dígitos fraccionarios.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.multiplier">
     <term>
      <constant>NumberFormatter::MULTIPLIER</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Multiplicador.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.grouping-size">
     <term>
      <constant>NumberFormatter::GROUPING_SIZE</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Tamaño de la agrupación.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.rounding-mode">
     <term>
      <constant>NumberFormatter::ROUNDING_MODE</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Modo de redondeo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.rounding-increment">
     <term>
      <constant>NumberFormatter::ROUNDING_INCREMENT</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Incremento del redondeo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.format-width">
     <term>
      <constant>NumberFormatter::FORMAT_WIDTH</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El ancho al que se ajusta la salida de format().</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.padding-position">
     <term>
      <constant>NumberFormatter::PADDING_POSITION</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>
       La posición en la que el relleno tendrá lugar. Véase las constantes de
       posición de relleno para los posibles valores de los argumentos.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.secondary-grouping-size">
     <term>
      <constant>NumberFormatter::SECONDARY_GROUPING_SIZE</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Tamaño de agrupación secundario.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.significant-digits-used">
     <term>
      <constant>NumberFormatter::SIGNIFICANT_DIGITS_USED</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Utilizar dígitos significativos.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.min-significant-digits">
     <term>
      <constant>NumberFormatter::MIN_SIGNIFICANT_DIGITS</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Número mínimo de dígitos significativos.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.max-significant-digits">
     <term>
      <constant>NumberFormatter::MAX_SIGNIFICANT_DIGITS</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Número máximo de dígitos significativos.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.lenient-parse">
     <term>
      <constant>NumberFormatter::LENIENT_PARSE</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Modo de proceso poco riguroso usado por los formatos basados en reglas.</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="intl.numberformatter-constants.unumberformattextattribute">
  <title>Atributos de texto para el formato de números</title>
  <para>
   Atributos de texto de formato numérico utilizados por
   <function>numfmt_get_text_attribute</function> y
   <function>numfmt_set_text_attribute</function>.
   <variablelist>
    <varlistentry xml:id="numberformatter.constants.positive-prefix">
     <term>
      <constant>NumberFormatter::POSITIVE_PREFIX</constant>
     </term>
     <listitem>
      <simpara>Prefijo positivo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.positive-suffix">
     <term>
      <constant>NumberFormatter::POSITIVE_SUFFIX</constant>
     </term>
     <listitem>
      <simpara>Sufijo positivo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.negative-prefix">
     <term>
      <constant>NumberFormatter::NEGATIVE_PREFIX</constant>
     </term>
     <listitem>
      <simpara>Prefijo negativo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.negative-suffix">
     <term>
      <constant>NumberFormatter::NEGATIVE_SUFFIX</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Sufijo negativo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.padding-character">
     <term>
      <constant>NumberFormatter::PADDING_CHARACTER</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El carácter usado para rellenar el ancho del formato.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.currency-code">
     <term>
      <constant>NumberFormatter::CURRENCY_CODE</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El código ISO de la moneda.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.default-ruleset">
     <term>
      <constant>NumberFormatter::DEFAULT_RULESET</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>
       El conjunto de reglas predeterminadas. Sólo está disponible con formateadores
       basados en reglas.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.public-rulesets">
     <term>
      <constant>NumberFormatter::PUBLIC_RULESETS</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>
       Los conjuntos de reglas públicas. Sólo está disponible con formateadores
       basados en reglas. Este atributo es de sólo lectura. Los conjuntos de reglas públicas son
       devueltos como una cadena simple, con cada conjunto de reglas deliminado por ';'
       (semicolon).
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="intl.numberformatter-constants.unumberformatsymbol">
  <title>Especificadores de formato de símbolos</title>
  <para>
   Símbolos de formato numérico utilizados por <function>numfmt_get_symbol</function>
   y <function>numfmt_set_symbol</function>.
   <variablelist>
    <varlistentry xml:id="numberformatter.constants.decimal-separator-symbol">
     <term>
      <constant>NumberFormatter::DECIMAL_SEPARATOR_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El separador decimal.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.grouping-separator-symbol">
     <term>
      <constant>NumberFormatter::GROUPING_SEPARATOR_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El separador de agrupación.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.pattern-separator-symbol">
     <term>
      <constant>NumberFormatter::PATTERN_SEPARATOR_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El separador de patrones.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.percent-symbol">
     <term>
      <constant>NumberFormatter::PERCENT_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El signo de porcentaje.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.zero-digit-symbol">
     <term>
      <constant>NumberFormatter::ZERO_DIGIT_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Cero.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.digit-symbol">
     <term>
      <constant>NumberFormatter::DIGIT_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Carácter que representa un dígito en el patrón.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.minus-sign-symbol">
     <term>
      <constant>NumberFormatter::MINUS_SIGN_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El símbolo menos.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.plus-sign-symbol">
     <term>
      <constant>NumberFormatter::PLUS_SIGN_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El símbolo más.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.currency-symbol">
     <term>
      <constant>NumberFormatter::CURRENCY_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El símbolo de moneda.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.intl-currency-symbol">
     <term>
      <constant>NumberFormatter::INTL_CURRENCY_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El símbolo internacional de moneda.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.monetary-separator-symbol">
     <term>
      <constant>NumberFormatter::MONETARY_SEPARATOR_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El separador monetario.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.exponential-symbol">
     <term>
      <constant>NumberFormatter::EXPONENTIAL_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El símbolo exponencial.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.permill-symbol">
     <term>
      <constant>NumberFormatter::PERMILL_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El símbolo por millón.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.pad-escape-symbol">
     <term>
      <constant>NumberFormatter::PAD_ESCAPE_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El carácter de relleno de escape.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.infinity-symbol">
     <term>
      <constant>NumberFormatter::INFINITY_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Símbolo de infinito.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.nan-symbol">
     <term>
      <constant>NumberFormatter::NAN_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Símbolo de no-es-un-número (NaN).</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.significant-digit-symbol">
     <term>
      <constant>NumberFormatter::SIGNIFICANT_DIGIT_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Símbolo de dígito significativo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.monetary-grouping-separator-symbol">
     <term>
      <constant>NumberFormatter::MONETARY_GROUPING_SEPARATOR_SYMBOL</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>El separador de agrupación monetaria.</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="intl.numberformatter-constants.unumberformatroundingmode">
  <title>Modos de Redondeo</title>
  <para>
   Los valores del modo de redondeo utilizados por <function>numfmt_get_attribute</function>
   y <function>numfmt_set_attribute</function> con el
   atributo <constant>NumberFormatter::ROUNDING_MODE</constant>.
   <variablelist>
    <varlistentry xml:id="numberformatter.constants.round-ceiling">
     <term>
      <constant>NumberFormatter::ROUND_CEILING</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Modo de redondeo para redondear hacia el infinito positivo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.round-down">
     <term>
      <constant>NumberFormatter::ROUND_DOWN</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Modo de redondeo para redondear hacia cero.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.round-floor">
     <term>
      <constant>NumberFormatter::ROUND_FLOOR</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Modo de redondeo para redondear hacia el infinito negativo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.round-halfdown">
     <term>
      <constant>NumberFormatter::ROUND_HALFDOWN</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>
       Modo de redondeo para redondear hacia el "vecino más cercano" a menos que ambos vecinos
       sean equidistantes, en cuyo caso se redondea hacia abajo.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.round-halfeven">
     <term>
      <constant>NumberFormatter::ROUND_HALFEVEN</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>
       Modo de redondeo para redondear hacia el "vecino más cercano" a menos que ambos
       vecinos sean equidistantes, en cuyo caso se redondea hacia el vecino
       par.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.round-halfup">
     <term>
      <constant>NumberFormatter::ROUND_HALFUP</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>
       Modo de redondeo para redondear hacia el "vecino más cercano" a menos que ambos vecinos
       sean equidistantes, en cuyo caso se redondea hacia arriba.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.round-up">
     <term>
      <constant>NumberFormatter::ROUND_UP</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Modo de redondeo para redondear lejos del cero.</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="intl.numberformatter-constants.unumberformatpadposition">
  <title>Especificadores de Relleno</title>
  <para>
   Valores de posición de relleno utilizados por <function>numfmt_get_attribute</function>
   y <function>numfmt_set_attribute</function> con el
   atributo <constant>NumberFormatter::PADDING_POSITION</constant>.
   <variablelist>
    <varlistentry xml:id="numberformatter.constants.pad-after-prefix">
     <term>
      <constant>NumberFormatter::PAD_AFTER_PREFIX</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Los caracteres de relleno se insertan después del prefijo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.pad-after-suffix">
     <term>
      <constant>NumberFormatter::PAD_AFTER_SUFFIX</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Los caracteres de relleno se insertan después del sufijo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.pad-before-prefix">
     <term>
      <constant>NumberFormatter::PAD_BEFORE_PREFIX</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Los caracteres de relleno se insertan antes del prefijo.</simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="numberformatter.constants.pad-before-suffix">
     <term>
      <constant>NumberFormatter::PAD_BEFORE_SUFFIX</constant>
      (<type>integer</type>)
     </term>
     <listitem>
      <simpara>Los caracteres de relleno se insertan antes del sufijo.</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

