<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1976eae0d815797af97a1e16c5cd90ffc2868395 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="intlcalendar.getskippedwalltimeoption" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlCalendar::getSkippedWallTimeOption</refname>
  <refpurpose>Obtiene el comportamiento para la gestión de las horas murales omitidas</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
  <methodsynopsis role="IntlCalendar">
   <modifier>public</modifier> <type>int</type><methodname>IntlCalendar::getSkippedWallTimeOption</methodname>
   <void/>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis>
   <type>int</type><methodname>intlcal_get_skipped_wall_time_option</methodname>
   <methodparam><type>IntlCalendar</type><parameter>calendar</parameter></methodparam>
  </methodsynopsis>
  <para>
   Devuelve la estrategia actual para la gestión de las horas murales omitidas
   cuando el reloj se adelanta durante las transiciones de inicio de hora de verano.
   El valor por omisión es <constant>IntlCalendar::WALLTIME_LAST</constant>.
  </para>
  <para>
   El calendario debe ser <link linkend="intlcalendar.setlenient">tolerante</link> para que esta opción tenga
   efecto, de lo contrario intentar definir una hora inexistente provocará una
   error.
  </para>
  <para>
   Esta función requiere ICU 4.9 o más reciente.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>calendar</parameter></term>
    <listitem>
     &intl.parameter.intl-calendar;
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Una de las constantes <constant>IntlCalendar::WALLTIME_FIRST</constant>,
   <constant>IntlCalendar::WALLTIME_LAST</constant> o
   <constant>IntlCalendar::WALLTIME_NEXT_VALID</constant>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
   <title><function>IntlCalendar::getSkippedWallTimeOption</function></title>
    <programlisting role="php">
<![CDATA[
<?php
ini_set('date.timezone', 'Europe/Lisbon');
ini_set('intl.default_locale', 'en_US');
ini_set('intl.error_level', E_WARNING);

//El 31 de Marzo a las 0100, el reloj avanzará una hora de GMT+00 a GMT+01
$cal = new IntlGregorianCalendar(2013, 2 /* March */, 31, 1, 30);

var_dump(
    $cal->isLenient(),               // true
    $cal->getSkippedWalltimeOption() // 0 WALLTIME_LAST
);

$formatter = IntlDateFormatter::create(
    NULL,
    IntlDateFormatter::FULL,
    IntlDateFormatter::FULL,
    'UTC'
);
var_dump($formatter->format($cal->getTime() / 1000));

$cal->setSkippedWallTimeOption(IntlCalendar::WALLTIME_FIRST);
var_dump($cal->getSkippedWalltimeOption()); // 1 WALLTIME_FIRST
$cal->set(IntlCalendar::FIELD_HOUR_OF_DAY, 1);

var_dump($formatter->format($cal->getTime() / 1000));

$cal->setSkippedWallTimeOption(IntlCalendar::WALLTIME_NEXT_VALID);
var_dump($cal->getSkippedWalltimeOption()); // 2 WALLTIME_NEXT_VALID
$cal->set(IntlCalendar::FIELD_HOUR_OF_DAY, 1);

var_dump($formatter->format($cal->getTime() / 1000));
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
bool(true)
int(0)
string(40) "Sunday, March 31, 2013 at 1:30:00 AM GMT"
int(1)
string(41) "Sunday, March 31, 2013 at 12:30:00 AM GMT"
int(2)
string(40) "Sunday, March 31, 2013 at 1:00:00 AM GMT"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>IntlCalendar::getRepeatedWallTimeOption</methodname></member>
    <member><methodname>IntlCalendar::setSkippedWallTimeOption</methodname></member>
    <member><methodname>IntlCalendar::setRepeatedWallTimeOption</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
