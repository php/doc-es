<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: c39225b6dd23f358824f44f5b8c733517b11830b Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->

 <reference xml:id="ref.pdo-odbc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <?phpdoc extension-membership="bundledexternal" ?>
  <title>Funciones del controlador PDO ODBC y DB2 (PDO_ODBC)</title>
  <titleabbrev>Controladores PDO ODBC y DB2</titleabbrev>
  <partintro>

   <section xml:id="ref.pdo-odbc.intro">
   &reftitle.intro;
    <para>
     PDO_ODBC es un controlador que implementa la <link
     linkend="intro.pdo">interfaz de PHP Data Objects (PDO)</link> para
     permitir el acceso de PHP a las bases de datos mediante los controladores de ODBC
     o mediante la biblioteca de interfaz IBM DB2 Call Level (DB2 CLI). PDO_ODBC
     actualmente soporta tres "sabores" diferentes de los controladores de bases de
     datos:
     <variablelist>
      <varlistentry>
       <term>ibm-db2</term>
       <listitem>
        <para>
         Permite el acceso a <literal>IBM DB2 Universal Database</literal>,
         Cloudscape y Apache Derby Server utilizando el cliente gratuito DB2 express-C.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>unixODBC</term>
       <listitem>
        <para>
         Permite el acceso a los servidores de bases de datos mediante el controlador
         de gestión unixODBC y las bases de datos poseídas por los controladores
         ODBC.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>generic</term>
       <listitem>
        <para>
         Ofrece una opción de compilación para los controladores de gestión ODBC que
         no son explícitamente soportados por PDO_ODBC.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     En Windows, <filename>php_pdo_odbc.dll</filename> debe ser activado como extensión en &php.ini;. Está vinculado con el Windows ODBC Driver Manager, por lo que PHP puede
     conectarse a cualquier base de datos catalogada como un System DSN.
    </para>
   </section>

   <!-- Information found in configure.xml -->
   &reference.pdo-odbc.configure;
   <!-- Information found in constants.xml -->
   &reference.pdo-odbc.constants;
  <!-- Information found in ini.xml -->
   &reference.pdo-odbc.ini;
  </partintro>

  <refentry xml:id="ref.pdo-odbc.connection">
   <refnamediv>
    <refname>PDO_ODBC DSN</refname>
    <refpurpose>Conexión a bases de datos ODBC o DB2</refpurpose>
   </refnamediv>

   <refsect1 role="description">
    &reftitle.description;
    <para>
     El Data Source Name (DSN) de PDO_ODBC se compone de los siguientes elementos:
     <variablelist>
      <varlistentry>
       <term>Prefijo DSN</term>
       <listitem>
        <para>
         El prefijo DSN es <userinput>odbc:</userinput>. Si se conecta a una base de datos catalogada en el controlador de ODBC
         Manager o en el catálogo de DB2, se puede añadir el nombre del catálogo de la base de datos al DSN.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>DSN</term>
       <listitem>
        <para>
         El nombre de la base de datos catalogada en el controlador ODBC
         Manager o el catálogo DB2. Alternativamente, se puede proporcionar una
         cadena de conexión completa para ODBC para conectarse a una base de
         datos como se describe en
         <link xlink:href="&url.connectionstrings;">&url.connectionstrings;</link>.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>UID</literal></term>
       <listitem>
        <para>
         El nombre de usuario para la conexión. Si se especifica el usuario en el DSN, PDO ignorará el valor del usuario en el argumento en el constructor PDO.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>PWD</literal></term>
       <listitem>
        <para>
         La contraseña del usuario para la conexión. Si se especifica la contraseña en el DSN, PDO ignorará el valor de la contraseña en el argumento en el constructor PDO.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </refsect1>
   <refsect1 role="changelog">
    &reftitle.changelog;
    <informaltable>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>&Version;</entry>
        <entry>&Description;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>8.4.0</entry>
        <entry>
         Al pasar una <type>string</type> vacía al argumento de contraseña en el constructor PDO, <literal>pwd</literal>
         no se incluía en la cadena de conexión creada hasta ahora, pero el comportamiento ha sido modificado para incluirla
         como una cadena vacía. Pasar &null; para el argumento de contraseña en el constructor PDO produce el mismo
         comportamiento que antes.
        </entry>
       </row>
       <row>
        <entry>8.4.0</entry>
        <entry>
         Cambio de comportamiento para ignorar por separado el argumento de nombre de usuario y el argumento de contraseña en el constructor PDO
         cuando el DSN contiene <literal>uid</literal> o <literal>pwd</literal>.
         Anteriormente, si cualquiera de <literal>uid</literal> o <literal>pwd</literal> estaba incluido en el DSN,
         los argumentos de nombre de usuario y contraseña en el constructor PDO eran ignorados.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </refsect1>
   <refsect1 role="examples">
    &reftitle.examples;
    <para>
     <example>
      <title>Ejemplo con PDO_ODBC DSN (controlador ODBC Manager)</title>
      <para>
       El siguiente ejemplo muestra PDO_ODBC DSN para conectarse a una base
       de datos ODBC catalogada como testdb en el controlador ODBC
       Manager:
      </para>
      <programlisting><![CDATA[
odbc:testdb
]]>
       </programlisting>
     </example>
     <example>
      <title>Ejemplo con PDO_ODBC DSN (conexión no catalogada IBM DB2)</title>
      <para>
       El siguiente ejemplo muestra PDO_ODBC DSN para conectarse a una base
       de datos IBM DB2 llamada <userinput>SAMPLE</userinput> utilizando la
       sintaxis completa de ODBC DSN:
      </para>
      <programlisting><![CDATA[
odbc:DRIVER={IBM DB2 ODBC DRIVER};HOSTNAME=localhost;PORT=50000;DATABASE=SAMPLE;PROTOCOL=TCPIP;UID=db2inst1;PWD=ibmdb2;
]]>
      </programlisting>
     </example>
     <example>
      <title>Ejemplo con PDO_ODBC DSN (conexión no catalogada Microsoft Access)</title>
      <para>
       El siguiente ejemplo muestra PDO_ODBC DSN para conectarse a una base
       de datos Microsoft Access registrada en
       <userinput>C:\db.mdb</userinput> utilizando la sintaxis completa
       de ODBC DSN:
      </para>
      <programlisting><![CDATA[
odbc:Driver={Microsoft Access Driver (*.mdb)};Dbq=C:\\db.mdb;Uid=Admin
]]>
      </programlisting>
     </example>

    </para>
   </refsect1>
  </refentry>

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
