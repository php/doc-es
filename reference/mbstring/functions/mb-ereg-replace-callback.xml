<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 14c33cf174c921e21b82a0ed262268c087137bdb Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.mb-ereg-replace-callback" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mb_ereg_replace_callback</refname>
  <refpurpose>Buscar y reemplazar mediante expresión regular con soporte multi byte utilizando una función de devolución de llamada
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type><type>null</type></type><methodname>mb_ereg_replace_callback</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>options</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Busca los <parameter>string</parameter> que coinciden con el argumento
   <parameter>pattern</parameter>, luego reemplaza los textos que coinciden
   con el retorno de la función <parameter>callback</parameter>.
  </para>
  <para>
    El comportamiento de esta función es casi idéntico a <function>mb_ereg_replace</function>,
    a excepción de que el argumento
    <parameter>replacement</parameter> debe especificar una función de devolución de llamada
    <parameter>callback</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       La expresión regular.
      </para>
      <para>
       Los caracteres multi byte pueden ser utilizados en el <parameter>pattern</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
        Un callback que será llamado y se le pasará un array de elementos coincidentes
        en la cadena de caracteres <parameter>string</parameter>. El callback debe retornar
        la cadena reemplazada.
      </para>
      <para>
        Con frecuencia será necesario utilizar la función <parameter>callback</parameter>
        para <function>mb_ereg_replace_callback</function> solo una vez.
        En este caso se pueden utilizar las
        <link linkend="functions.anonymous">funciones anónimas</link> para
        declarar una función de devolución de llamada al momento de llamar a la función
        <function>mb_ereg_replace_callback</function>. Al hacerlo de esta manera
        se tiene toda la información necesaria para la llamada de la función
        en un solo lugar, lo que permite evitar saturar el espacio de nombres
        de las funciones con un callback de función que no se utiliza en otro lugar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       El <type>string</type> que debe ser verificado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       La opción de búsqueda. Para más explicaciones, consulte <function>mb_regex_set_options</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna un <type>string</type> en caso de éxito, o &false; en caso de error.
   Si <parameter>string</parameter> no es válido para el codificación actual,
   &null; es retornado.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>options</parameter> ahora es nullable.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        Esta función verifica si <parameter>string</parameter> es válido para
        la codificación actual.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>mb_ereg_replace_callback</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// este texto fue utilizado en 2002
// se desea actualizarlo para 2003
$text = "April fools day is 04/01/2002\n";
$text.= "Last christmas was 12/24/2001\n";
// la función de devolución de llamada
function next_year($matches)
{
  // como de costumbre: $matches[0] es la coincidencia completa
  // $matches[1] la coincidencia para el primer subpatrón
  // encerrado en '(...)' y así sucesivamente
  return $matches[1].($matches[2]+1);
}
echo mb_ereg_replace_callback(
            "(\d{2}/\d{2}/)(\d{4})",
            "next_year",
            $text);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
April fools day is 04/01/2003
Last christmas was 12/24/2002
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>mb_ereg_replace_callback</function> utilizando funciones anónimas</title>
    <programlisting role="php">
<![CDATA[
<?php
// este texto fue utilizado en 2002
// se desea actualizarlo para 2003
$text = "April fools day is 04/01/2002\n";
$text.= "Last christmas was 12/24/2001\n";

echo mb_ereg_replace_callback(
            "(\d{2}/\d{2}/)(\d{4})",
            function ($matches) {
               return $matches[1].($matches[2]+1);
            },
            $text);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &note.mbstring.encoding.internal;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mb_regex_encoding</function></member>
    <member><function>mb_ereg_replace</function></member>
    <member><link linkend="functions.anonymous">Funciones anónimas</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
