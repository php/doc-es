<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d4d5216e7a965ca194f6b1c9dee84cecab2674e5 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<section xml:id="memcached.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>&ConfigureOptions; Memcached</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.memcached.sess-locking">memcached.sess_locking</link></entry>
      <entry>On</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-consistent-hash">memcached.sess_consistent_hash</link></entry>
      <entry>On</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 2.1.0. El valor por omisión es <literal>Activo</literal> a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-binary">memcached.sess_binary</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 2.0.0. Reemplazado por <literal>memcached.sess_binary_protocol</literal> a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait">memcached.sess_lock_wait</link></entry>
      <entry>150000</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 0.1.0. Eliminado a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-prefix">memcached.sess_prefix</link></entry>
      <entry>memc.sess.key.</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-number-of-replicas">memcached.sess_number_of_replicas</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 2.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-randomize-replica-read">memcached.sess_randomize_replica_read</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 2.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-remove-failed">memcached.sess_remove_failed</link></entry>
      <entry>On</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 2.1.0. Reemplazado por <literal>memcached.sess_remove_failed_servers</literal> a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-type">memcached.compression_type</link></entry>
      <entry>fastlz</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-factor">memcached.compression_factor</link></entry>
      <entry>1.3</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-threshold">memcached.compression_threshold</link></entry>
      <entry>2000</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.serializer">memcached.serializer</link></entry>
      <entry>igbinary</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.use-sasl">memcached.use_sasl</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 2.2.0. Eliminado a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-binary-protocol">memcached.default_binary_protocol</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-connect-timeout">memcached.default_connect_timeout</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-consistent-hash">memcached.default_consistent_hash</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-binary-protocol">memcached.sess_binary_protocol</link></entry>
      <entry>On</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.0.0. Reemplaza <literal>memcached.sess_binary</literal>.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-connect-timeout">memcached.sess_connect_timeout</link></entry>
       <entry>1000</entry>
       <entry><constant>INI_ALL</constant></entry>
       <entry>Disponible a partir de memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-consistent-hash-type">memcached.sess_consistent_hash_type</link></entry>
      <entry>ketama</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-expire">memcached.sess_lock_expire</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-retries">memcached.sess_lock_retries</link></entry>
      <entry>5</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait-max">memcached.sess_lock_wait_max</link></entry>
      <entry>150</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.0.0. Por omisión a <literal>150</literal> a partir de memcached 3.1.0 (antes <literal>2000</literal>).</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait-min">memcached.sess_lock_wait_min</link></entry>
      <entry>150</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.0.0. Por omisión a <literal>150</literal> a partir de memcached 3.1.0 (antes <literal>1000</literal>).</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-persistent">memcached.sess_persistent</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-remove-failed-servers">memcached.sess_remove_failed_servers</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.0.0. Reemplaza <literal>memcached.sess_remove_failed</literal>.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-server-failure-limit">memcached.sess_server_failure_limit</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-sasl-password">memcached.sess_sasl_password</link></entry>
      <entry>null</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-sasl-username">memcached.sess_sasl_username</link></entry>
      <entry>null</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Disponible a partir de memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.store-retry-count">memcached.store_retry_count</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>
       Disponible a partir de memcached 2.2.0.
       Por omisión a <literal>0</literal> a partir de memcached 3.2.0
       (antes <literal>2</literal>).
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.memcached.sess-locking">
     <term>
      <parameter>memcached.sess_locking</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Utiliza los cerrojos de sesión. Los valores válidos son <literal>On</literal> y <literal>Off</literal>, el valor por omisión es <literal>On</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-consistent-hash">
     <term>
      <parameter>memcached.sess_consistent_hash</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Si se define como <literal>On</literal>, utiliza el hachado consistente (libketama) para la gestión de sesiones.
       Cuando se utiliza el hachado consistente, se pueden añadir o eliminar nodos de caché sin perturbar las claves existentes.
       El valor por omisión es <literal>On</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-binary">
     <term>
      <parameter>memcached.sess_binary</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Utiliza el modo binario para las sesiones memcached. Las réplicas de libmemcached solo funcionan
       si el modo binario está activado. El valor por omisión es <literal>Off</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-wait">
     <term>
      <parameter>memcached.sess_lock_wait</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       La duración de espera del cerrojo de sesión en microsegundos. Tenga cuidado al definir este valor.
       Los valores válidos son enteros, donde <literal>0</literal> se interpreta como el valor por omisión.
       Los valores negativos reducen el bloqueo a un bloqueo de prueba.
       El valor por omisión es <literal>150000</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-prefix">
     <term>
      <parameter>memcached.sess_prefix</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       El prefijo de clave de sesión Memcached. Los valores válidos son strings de menos de 219 bytes.
       El valor por omisión es <literal>memc.sess.key</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-number-of-replicas">
     <term>
      <parameter>memcached.sess_number_of_replicas</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Escribe los datos en un cierto número de servidores Memcached adicionales. Esto es lo que libmemcached llama "pobre hombre HA".
       Si este valor es positivo y <literal>sess_remove_failed_servers</literal> está activado,
       cuando un servidor Memcached falle, la sesión continuará estando disponible a partir de una réplica.
       Sin embargo, si el servidor Memcached en fallo vuelve a estar disponible, la sesión se leerá desde allí,
       lo que podría tener datos obsoletos o ninguna información en absoluto.
       El valor por omisión es <literal>0</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-randomize-replica-read">
     <term>
      <parameter>memcached.sess_randomize_replica_read</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       La sesión Memcached lee la replicación aleatoria.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-remove-failed">
     <term>
      <parameter>memcached.sess_remove_failed</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Permite que el servidor Memcached en fallo sea eliminado automáticamente.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.compression-type">
     <term>
      <parameter>memcached.compression_type</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Define el tipo de compresión, los valores válidos son: <literal>fastlz</literal>, <literal>zlib</literal>.
       El valor por omisión es <literal>fastlz</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.compression-factor">
     <term>
      <parameter>memcached.compression_factor</parameter>
      <type>float</type>
     </term>
     <listitem>
      <para>
       El factor de compresión. Almacene el valor comprimido solo si el factor de compresión
       (ahorro) supera el límite definido. Almacene comprimido si:
       <literal>plain_len &gt; comp_len * factor</literal>. El valor por omisión es
       <literal>1.3</literal> (23% de ahorro de espacio).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.compression-threshold">
     <term>
      <parameter>memcached.compression_threshold</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       El umbral de compresión. No comprima los valores serializados por debajo de este umbral.
       El valor por omisión es <literal>2000</literal> bytes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.serializer">
     <term>
      <parameter>memcached.serializer</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Define el serializador por omisión para los nuevos objetos Memcached. Los valores válidos son:
       <literal>php</literal>, <literal>igbinary</literal>, <literal>json</literal>,
       <literal>json_array</literal>, <literal>msgpack</literal>.
      </para>
      <variablelist>
       <varlistentry>
        <term>json</term>
        <listitem>
         <para>
          La serialización JSON estándar de PHP. Este serializador es rápido y compacto pero
          solo funciona con datos codificados en UTF-8 y no implementa completamente
          la serialización. Ver la extensión JSON. Disponible a partir de memcached 0.2.0.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>json_array</term>
        <listitem>
         <para>
          Como <literal>json</literal>, pero decodifica en arrays. Disponible a partir de memcached 2.0.0.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>php</term>
        <listitem>
         <para>
          El serializador estándar de PHP.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>igbinary</term>
        <listitem>
         <para>
          Un serializador binario. Disponible a partir de memcached 0.1.4.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>msgpack</term>
        <listitem>
         <para>
          Un serializador binario multi-lenguaje. Disponible a partir de memcached 2.2.0.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
      <para>
       El valor por omisión es <literal>igbinary</literal> si está disponible, luego <literal>msgpack</literal> si está disponible,
       luego de lo contrario <literal>php</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.use-sasl">
     <term>
      <parameter>memcached.use_sasl</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Utilizar la autenticación SASL para las conexiones. Los valores válidos son <literal>On</literal> y <literal>Off</literal>.
       El valor por omisión es <literal>Off</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.default-binary-protocol">
     <term>
      <parameter>memcached.default_binary_protocol</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Define el protocolo memcached por omisión para las nuevas conexiones. (Para configurar el protocolo memcached para
       las conexiones utilizadas por las sesiones, utilice <literal>memcached.sess_binary_protocol</literal> en su lugar.)

       Si se define como <literal>On</literal>, el protocolo binario memcached se utiliza por omisión.
       Si se define como <literal>Off</literal>, el protocolo de texto memcached se utiliza.
       El valor por omisión es <literal>Off</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.default-connect-timeout">
     <term>
      <parameter>memcached.default_connect_timeout</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Define el tiempo de espera de conexión memcached por omisión para las nuevas conexiones.
      (Para configurar el tiempo de espera de conexión memcached para las sesiones, utilice <literal>memcached.sess_connect_timeout</literal> en su lugar.)

       En modo no bloqueante, esto cambia el valor del tiempo de espera.
       Durante la conexión del socket en milisegundos.
       Especificar <literal>-1</literal> significa un tiempo de espera infinito.
       Especificar <literal>0</literal> significa utilizar el tiempo de espera de conexión por omisión de la biblioteca memcached.
       El valor por omisión es <literal>0</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.default-consistent-hash">
     <term>
      <parameter>memcached.default_consistent_hash</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Define el hachado consistente por omisión para las nuevas conexiones.
       (Para configurar el hachado consistente para las conexiones utilizadas por las sesiones,
       utilice <literal>memcached.sess_consistent_hash</literal> en su lugar.)

       Si se define como <literal>On</literal>, el hachado consistente (libketama) se utiliza para la
       gestión de sesiones. Cuando se utiliza el hachado consistente, se pueden añadir o eliminar nodos de caché
       sin perturbar las claves existentes. El valor por omisión es <literal>Off</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-binary-protocol">
     <term>
      <parameter>memcached.sess_binary_protocol</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Utilizar el protocolo binario memcached para las sesiones memcached en lugar del protocolo de texto.
       Las réplicas de libmemcached solo funcionan si el modo binario está activado.
       Sin embargo, algunos proxies (como twemproxy) solo funcionarán si el protocolo binario está desactivado.
       El valor por omisión es <literal>On</literal> desde libmemcached 1.0.18.
       Antes de libmemcached 1.0.18, el valor por omisión era <literal>Off</literal>.
      </para>
      <note>
       <simpara>
        En versiones anteriores de php-memcached, este parámetro se llamaba
        <literal>memcached.sess_binary</literal>.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-connect-timeout">
     <term>
      <parameter>memcached.sess_connect_timeout</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       El valor del tiempo de espera de conexión memcached.
       En modo no bloqueante, esto cambia el valor del tiempo de espera durante
       la conexión del socket en milisegundos.
       Especificar <literal>-1</literal> significa un tiempo de espera infinito.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-consistent-hash-type">
     <term>
      <parameter>memcached.sess_consistent_hash_type</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Tipo de hachado consistente de sesión Memcached.
       Si se define como <literal>ketama</literal>, el hachado consistente (libketama)
       se utiliza para la gestión de sesiones.
       Si se define como <literal>ketama_weighted</literal>, el hachado consistente ponderado (libketama)
       se utiliza para la gestión de sesiones.
       El valor por omisión es <literal>ketama</literal>.
       Antes de php-memcached 3.0, el valor por omisión era <literal>ketama_weighted</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-expire">
     <term>
      <parameter>memcached.sess_lock_expire</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       El tiempo, en segundos, antes de que un cerrojo se libere.
       Definir como <literal>0</literal> da el comportamiento por omisión,
       que es utilizar <literal>max_execution_time</literal> de PHP.
       El valor por omisión es <literal>0</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-retries">
     <term>
      <parameter>memcached.sess_lock_retries</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       El número de intentos de cerrojo de sesión, sin contar el primer intento.
       El valor por omisión es <literal>5</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-wait-max">
     <term>
      <parameter>memcached.sess_lock_wait_max</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       El tiempo máximo, en milisegundos, de espera entre los intentos de cerrojo de sesión.
       El valor por omisión es <literal>150</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-wait-min">
     <term>
      <parameter>memcached.sess_lock_wait_min</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       El tiempo mínimo, en milisegundos, de espera entre los intentos de cerrojo de sesión.
       Este valor se duplica en cada nuevo intento de cerrojo hasta que
       <literal>memcached.sess_lock_wait_max</literal> se alcance, después de lo cual cualquier nuevo intento tomará
       <literal>memcached.sess_lock_wait_max</literal> segundos.
       El valor por omisión es <literal>150</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-persistent">
     <term>
      <parameter>memcached.sess_persistent</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Si las conexiones memcached coinciden con el/los valor(es) de
       <literal>session.save_path</literal> deben ser reutilizadas después de la ejecución del script. No utilizar
       si algunos parámetros (por ejemplo, los parámetros SASL, sess_binary_protocol) serían sobrescritos entre las peticiones.
       El valor por omisión es <literal>Off</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-remove-failed-servers">
     <term>
      <parameter>memcached.sess_remove_failed_servers</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       Permite que el servidor Memcached en fallo sea eliminado automáticamente.
       El valor por omisión es <literal>Off</literal>.
      </para>
      <note>
       <simpara>
        En versiones anteriores de php-memcached, este parámetro se llamaba
        <literal>memcached.sess_remove_failed</literal>.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-server-failure-limit">
     <term>
      <parameter>memcached.sess_server_failure_limit</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Definir este valor para permitir la eliminación automática
       del servidor después de un cierto número de intentos de conexión fallidos.
       El valor por omisión es <literal>0</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-sasl-password">
     <term>
      <parameter>memcached.sess_sasl_password</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       La contraseña SASL de sesión.
       El nombre de usuario y la contraseña deben ser definidos para activar SASL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-sasl-username">
     <term>
      <parameter>memcached.sess_sasl_username</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       El nombre de usuario SASL de sesión.
       El nombre de usuario y la contraseña deben ser definidos para activar SASL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.store-retry-count">
     <term>
      <parameter>memcached.store_retry_count</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       La cantidad de intentos para los comandos de almacenamiento fallidos.
       Este mecanismo permite un fallo transparente hacia los servidores secundarios cuando
       las operaciones set/increment/decrement/setMulti fallan en
       el servidor deseado en un entorno multi-servidor.
       El valor por omisión es <literal>2</literal>.
      </para>
     </listitem>
    </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
