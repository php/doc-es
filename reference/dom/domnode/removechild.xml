<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c1f37a6c270aadbbb3da56a3973ffd62197adf2b Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="domnode.removechild" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMNode::removeChild</refname>
  <refpurpose>
   Elimina un hijo de la lista de hijos
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMNode">
   <modifier>public</modifier> <type class="union"><type>DOMNode</type><type>false</type></type><methodname>DOMNode::removeChild</methodname>
   <methodparam><type>DOMNode</type><parameter>child</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función elimina un hijo de la lista de hijos.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>child</parameter></term>
     <listitem>
      <para>
       El hijo a eliminar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si el hijo no puede ser eliminado, la función devuelve el antiguo hijo o &false; en caso de error.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NO_MODIFICATION_ALLOWED_ERR</constant></term>
     <listitem>
      <para>
       Lanzado si el nodo es de solo lectura.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_NOT_FOUND_ERR</constant></term>
     <listitem>
      <para>
       Lanzado si <parameter>child</parameter> no es un hijo
       de este nodo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   El siguiente ejemplo elimina el elemento <literal>chapter</literal> de nuestro
   documento XML.
   <example>
    <title>Eliminación de un hijo</title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument;
$doc->load('examples/book-docbook.xml');

$book = $doc->documentElement;

// Se recupera el capítulo y se elimina del libro
$chapter = $book->getElementsByTagName('chapter')->item(0);
$oldchapter = $book->removeChild($chapter);

echo $doc->saveXML();
?>]]>
    </programlisting>
    &example.outputs;
    <screen role="xml">
<![CDATA[
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
          "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<book id="listing">
 <title>My lists</title>

</book>
]]>
    </screen>
   </example>
  </para>
 </refsect1>
<refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMChildNode::remove</methodname></member>
    <member><methodname>DOMNode::appendChild</methodname></member>
    <member><methodname>DOMNode::replaceChild</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
