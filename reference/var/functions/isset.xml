<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: dd100db2cb8b7d7384e5daf3a1818ed090b1ad5a Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.isset" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>isset</refname>
  <refpurpose>Determina si una variable está declarada y es diferente de &null;</refpurpose>
 </refnamediv>

 <refsect1 role="description">
 &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>isset</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>vars</parameter></methodparam>
  </methodsynopsis>
  <para>
   Determina si una variable es considerada definida,
   lo que significa que está declarada y es diferente de &null;.
  </para>
  <para>
   Si una variable ha sido destruida con la función
   <function>unset</function>, ya no se considera como definida.
  </para>
  <para>
   <function>isset</function> devolverá &false; al verificar
   una variable con valor &null;.
   Asimismo, cabe señalar que el carácter nulo (<literal>"\0"</literal>) no
   es equivalente a la constante PHP &null;.
  </para>
  <para>
   Si se proporcionan varios argumentos, entonces <function>isset</function>
   devolverá &true; solo si todos los argumentos están definidos.
   La evaluación se realiza de izquierda a derecha y se detiene en cuanto
   se encuentra una variable no definida.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       La variable a analizar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>vars</parameter></term>
     <listitem>
      <para>
       Variables adicionales.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve &true; si <parameter>var</parameter> existe y tiene un valor
   distinto de &null;. &false; en caso contrario.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>isset</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$var = '';

// Esto es verdadero, por lo que el texto se muestra
if (isset($var)) {
    echo 'Esta variable existe, por lo que puede ser mostrada.', PHP_EOL;
}

// En los siguientes ejemplos, utilizamos var_dump() para mostrar
// el retorno de la función isset().

$a = 'test';
$b = 'anothertest';

var_dump(isset($a));      // TRUE
var_dump(isset($a, $b)); // TRUE

unset($a);

var_dump(isset($a));     // FALSE
var_dump(isset($a, $b)); // FALSE

$foo = NULL;
var_dump(isset($foo));   // FALSE

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
     También funciona con arrays:
   <example>
    <title>Ejemplo de <function>isset</function> con elementos de array</title>
    <programlisting role="php">
<![CDATA[
<?php

$a = array('test' => 1, 'bonjour' => NULL, 'pie' => array('a' => 'apple'));

var_dump(isset($a['test']));            // TRUE
var_dump(isset($a['foo']));             // FALSE
var_dump(isset($a['bonjour']));         // FALSE

// La clave 'bonjour' vale NULL y es considerada como no existente
// Si se desea verificar la existencia de esta clave, utilice esta función
var_dump(array_key_exists('bonjour', $a)); // TRUE

// Verificación de valores en profundidad
var_dump(isset($a['pie']['a']));        // TRUE
var_dump(isset($a['pie']['b']));        // FALSE
var_dump(isset($a['cake']['a']['b']));  // FALSE
?>
]]>
    </programlisting>
   </example>
  </para>
  <example>
   <title><function>isset</function> sobre posiciones en un string</title>
   <programlisting role="php">
<![CDATA[
<?php
$expected_array_got_string = 'somestring';
var_dump(isset($expected_array_got_string['some_key']));
var_dump(isset($expected_array_got_string[0]));
var_dump(isset($expected_array_got_string['0']));
var_dump(isset($expected_array_got_string[0.5]));
var_dump(isset($expected_array_got_string['0.5']));
var_dump(isset($expected_array_got_string['0 Mostel']));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(false)
bool(true)
bool(true)
bool(true)
bool(false)
bool(false)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    <function>isset</function> funciona únicamente con variables, ya que el uso
    de cualquier otra cosa resultará en un error de análisis.
    Para verificar si una <link linkend="language.constants">constante</link> está definida,
    utilice la función <function>defined</function>.
   </para>
  </warning>
  &note.language-construct;
  <note>
   <para>
    Al utilizar esta función sobre propiedades de objeto
    inaccesibles, se llamará al método mágico
    <link linkend="object.isset">__isset()</link>
    si existe.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>empty</function></member>
    <member><link linkend="object.isset">__isset()</link></member>
    <member><function>unset</function></member>
    <member><function>defined</function></member>
    <member><link linkend="types.comparisons">la tabla de comparación de tipos</link></member>
    <member><function>array_key_exists</function></member>
    <member><function>is_null</function></member>
    <member>el operador de control de informe de errores <link linkend="language.operators.errorcontrol">@</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
