<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d816a0fad6c458d9515f697cc89e26ca9d8069f5 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.intval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>intval</refname>
  <refpurpose>
   Devuelve el valor entero equivalente de una variable
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>intval</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>base</parameter><initializer>10</initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve el valor &integer; de <parameter>value</parameter> utilizando
   la <parameter>base</parameter> proporcionada para la conversión (por omisión
   en base 10). <function>intval</function> no debería ser utilizada
   con objetos; en estos casos, se emitirá un error de nivel <constant>E_WARNING</constant>
   y la función devolverá 1.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       El valor escalar a ser convertido en entero
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>base</parameter></term>
     <listitem>
      <para>
       La base para la conversión
      </para>
      <note>
       <para>
        Si <parameter>base</parameter> es 0, la base utilizada
        se determina por el formato del parámetro <parameter>value</parameter>:
        <itemizedlist>
         <listitem>
          <simpara>
           si la cadena incluye un prefijo "0x" (o "0X"), la base tomada
           será 16 (hex); de lo contrario,
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           si la cadena comienza por "0b" (o "0B"), la base tomada
           será 2 (binario); de lo contrario,
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           si la cadena comienza por "0", la base tomada será 8 (octal);
           de lo contrario,
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           la base tomada será 10 (decimal).
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un valor de tipo &integer; de <parameter>value</parameter> en caso de
   éxito o 0 en caso de fallo. Los arrays vacíos devuelven 0,
   los arrays no vacíos devuelven 1.
  </para>
  <para>
   El valor máximo depende del sistema. Los sistemas de 32 bits tienen un valor
   entero signado máximo de -2147483648 a 2147483647. Por lo tanto, por ejemplo, en
   un sistema similar, <literal>intval('1000000000000')</literal> devolverá
   2147483647. El valor entero signado máximo para un sistema de 64 bits es
   9223372036854775807.
  </para>
  <para>
   Las cadenas de caracteres devuelven la mayoría de las veces 0, esto depende de los
   caracteres en el extremo izquierdo de la cadena. La regla
   común del
   <link linkend="language.types.integer.casting">moldeado de enteros</link>
   se aplica.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       El nivel de error al convertir desde un objeto ha sido modificado de <constant>E_NOTICE</constant>
       a <constant>E_WARNING</constant>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplos con <function>intval</function></title>
    <para>
     Los ejemplos siguientes están basados en un sistema de 64 bits.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
echo intval(42), PHP_EOL;                      // 42
echo intval(4.7), PHP_EOL;                     // 4
echo intval('42'), PHP_EOL;                    // 42
echo intval('+42'), PHP_EOL;                   // 42
echo intval('-42'), PHP_EOL;                   // -42
echo intval(042), PHP_EOL;                     // 34
echo intval('042'), PHP_EOL;                   // 42
echo intval(1e10), PHP_EOL;                    // 10000000000
echo intval('1e10'), PHP_EOL;                  // 10000000000
echo intval(0x1A), PHP_EOL;                    // 26
echo intval('0x1A'), PHP_EOL;                  // 0
echo intval('0x1A', 0), PHP_EOL;               // 26
echo intval(42000000), PHP_EOL;                // 42000000
echo intval(420000000000000000000), PHP_EOL;   // -4275113695319687168
echo intval('420000000000000000000'), PHP_EOL; // 9223372036854775807
echo intval(42, 8), PHP_EOL;                   // 42
echo intval('42', 8), PHP_EOL;                 // 34
echo intval(array()), PHP_EOL;                 // 0
echo intval(array('foo', 'bar')), PHP_EOL;     // 1
echo intval(false), PHP_EOL;                   // 0
echo intval(true), PHP_EOL;                    // 1
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    El parámetro <parameter>base</parameter> no tiene ningún efecto a menos que el
    parámetro <parameter>value</parameter> sea una &string;.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>boolval</function></member>
    <member><function>floatval</function></member>
    <member><function>strval</function></member>
    <member><function>settype</function></member>
    <member><function>is_numeric</function></member>
    <member><link linkend="language.types.type-juggling">Definición del tipo</link></member>
    <member><link linkend="ref.bc">Números grandes BCMath</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
