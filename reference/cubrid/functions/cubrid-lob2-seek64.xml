<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 648875cf73af01acdb6afaa5ca38b0bf6631bf42 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.cubrid-lob2-seek64" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_lob2_seek64</refname>
  <refpurpose>Desplaza el cursor de un objeto LOB</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>cubrid_lob2_seek64</methodname>
   <methodparam><type>resource</type><parameter>lob_identifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>origin</parameter><initializer>CUBRID_CURSOR_CURRENT</initializer></methodparam>
  </methodsynopsis>
  <para>
   La función <function>cubrid_lob2_seek64</function> se utiliza
   para desplazar la posición del cursor en un objeto LOB de un valor
   proporcionado por el argumento <parameter>offset</parameter>, en la dirección
   proporcionada por el argumento <parameter>origin</parameter>.
   Si la posición <parameter>offset</parameter> es mayor que la capacidad
   de almacenamiento de un entero, puede utilizarse esta función.
  </para>
  <para>
   Para definir el argumento <parameter>origin</parameter>, puede
   utilizarse la constante <constant>CUBRID_CURSOR_FIRST</constant> para definir la posición
   del cursor a la que se añaden <parameter>offset</parameter> unidades
   desde el principio. En este caso, <parameter>offset</parameter> debe ser un valor
   positivo.
  </para>
  <para>
   Si se utiliza <constant>CUBRID_CURSOR_CURRENT</constant> para el argumento <parameter>origin</parameter>,
   puede desplazarse hacia atrás, así como hacia adelante. Y el argumento
   <parameter>offset</parameter> podrá ser positivo o negativo.
  </para>
  <para>
   Si se utiliza la constante <constant>CUBRID_CURSOR_LAST</constant> para el argumento
   <parameter>origin</parameter>, puede desplazarse hacia atrás de
   <parameter>offset</parameter> unidades desde el final del objeto LOB y
   el argumento <parameter>offset</parameter> solo podrá ser positivo.
  </para>
  <note>
   <para>
    Si se utiliza esta función para desplazar la posición del cursor de un
    objeto LOB, debe pasarse el argumento <parameter>offset</parameter>
    en forma de string.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>lob_identifier</parameter></term>
     <listitem>
      <para>
       Un identificador LOB, recuperado desde la función
       <function>cubrid_lob2_new</function> o desde el conjunto de resultados.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Número de unidades de desplazamiento del cursor.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>origin</parameter></term>
     <listitem>
      <para>Este argumento puede tomar los siguientes valores:</para>
      <para>CUBRID_CURSOR_FIRST: desplaza el cursor hacia adelante partiendo del principio.</para>
      <para>CUBRID_CURSOR_CURRENT: desplaza el cursor hacia atrás y hacia adelante desde la posición actual.</para>
      <para>CUBRID_CURSOR_LAST: desplaza el cursor hacia atrás desde el final del objeto LOB.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo con <function>cubrid_lob2_seek64</function></title>
   <programlisting role="php">
<![CDATA[
<?php
// test_lob (id INT, contents CLOB)
// La longitud de los datos de doc_1.txt debe ser superior a 20101029056306120215.

$conn = cubrid_connect("localhost", 33000, "demodb", "dba", "");

cubrid_execute($conn,"DROP TABLE if exists test_lob");
cubrid_execute($conn,"CREATE TABLE test_lob (id INT, contents CLOB)");

$req = cubrid_prepare($conn, "INSERT INTO test_lob VALUES (?, ?)");
cubrid_bind($req, 1, 1);

$lob = cubrid_lob2_new($conn, "clob");
cubrid_lob2_import($lob, "doc_1.txt");
cubrid_lob2_bind($req, 2, $lob, 'CLOB'); // o cubrid_lob2_bind($req, 2, $lob);

cubrid_execute($req);

cubrid_lob2_close($lob);

$req = cubrid_execute($conn, "select * from test_lob");
$row = cubrid_fetch_row($req, CUBRID_LOB);
$lob = $row[1];

cubrid_lob2_seek64($lob, "20101029056306120215", CUBRID_CURSOR_FIRST);
$data = cubrid_lob2_read($lob, 20);
echo $data."\n";
cubrid_disconnect($conn);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_lob2_read</function></member>
    <member><function>cubrid_lob2_write</function></member>
    <member><function>cubrid_lob2_seek</function></member>
    <member><function>cubrid_lob2_tell</function></member>
    <member><function>cubrid_lob2_tell64</function></member>
    <member><function>cubrid_lob2_size</function></member>
    <member><function>cubrid_lob2_size64</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
