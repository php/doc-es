<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 62126c55f1c6ed444043e7272c4f9e233818a44b Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.escapeshellcmd" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>escapeshellcmd</refname>
  <refpurpose>Protege los caracteres especiales del Shell</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>escapeshellcmd</methodname>
   <methodparam><type>string</type><parameter>command</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>escapeshellcmd</function> escapa todos los
   caracteres de la cadena <parameter>command</parameter>
   que podrían tener un significado especial en una
   orden Shell. Esta función permite asegurarse de que la orden será
   correctamente pasada al ejecutor de órdenes Shell
   <function>exec</function> y <function>system</function>, o incluso
   a <link linkend="language.operators.execution">comillas invertidas</link>.
  </para>
  <para>
   Los siguientes caracteres serán escapados:
   <literal>&amp;#;`|*?~&lt;&gt;^()[]{}$\</literal>, <literal>\x0A</literal>
   y <literal>\xFF</literal>. <literal>'</literal> y <literal>"</literal>
   son escapados solo si no están en pares. En Windows, todos estos caracteres
   así como <literal>%</literal> y <literal>!</literal> son precedidos por
   un circunflejo (<literal>^</literal>).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>command</parameter></term>
     <listitem>
      <para>
       La orden a escapar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   La cadena escapada.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>escapeshellcmd</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Se permiten intencionalmente un número arbitrario de argumentos aquí.
$command = './configure '.$_POST['configure_options'];

$escaped_command = escapeshellcmd($command);

system($escaped_command);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
   <warning xmlns="http://docbook.org/ns/docbook">
    <para>
     La función <function>escapeshellcmd</function> debe ser utilizada
     sobre toda la cadena de orden, y permite
     a personas malintencionadas pasar un número arbitrario
     de argumentos. Para escapar un solo argumento,
     la función <function>escapeshellarg</function> debería ser
     utilizada en su lugar.
    </para>
   </warning>
  <warning xmlns="http://docbook.org/ns/docbook">
   <para>
    Los espacios no son escapados por <function>escapeshellcmd</function>
    lo cual puede ser problemático en Windows con rutas como:
    <literal>C:\Program Files\ProgramName\program.exe</literal>.
    Esto puede ser mitigado utilizando el siguiente fragmento de código:
    <programlisting role="php">
<![CDATA[
<?php
$cmd = preg_replace('`(?<!^) `', '^ ', escapeshellcmd($cmd));
]]>
    </programlisting>
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>escapeshellarg</function></member>
    <member><function>exec</function></member>
    <member><function>popen</function></member>
    <member><function>system</function></member>
    <member><link linkend="language.operators.execution">las comillas invertidas</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
