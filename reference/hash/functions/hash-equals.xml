<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 01a7e4684e48c837813eb6492dd8a8c2887f48d3 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.hash-equals" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>hash_equals</refname>
  <refpurpose>Comparación de strings segura contra ataques de temporización</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>hash_equals</methodname>
   <methodparam><type>string</type><parameter>known_string</parameter></methodparam>
   <methodparam><type>string</type><parameter>user_string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Compara dos strings empleando el mismo tiempo, sin importar si son iguales o no.
  </para>
  <para>
   Esta función debería utilizarse para mitigar los ataques de temporización, por ejemplo,
   al probar hash de contraseñas de <function>crypt</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>known_string</parameter></term>
    <listitem>
     <para>
      El <type>string</type> de longitud conocida con el que comparar
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>user_string</parameter></term>
    <listitem>
     <para>
      El string proporcionado por el usuario
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve &true; cuando los dos strings son iguales, o &false; si no.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Emite un mensaje de nivel <constant>E_WARNING</constant> cuando ninguno de los
   parámetros proporcionados es un string.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="foobar.examples.basic">
    <title>Ejemplo <function>hash_equals</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$esperado   = crypt('12345', '$2a$07$usesomesillystringforsalt$');
$correcto   = crypt('12345', '$2a$07$usesomesillystringforsalt$');
$incorrecto = crypt('apple', '$2a$07$usesomesillystringforsalt$');

var_dump(hash_equals($esperado, $correcto));
var_dump(hash_equals($esperado, $incorrecto));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
bool(true)
bool(false)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Ambos argumentos deber tener la misma longitud para que se puedan comparar.
    Cuando se proporcionan argumentos con diferente longitud, se devuelve &false; inmediatamente, pudiéndose
    filtrar la longitud del string conocido en caso de un ataque de temporización.
   </para>
  </note>
  <note>
   <para>
    Es importante proveer el string proporcionado por el usuario como segundo
    parámetro, en vez de como el primero.
   </para>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
