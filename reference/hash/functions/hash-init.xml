<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: fe4ff341037cab316f76ca414f9a1a8ecdc4abfd Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.hash-init" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>hash_init</refname>
  <refpurpose>Inicializa un contexto de hachado incremental</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>HashContext</type><methodname>hash_init</methodname>
   <methodparam><type>string</type><parameter>algo</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>key</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>algo</parameter></term>
     <listitem>
      <para>
       Nombre del algoritmo de hachado seleccionado (por ejemplo: <literal>"sha256"</literal>).
       Para una lista de los algoritmos soportados ver <function>hash_algos</function>.
       <note>
        <para>
         Las funciones de hachado no criptográficas no están permitidas si se especifica el flag <constant>HASH_HMAC</constant>.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Configuraciones opcionales para la generación del hachado, actualmente solo soporta
       una opción:
       <constant>HASH_HMAC</constant>. Cuando esta opción es especificada, el parámetro
       <parameter>key</parameter> <emphasis>debe</emphasis> ser especificado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Cuando <constant>HASH_HMAC</constant> es especificada para <parameter>flags</parameter>,
       una clave secreta compartida que será utilizada con el método de hachado
       HMAC debe ser proporcionada en este parámetro.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Un array de opciones para los algoritmos diversos de hachado.
       Actualmente, solo el parámetro <parameter>"seed"</parameter> es
       soportado para las variantes MurmurHash.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna el contexto de hachado HashContext para su utilización con
   <function>hash_update</function>, <function>hash_update_stream</function>,
   <function>hash_update_file</function> y <function>hash_final</function>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <itemizedlist>
   <listitem>
    <simpara>
     Levanta una excepción <classname>ValueError</classname> si el
     <parameter>algo</parameter> es desconocido, si es una función de
     hachado no criptográfica, o si <parameter>key</parameter> está vacío.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Pasar opciones de configuración de tipo incorrecto en
     <parameter>options</parameter> emitirá ahora un error
     <constant>E_DEPRECATED</constant>, ya que pueden ser mal interpretadas.
     Esto resultará en una excepción <exceptionname>ValueError</exceptionname> en el futuro.
    </simpara>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.4.0</entry>
       <entry>Pasar opciones de un tipo incorrecto está ahora desaconsejado.</entry>
      </row>
      <row>
       <entry>8.1.0</entry>
       <entry>El parámetro <parameter>options</parameter> ha sido añadido.</entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>El uso de funciones de hachado no criptográficas (adler32, crc32, crc32b, fnv132, fnv1a32, fnv164, fnv1a64, joaat) con <constant>HASH_HMAC</constant> ha sido desactivado.</entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        Retorna una <classname>HashContext</classname> en lugar de un recurso.
       </entry>
       <entry>8.0.0</entry>
       <entry>
        Levanta una excepción <classname>ValueError</classname> ahora si el
        parámetro <parameter>algo</parameter> es desconocido o no es
        una función de hachado criptográfica, o si el parámetro
        <parameter>key</parameter> está vacío.
        Anteriormente, &false; era retornado y un mensaje
        <constant>E_WARNING</constant> era emitido.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de hachado incremental</title>
    <programlisting role="php">
<![CDATA[
<?php
$hash = hash('sha256', 'The quick brown fox jumped over the lazy dog.');

$ctx = hash_init('sha256');
hash_update($ctx, 'The quick brown fox ');
hash_update($ctx, 'jumped over the lazy dog.');
$incremental_hash = hash_final($ctx);

echo $incremental_hash, PHP_EOL;
var_dump($hash === $incremental_hash);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
68b1282b91de2c054c36629cb8dd447f12f096d3e3c587978dc2248444633483
bool(true)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>hash_algos</function></member>
    <member><function>hash_update</function></member>
    <member><function>hash_update_file</function></member>
    <member><function>hash_update_stream</function></member>
    <member><function>hash_final</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
