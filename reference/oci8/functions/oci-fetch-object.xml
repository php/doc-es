<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ed6de1ae20ce16c0c7be0b3fef282b6065bebfac Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.oci-fetch-object" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_fetch_object</refname>
  <refpurpose>Lee una línea de un resultado en forma de objeto</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>stdClass</type><type>false</type></type><methodname>oci_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer>OCI_ASSOC | OCI_RETURN_NULLS</initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve un objeto que contiene la siguiente línea de resultado de una
   consulta. Cada atributo de este objeto corresponde a una columna
   de la línea. Esta función se utiliza típicamente en un ciclo
   mientras no devuelva &false;, lo que indica que no hay más líneas disponibles.
  </para>
  &oci.datatypes;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      &oci.arg.statement.id;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto. Cada atributo de este objeto corresponde a una columna de la línea.
   Si no hay más líneas disponibles en la consulta <parameter>statement</parameter>
   entonces se devuelve &false;.
  </para>
  <para>
    Todas las columnas <literal>LOB</literal> son devueltas en forma de
    descriptores LOB.
  </para>
  <para>
   Las columnas <literal>DATE</literal> son devueltas en forma de strings formateados
   con el formato de fecha actual. El formato por omisión puede ser cambiado mediante las variables
   de entorno Oracle, como <literal>NLS_LANG</literal> o ejecutando el comando
   <literal>ALTER SESSION SET NLS_DATE_FORMAT</literal>.
  </para>
  <para>
   Los nombres de columnas que no son sensibles a la casse (por omisión en Oracle),
   tendrán nombres de atributos en mayúsculas. Los nombres de columnas que son sensibles a la
   casse, tendrán nombres de atributos utilizando exactamente la misma casse de la columna.
   Utilice la función <function>var_dump</function> sobre el objeto de resultado para verificar
   la casse apropiada para el acceso a los atributos.
  </para>
  <para>
   Los valores de atributo serán &null; para cada campo de datos <literal>NULL</literal>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>oci_fetch_object</function></title>
    <programlisting role="php">
<![CDATA[
<?php

/*
  Antes de la ejecución, cree la tabla:
    CREATE TABLE mytab (id NUMBER, description VARCHAR2(30));
    INSERT INTO mytab (id, description) values (1, 'Fish and Chips');
    COMMIT;
*/

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT id, description FROM mytab');
oci_execute($stid);

while (($row = oci_fetch_object($stid)) != false) {
    // Utilice nombres de atributos sensibles a la casse para cada columna estándar de Oracle
    echo $row->ID . "<br>\n";
    echo $row->DESCRIPTION . "<br>\n";
}

// Muestra:
//    1
//    Fish and Chips

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo con <function>oci_fetch_object</function> con nombres de columna sensibles a la casse</title>
    <programlisting role="php">
<![CDATA[
<?php

/*
  Antes de la ejecución, cree la tabla con una columna cuyo nombre es sensible a la casse:
    CREATE TABLE mytab (id NUMBER, "MyDescription" VARCHAR2(30));
    INSERT INTO mytab (id, "MyDescription") values (1, 'Iced Coffee');
    COMMIT;
*/

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT id, "MyDescription" FROM mytab');
oci_execute($stid);

while (($row = oci_fetch_object($stid)) != false) {
    // Utilice nombres de atributos en mayúsculas para cada columna estándar de Oracle
    echo $row->ID . "<br>\n";
    // Utilice la casse exacta para los nombres de columnas sensibles a la casse
    echo $row->MyDescription . "<br>\n";
}

// Muestra:
//    1
//    Iced Coffee

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo con <function>oci_fetch_object</function> con LOBs</title>
    <programlisting role="php">
<![CDATA[
<?php

/*
  Antes de la ejecución, cree la tabla:
    CREATE TABLE mytab (id NUMBER, description CLOB);
    INSERT INTO mytab (id, description) values (1, 'A very long string');
    COMMIT;
*/

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT id, description FROM mytab');
oci_execute($stid);

while (($row = oci_fetch_object($stid)) != false) {
    echo $row->ID . "<br>\n";
    // Lo siguiente mostrará los 11 primeros bytes desde DESCRIPTION
    echo $row->DESCRIPTION->read(11) . "<br>\n";
}

// Muestra:
//    1
//    A very long

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>oci_fetch</function></member>
    <member><function>oci_fetch_all</function></member>
    <member><function>oci_fetch_assoc</function></member>
    <member><function>oci_fetch_array</function></member>
    <member><function>oci_fetch_row</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
