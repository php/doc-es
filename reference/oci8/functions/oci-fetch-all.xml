<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d33a6756e7a94bc06164d2a97bb0a3ffa19e3471 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.oci-fetch-all" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_fetch_all</refname>
  <refpurpose>Lee múltiples líneas de un resultado en un array multidimensional</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>oci_fetch_all</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">output</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>OCI_FETCHSTATEMENT_BY_COLUMN | OCI_ASSOC</initializer></methodparam>
  </methodsynopsis>
  <para>
   Lee todas las líneas de un resultado Oracle en un array de 2 dimensiones.
   Por omisión, se devuelven todas las líneas.
  </para>
  <para>
   Esta función puede ser llamada una sola vez para cada consulta
   ejecutada mediante la función <function>oci_execute</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      &oci.arg.statement.id;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>output</parameter></term>
     <listitem>
      <para>
       La variable que contendrá las líneas devueltas.
      </para>
      <para>
       Las columnas LOB se devuelven en forma de string
       cuando Oracle soporta la conversión.
      </para>
      <para>
       Ver la función <function>oci_fetch_array</function> para más
       información sobre cómo se recuperan los datos y sus tipos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Número de líneas iniciales a ignorar al leer
       el resultado. Por omisión, este parámetro vale 0, para comenzar la lectura
       en la primera línea.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Número máximo de líneas a devolver. Por omisión, vale -1, lo que
       significa que todas las líneas disponibles serán devueltas
       desde el parámetro <parameter>offset</parameter> + 1.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       El parámetro <parameter>flags</parameter> indica la estructura
       del array pero también si deben usarse arrays asociativos.
       <table>
        <title>Modos de estructura de arrays para la función
         <function>oci_fetch_all</function></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Constante</entry>
           <entry>Descripción</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>OCI_FETCHSTATEMENT_BY_ROW</constant></entry>
           <entry>El array devuelto contendrá un solo subarray por
            líneas.</entry>
          </row>
          <row>
           <entry><constant>OCI_FETCHSTATEMENT_BY_COLUMN</constant></entry>
           <entry>El array devuelto contendrá un solo subarray por
            columnas. Este es el comportamiento por omisión.</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <para>
       Los arrays pueden ser indexados ya sea por el encabezado de columna,
       o numéricamente.
       <table>
        <title>Modos de indexación de arrays para la función
         <function>oci_fetch_all</function></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Constante</entry>
           <entry>Descripción</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>OCI_NUM</constant></entry>
           <entry>Se usan índices numéricos para cada array de columnas.</entry>
          </row>
          <row>
           <entry><constant>OCI_ASSOC</constant></entry>
           <entry>Se usan índices asociativos para cada array de columnas. Este es el comportamiento por omisión.</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <para>
       Utilice el operador de adición "&quot;+&quot;" para elegir una
       combinación de estructuras de arrays y modos de indexación.
      </para>
      <para>
       Los nombres de columnas que no son sensibles a mayúsculas/minúsculas (por omisión en Oracle),
       tendrán nombres de atributos en mayúsculas. Los nombres de columnas que son sensibles a mayúsculas/minúsculas,
       tendrán nombres de atributos usando exactamente la misma casilla de la columna.
       Utilice la función <function>var_dump</function> en el objeto de resultado para verificar
       la casilla apropiada a usar para cada consulta.
      </para>
      <para>
       Las consultas que poseen más de una columna con el mismo nombre
       deben usar alias. De lo contrario, solo una
       de las columnas aparecerá en el array asociativo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el número de líneas recuperadas en el parámetro <parameter>output</parameter>
   que puede ser 0 o más.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>oci_fetch_all</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT POSTAL_CODE, CITY FROM locations WHERE ROWNUM < 3');
oci_execute($stid);

$nrows = oci_fetch_all($stid, $res);

echo "$nrows rows fetched<br>\n";
var_dump($res);

// var_dump mostrará:
//    2 rows fetched
//    array(2) {
//      ["POSTAL_CODE"]=>
//      array(2) {
//        [0]=>
//        string(6) "00989x"
//        [1]=>
//        string(6) "10934x"
//      }
//      ["CITY"]=>
//      array(2) {
//        [0]=>
//        string(4) "Roma"
//        [1]=>
//        string(6) "Venice"
//      }
//    }

// Mostrar resultados
echo "<table border='1'>\n";
foreach ($res as $col) {
    echo "<tr>\n";
    foreach ($col as $item) {
        echo "    <td>".($item !== null ? htmlentities($item, ENT_QUOTES) : "")."</td>\n";
    }
    echo "</tr>\n";
}
echo "</table>\n";

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo con <function>oci_fetch_all</function> y <constant>OCI_FETCHSTATEMENT_BY_ROW</constant></title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT POSTAL_CODE, CITY FROM locations WHERE ROWNUM < 3');
oci_execute($stid);

$nrows = oci_fetch_all($stid, $res, null, null, OCI_FETCHSTATEMENT_BY_ROW);

echo "$nrows líneas recuperadas<br>\n";
var_dump($res);

// Muestra:
//    2 líneas recuperadas
//    array(2) {
//      [0]=>
//      array(2) {
//        ["POSTAL_CODE"]=>
//        string(6) "00989x"
//        ["CITY"]=>
//        string(4) "Roma"
//      }
//      [1]=>
//      array(2) {
//        ["POSTAL_CODE"]=>
//        string(6) "10934x"
//        ["CITY"]=>
//        string(6) "Venice"
//      }
//    }

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo con <function>oci_fetch_all</function> y <constant>OCI_NUM</constant></title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT POSTAL_CODE, CITY FROM locations WHERE ROWNUM < 3');
oci_execute($stid);

$nrows = oci_fetch_all($stid, $res, null, null, OCI_FETCHSTATEMENT_BY_ROW + OCI_NUM);

echo "$nrows líneas recuperadas<br>\n";
var_dump($res);

// Muestra:
//    2 líneas recuperadas
//    array(2) {
//      [0]=>
//      array(2) {
//        [0]=>
//        string(6) "00989x"
//        [1]=>
//        string(4) "Roma"
//      }
//      [1]=>
//      array(2) {
//        [0]=>
//        string(6) "10934x"
//        [1]=>
//        string(6) "Venice"
//      }
//    }

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    El uso del parámetro <parameter>offset</parameter> es realmente ineficiente.
    Todas las líneas a evitar están incluidas en el conjunto de resultados devuelto por
    la base de datos a PHP. Luego, son descartadas. Es más eficiente
    usar una consulta SQL para restringir el alcance de las líneas deseadas.
    Ver la función <function>oci_fetch_array</function> para un ejemplo concreto.
   </para>
  </note>
  <note>
   <para>
    Las consultas que devuelven un número muy grande de líneas pueden
    ahorrar memoria al usar funciones que recuperan una sola línea, como hace la función <function>oci_fetch_array</function>.
   </para>
  </note>
  <note>
   &oci.use.setprefetch;
  </note>
  <note>
   <para>
    Esta función no devolverá líneas desde un conjunto
    de resultados implícito de una base de datos Oracle
    12<emphasis>c</emphasis>. Utilice en su lugar la función
    <function>oci_fetch_array</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>oci_fetch</function></member>
    <member><function>oci_fetch_array</function></member>
    <member><function>oci_fetch_assoc</function></member>
    <member><function>oci_fetch_object</function></member>
    <member><function>oci_fetch_row</function></member>
    <member><function>oci_set_prefetch</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
