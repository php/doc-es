<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f80105b4fc1196bd8d5fecb98d686b580b1ff65d Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.oci-set-prefetch">
 <refnamediv>
  <refname>oci_set_prefetch</refname>
  <refpurpose>Indica el número de filas que deben leerse por adelantado por Oracle</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>oci_set_prefetch</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>rows</parameter></methodparam>
  </methodsynopsis>
  <para>
   Define el número de filas a pre-cargar por las bibliotecas clientes de Oracle
   después de una llamada exitosa a la función <function>oci_execute</function> pero también
   para cada llamada a las funciones internas de recuperación de filas en la base
   de datos. Para las consultas que devuelven un gran número de filas, el rendimiento
   puede mejorar significativamente aumentando el número de filas a pre-cargar respecto
   al valor por omisión definido por la opción de configuración <link linkend="ini.oci8.default-prefetch">oci8.default_prefetch</link>.
  </para>
  <para>
   La pre-carga es una forma eficiente de devolver más de una fila de datos
   desde la base de datos por cada envío de red. Esto permite una mejor utilización
   de la red y del CPU. La pre-carga de filas es interna a OCI8 y el comportamiento
   de las funciones de recuperación de datos permanece inalterado según el valor
   del contador de pre-carga. Por ejemplo, la función <function>oci_fetch_row</function>
   siempre devolverá una fila. El buffer de pre-carga es específico de cada consulta
   y no será utilizado para re-ejecutar consultas o por otras conexiones.
  </para>
  <para>
   Es conveniente llamar a la función <function>oci_set_prefetch</function> antes
   de la función <function>oci_execute</function>.
  </para>
  <para>
   Una forma de mejorar la eficiencia es definir el valor de pre-carga a un valor
   razonable según la red y la base de datos a gestionar. Para las consultas que
   devuelven un número muy grande de filas, es conveniente recuperar el conjunto
   de filas por partes (es decir, definir el valor de pre-carga a un valor inferior
   al número total de filas). Esto permite a la base de datos gestionar las consultas
   de otros usuarios mientras el script PHP gestiona el conjunto de filas actual.
  </para>
  <para>
   La pre-carga fue introducida en Oracle 8<emphasis>i</emphasis>.
   La pre-carga <literal>REF CURSOR</literal> fue introducida en
   Oracle 11<emphasis>g</emphasis>R2 y está disponible cuando PHP está vinculado
   con las bibliotecas clientes de Oracle 11<emphasis>g</emphasis>R2 (o superior).
   Los cursores anidados de pre-carga fueron introducidos en Oracle
   11<emphasis>g</emphasis>R2 y requieren tanto las bibliotecas clientes de Oracle,
   como una base de datos en versión 11<emphasis>g</emphasis>R2 (o superior).
  </para>
  <para>
   La pre-carga no es soportada cuando las consultas contienen columnas de tipo LONG o LOB. El valor de pre-carga será utilizado en todas las situaciones
   donde la pre-carga es soportada.
  </para>
  <para>
   Al utilizar la base de datos Oracle 12<emphasis>c</emphasis>,
   el conjunto de valores pre-cargados por PHP puede ser sobrescrito por el archivo
   de configuración cliente de Oracle <literal>oraaccess.xml</literal>.
   Consulte la documentación de Oracle para más detalles.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      &oci.arg.statement.id;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>rows</parameter></term>
     <listitem>
      <para>
       El número de filas a pre-cargar, &gt;=0
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Modificación del valor de pre-carga para una consulta</title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');

$stid = oci_parse($conn, 'SELECT * FROM myverybigtable');
oci_set_prefetch($stid, 300);  // A definir antes de la llamada a la función oci_execute()
oci_execute($stid);

echo "<table border='1'>\n";
while ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>".($item !== null ? htmlentities($item, ENT_QUOTES) : "")."</td>\n";
    }
    echo "</tr>\n";
}
echo "</table>\n";

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Modificación del valor de pre-carga para una recuperación REF CURSOR</title>
    <programlisting role="php">
<![CDATA[
<?php
/*
  Creación del procedimiento almacenado PL/SQL siguiente :

  CREATE OR REPLACE PROCEDURE myproc(p1 OUT SYS_REFCURSOR) AS
  BEGIN
    OPEN p1 FOR SELECT * FROM all_objects WHERE ROWNUM < 5000;
  END;
*/

$conn = oci_connect('hr', 'welcome', 'localhost/XE');

$stid = oci_parse($conn, 'BEGIN myproc(:rc); END;');
$refcur = oci_new_cursor($conn);
oci_bind_by_name($stid, ':rc', $refcur, -1, OCI_B_CURSOR);
oci_execute($stid);

// Modificación del valor de pre-carga antes de la ejecución del cursor.
// La pre-carga REF CURSOR funciona cuando PHP está vinculado con las bibliotecas clientes
// Oracle 11gR2 (o superior)
oci_set_prefetch($refcur, 200);
oci_execute($refcur);

echo "<table border='1'>\n";
while ($row = oci_fetch_array($refcur, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>".($item !== null ? htmlentities($item, ENT_QUOTES) : "")."</td>\n";
    }
    echo "</tr>\n";
}
echo "</table>\n";

oci_free_statement($refcur);
oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Si PHP OCI8 recupera datos desde un cursor <literal>REF CURSOR</literal>
   y luego devuelve el cursor <literal>REF CURSOR</literal> a un segundo
   procedimiento almacenado para su procesamiento, entonces es conveniente definir
   la pre-carga de <literal>REF CURSOR</literal> a <literal>0</literal>
   para evitar perder filas del conjunto de resultados. El valor de pre-carga es
   el número de filas adicionales a recuperar para cada llamada interna OCI8 a la base de datos,
   por lo tanto, definirlo a <literal>0</literal> significa simplemente que se desea
   recuperar una sola fila a la vez.
   <example>
    <title>Definición del valor de pre-carga al devolver un cursor <literal>REF CURSOR</literal> a Oracle</title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/orcl');

// Recuperación del cursor REF CURSOR
$stid = oci_parse($conn, 'BEGIN myproc(:rc_out); END;');
$refcur = oci_new_cursor($conn);
oci_bind_by_name($stid, ':rc_out', $refcur, -1, OCI_B_CURSOR);
oci_execute($stid);

// Muestra 2 filas, pero no pre-carga filas adicionales
// de lo contrario, estas filas adicionales no serán pasadas a myproc_use_rc().
oci_set_prefetch($refcur, 0);
oci_execute($refcur);
$row = oci_fetch_array($refcur);
var_dump($row);
$row = oci_fetch_array($refcur);
var_dump($row);

// pasa el cursor REF CURSOR a myproc_use_rc() para realizar otros
// procesamientos en el conjunto de resultados
$stid = oci_parse($conn, 'begin myproc_use_rc(:rc_in); end;');
oci_bind_by_name($stid, ':rc_in', $refcur, -1, OCI_B_CURSOR);
oci_execute($stid);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     la opción de configuración
     <link linkend="ini.oci8.default-prefetch">oci8.default_prefetch</link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
