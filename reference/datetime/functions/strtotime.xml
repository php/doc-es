<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 5c951013ca04161992efed8b86fb40f55669958e Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.strtotime" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtotime</refname>
  <refpurpose>Transforma un texto inglés en timestamp</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>strtotime</methodname>
   <methodparam><type>string</type><parameter>datetime</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>baseTimestamp</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   La función <function>strtotime</function> intenta leer una
   fecha en formato inglés proporcionada por el parámetro <parameter>time</parameter>,
   y transformarla en un timestamp Unix (el número de segundos desde
   el 1 de enero de 1970 a 00:00:00 UTC), relativo al timestamp
   <parameter>baseTimestamp</parameter>, o a la fecha actual si este último
   es omitido. El análisis de la cadena de fecha está definido en
   <link linkend="datetime.formats">los formatos de fecha y hora</link>
   y presenta varias consideraciones sutiles. Se recomienda encarecidamente
   examinar todos los detalles.
  </simpara>
  <warning>
   <para>
    El timestamp Unix que devuelve esta función no contiene información
    sobre los husos horarios. Para realizar cálculos con información de
    fecha/hora, es preferible utilizar
    <classname>DateTimeImmutable</classname> que es más capaz.
   </para>
  </warning>
  <para>
   Cada parámetro de la función utiliza el desplazamiento horario por defecto
   a menos que se especifique explícitamente un desplazamiento horario.
   Tenga cuidado de no utilizar un desplazamiento horario diferente para
   cada parámetro a menos que sea lo que se necesita.
   Consulte la función <function>date_default_timezone_get</function>
   para saber cómo definir un desplazamiento horario por defecto.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>datetime</parameter></term>
     <listitem>
       <para>&date.formats.parameter;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>baseTimestamp</parameter></term>
     <listitem>
      <para>
       El timestamp, que representa la fecha actual, utilizado para el cálculo
       relativo de fechas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un timestamp en caso de éxito, &false; en caso contrario.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &date.timezone.errors.description;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>baseTimestamp</parameter> ahora es nullable.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>strtotime</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo strtotime("now"), "\n";
echo strtotime("10 September 2000"), "\n";
echo strtotime("+1 day"), "\n";
echo strtotime("+1 week"), "\n";
echo strtotime("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime("next Thursday"), "\n";
echo strtotime("last Monday"), "\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Verificación de error</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'No es válido';

if (($timestamp = strtotime($str)) === false) {
   echo "La cadena ($str) está corrupta";
} else {
   echo "$str == " . date('l dS \o\f F Y h:i:s A', $timestamp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    En este caso, la fecha "relativa" significa también que si un componente
    particular del timestamp no es proporcionado, será extraído textualmente de
    <parameter>baseTimestamp</parameter>. En otras palabras,
    <code>strtotime('February')</code>, si se ejecuta el 31 de mayo de 2022, será
    interpretado como el <literal>31 de febrero de 2022</literal>, lo que
    desbordará a un timestamp el <literal>3 de marzo</literal>. (En un año bisiesto,
    sería el <literal>2 de marzo</literal>.) El uso de
    <code>strtotime('1 February')</code> o <code>strtotime('first day of February')</code>
    evitaría este problema.
   </para>
  </note>
  <note>
   <para>
    Si el número de años se especifica en dos dígitos, los valores entre
    00-69 corresponden a 2000-2069 y 70-99 a 1970-1999. Consulte las notas
    posteriores sobre las posibles diferencias entre sistemas de 32 bits (las fechas
    pueden fallar después del 19/01/2038 a 03:14:07).
   </para>
  </note>
  <note>
   <para>
    El intervalo de validez de un timestamp va del
    Viernes 13 de diciembre de 1901 20:45:54 UTC al Martes 19 de enero de 2038 03:14:07 UTC.
    (Esto corresponde a las fechas máximas y mínimas para un
    entero de 32 bits firmado).
   </para>
   <para>
    Para las versiones de 64 bits de PHP, el intervalo válido de un timestamp
    es realmente infinito, sabiendo que 64 bits puede representar aproximadamente
    293 mil millones de años en cualquier dirección.
   </para>
  </note>
  <note>
   <para>
    El uso de esta función en operaciones matemáticas no está recomendado.
    Es preferible utilizar en este caso
    <methodname>DateTime::add</methodname> y <methodname>DateTime::sub</methodname>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><classname>DateTimeImmutable</classname></member>
    <member><methodname>DateTimeImmutable::createFromFormat</methodname></member>
    <member><link linkend="datetime.formats">Los formatos sobre fechas</link></member>
    <member><function>checkdate</function></member>
    <member><function>strptime</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
