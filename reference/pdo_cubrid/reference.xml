<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3c1bec9d700807df36994cf368ba291214cd424d Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<reference xml:id="ref.pdo-cubrid" xmlns="http://docbook.org/ns/docbook"><?phpdoc extension-membership="pecl" ?>
 <title>Funciones del controlador PDO CUBRID (PDO_CUBRID)</title>
 <titleabbrev>Controlador PDO CUBRID</titleabbrev>
 <partintro>

  <section xml:id="pdo-cubrid.intro">&reftitle.intro;
  <para>
   PDO_CUBRID es un controlador que implementa la
   <link linkend="intro.pdo">interfaz PHP Data Objects (PDO)</link>
   para permitir el acceso desde PHP a las bases de datos CUBRID.
  </para>
  <note><para>
    La versión actual de PDO_CUBRID no soporta la conexión persistente en este momento.
  </para></note>
 </section>

 <!-- Informations trouvées dans configure.xml -->
 &reference.pdo-cubrid.configure;

 <section xml:id="ref.pdo-cubrid.features">
  <title>Características de PDO_CUBRID</title>

  <section>
   <title>Cursores desplazables</title>
   <simpara>
    PDO_CUBRID soporta los cursores desplazables. El tipo de cursor por omisión es
    forward only, y se puede utilizar el argumento driver_options en
    <methodname>PDO::prepare</methodname> para cambiar el tipo de cursor.
   </simpara>
  </section>

  <section>
   <title>Tiempo límite</title>
   <simpara>
    PDO_CUBRID soporta la configuración del tiempo límite de ejecución de la instrucción SQL;
    se puede utilizar <methodname>PDO::setAttribute</methodname> para definir el valor del tiempo límite.
   </simpara>
  </section>

  <section>
   <title>Modo autocommit y transacción</title>

   <simpara>
    PDO_CUBRID soporta tanto el modo autocommit como la transacción, y
    el modo autocommit está activado por omisión. Se puede utilizar
    <methodname>PDO::setAttribute</methodname> para cambiar su estado.
   </simpara>

   <simpara>
    Si se utiliza <methodname>PDO::beginTransaction</methodname> para comenzar una
    transacción, esto desactivará automáticamente el modo autocommit y
    lo restaurará después de <methodname>PDO::commit</methodname> o
    <methodname>PDO::rollBack</methodname>.
   </simpara>

   <note>
    <simpara>
     Antes de desactivar el modo autocommit,
     todo trabajo pendiente es validado automáticamente.
    </simpara>
   </note>
  </section>

  <section>
   <title>Instrucciones SQL múltiples</title>

   <simpara>
    PDO_CUBRID soporta las instrucciones SQL múltiples.
    Las instrucciones SQL múltiples están separadas por puntos y coma (<literal>;</literal>).
   </simpara>
  </section>

  <section>
   <title>Información sobre el esquema</title>

   <simpara>
    PDO_CUBRID implementa <methodname>PDO::cubrid_schema</methodname>
    para obtener información sobre el esquema.
   </simpara>
  </section>

  <section>
   <title>LOBs</title>

   <simpara>
    PDO_CUBRID soporta los tipos de datos BLOB/CLOB. El LOB en PDO es
    representado como un flujo, por lo que se pueden insertar LOBs vinculando un flujo,
    y obtener LOBs leyendo un flujo devuelto por CUBRID PDO.
    Por ejemplo:
   </simpara>

   <example>
    <title>Insertar LOBs en CUBRID PDO</title>
    <programlisting role="php">
<![CDATA[
<?php
$fp = fopen('lob_test.png', 'rb');

$sql_stmt = "INSERT INTO lob_test(name, content) VALUES('lob_test.png', ?)";

$stmt = $dbh->prepare($sql_stmt);
$ret = $stmt->bindParam(1, $fp, PDO::PARAM_LOB);
$ret = $stmt->execute();
?>
]]>
    </programlisting>
   </example>

   <example>
    <title>Recuperar LOBs en CUBRID PDO</title>
    <programlisting role="php">
<![CDATA[
<?php
$sql_stmt = "SELECT content FROM lob_test WHERE name='lob_test.png'";

$stmt = $dbh->prepare($sql_stmt);
$stmt->execute();
$result = $stmt->fetch(PDO::FETCH_NUM);

header("Content-Type: image/png");
fpassthru($result[0]);
?>
]]>
    </programlisting>
   </example>
  </section>

  <section>
   <title>Meta-columna</title>

   <para>
    El método <methodname>PDOStatement::getColumnMeta</methodname> en CUBRID PDO
    devolverá un array asociativo que contiene los siguientes valores:
    <simplelist>
     <member>type</member>
     <member>name</member>
     <member>table</member>
     <member>def</member>
     <member>precision</member>
     <member>scale</member>
     <member>not_null</member>
     <member>auto_increment</member>
     <member>unique_key</member>
     <member>multiple_key</member>
     <member>primary_key</member>
     <member>foreign_key</member>
     <member>reverse_index</member>
     <member>reverse_unique</member>
    </simplelist>
   </para>
  </section>
  <section>
   <title>Tipo de datos Collection</title>

   <simpara>
    PDO_CUBRID soporta los tipos de datos SET/MULTISET/SEQUENCE.
    Si no se especifica el tipo de datos, el tipo de datos por omisión es char.
    Por ejemplo:
   </simpara>

   <example>
    <title>Insertar un conjunto en CUBRID PDO con el tipo de datos por omisión.</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn_str ="cubrid:dbname=demodb;host=localhost;port=33000";
$cubrid_pdo = new PDO($conn_str, 'dba', '');

$cubrid_pdo->exec("DROP TABLE if exists test_tbl");
$cubrid_pdo->exec("CREATE TABLE test_tbl (col_1 SET(VARCHAR))");

$sql_stmt_insert = "INSERT INTO test_tbl VALUES (?);";
$stmt = $cubrid_pdo->prepare($sql_stmt_insert);
$data = array("abc","def","ghi");
$ret = $stmt->bindParam(1, $data, PDO::PARAM_NULL);
$ret = $stmt->execute();
var_Dump($ret);
?>
]]>
    </programlisting>
    </example>

    <example>
     <title>Especificar el tipo de datos al insertar un conjunto en CUBRID PDO</title>
     <programlisting role="php">
<![CDATA[
<?php
$conn_str ="cubrid:dbname=demodb;host=localhost;port=33000";
$cubrid_pdo = new PDO($conn_str, 'dba', '');

$cubrid_pdo->exec("DROP TABLE if exists test_tbl");
$cubrid_pdo->exec("CREATE TABLE test_tbl (col_1 SET(int))");

$sql_stmt_insert = "INSERT INTO test_tbl VALUES (?);";
$stmt = $cubrid_pdo->prepare($sql_stmt_insert);
$data = array(1,2,3,4);
$ret = $stmt->bindParam(1, $data, 0,0,"int");
$ret = $stmt->execute();
var_Dump($ret);
?>
]]>
     </programlisting>
    </example>

    <para>
     Tipos de datos CUBRID Bind para el quinto argumento de
     <methodname>PDOStatement::bindParam</methodname>:
     <simplelist>
      <member>CHAR</member>
      <member>STRING</member>
      <member>NCHAR</member>
      <member>VARNCHAR</member>
      <member>BIT</member>
      <member>VARBIT</member>
      <member>NUMERIC</member>
      <member>NUMBER</member>
      <member>INT</member>
      <member>SHORT</member>
      <member>BIGINT</member>
      <member>MONETARY</member>
      <member>FLOAT</member>
      <member>DOUBLE</member>
      <member>DATE</member>
      <member>TIME</member>
      <member>DATETIME</member>
      <member>TIMESTAMP</member>
     </simplelist>
    </para>
   </section>
  </section>

  <!-- Information found in constants.xml -->
  &reference.pdo-cubrid.constants;

 </partintro>

 <refentry xml:id="ref.pdo-cubrid.connection">
  <refnamediv>
   <refname>DSN PDO_CUBRID</refname>
   <refpurpose>Conexión a las bases de datos CUBRID</refpurpose>
  </refnamediv>

  <refsect1 role="description">
   &reftitle.description;
   <para>
    El DSN PDO_CUBRID está compuesto por los siguientes elementos, delimitados por un punto y coma:
    <variablelist>
     <varlistentry>
      <term>prefijo DSN</term>
      <listitem>
       <para>
        El prefijo DSN es <userinput>cubrid:</userinput>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>host</literal></term>
      <listitem>
       <para>
        El nombre de host donde se encuentra el servidor de base de datos.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>port</literal></term>
      <listitem>
       <para>
        El puerto en el que funciona el servidor de base de datos.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>dbname</literal></term>
      <listitem>
       <para>
        El nombre de la base de datos.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
  </refsect1>

  <refsect1 role="notes">
   &reftitle.notes;
   <note>
    <para>
     Al establecer la conexión a CUBRID, se debe proporcionar el nombre de
     usuario y la contraseña, pero no el DSN.
    </para>
   </note>
  </refsect1>

  <refsect1 role="examples">
   &reftitle.examples;
   <para>
    <example>
     <title>Ejemplos de DSN PDO_CUBRID</title>
     <para>
      El siguiente ejemplo muestra un DSN PDO_CUBRID para una conexión a una base de datos CUBRID:
      <programlisting>
<![CDATA[
cubrid:host=localhost;port=33000;dbname=demodb
]]>
      </programlisting>
     </para>
    </example>
   </para>
  </refsect1>
 </refentry>

 &reference.pdo-cubrid.entities.pdo-overloaded;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
