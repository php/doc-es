<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-send-prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_send_prepare</refname>
  <refpurpose>
   Envía una solicitud para crear una consulta preparada con los argumentos
   dados, sin esperar el final de su ejecución
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>bool</type></type><methodname>pg_send_prepare</methodname>
   <methodparam><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>statement_name</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envía una solicitud para crear una consulta preparada con los argumentos
   dados, sin esperar el final de su ejecución.
  </para>
  <para>
   Esta función es la versión asíncrona de <function>pg_prepare</function>
   : devuelve &true; si ha sido capaz de distribuir la consulta y
   &false; si no ha sido capaz. Tras una llamada exitosa, llame
   a <function>pg_get_result</function> para determinar si el servidor ha creado
   correctamente la consulta preparada.
   Los argumentos de la función son gestionados de la misma manera que
   <function>pg_execute</function>. Al igual que <function>pg_execute</function>, la
   función no funcionará en versiones anteriores a PostgreSQL 7.4.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>statement_name</parameter></term>
     <listitem>
      <para>
       El nombre a dar a la consulta preparada. Debe ser único en cada sesión. Si se especifica una cadena vacía ("") entonces se crea una consulta sin nombre, sobrescribiendo las consultas sin nombre previamente definidas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       La consulta SQL con sus argumentos. Debe contener solo una consulta. No se permiten múltiples consultas separadas por punto y coma. Si se utilizan argumentos, se refieren a $1, $2, etc.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve &true; en caso de éxito, &false; o <literal>0</literal> en caso de error.
   Utilice <function>pg_get_result</function> para determinar el resultado
   de la consulta.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo <function>pg_send_prepare</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect("dbname=publisher") or die("Conexión imposible");

  // Prepara una consulta para la ejecución
  if (!pg_connection_busy($dbconn)) {
    pg_send_prepare($dbconn, "my_query", 'SELECT * FROM magasins WHERE nom = $1');
    $res1 = pg_get_result($dbconn);
  }

  // Ejecuta la consulta preparada. Note que no es necesario escapar
  // la cadena "Joe's Widgets"
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Joe's Widgets"));
    $res2 = pg_get_result($dbconn);
  }

  // Ejecuta la misma consulta preparada, esta vez con un argumento diferente
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Vêtements Vêtements Vêtements"));
    $res3 = pg_get_result($dbconn);
  }

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_connect</function></member>
    <member><function>pg_pconnect</function></member>
    <member><function>pg_execute</function></member>
    <member><function>pg_send_execute</function></member>
    <member><function>pg_send_query_params</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
