<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-send-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_send_execute</refname>
  <refpurpose>
   Envía una consulta para ejecutar una consulta preparada con parámetros dados, sin esperar el(los) resultado(s)
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>bool</type></type><methodname>pg_send_execute</methodname>
   <methodparam><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>statement_name</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envía una consulta para ejecutar una consulta preparada con parámetros dados, sin esperar el(los) resultado(s).
  </para>
  <para>
   Esta función es similar a <function>pg_send_query_params</function>, pero el comando que se ejecutará se especifica nombrando una consulta previamente preparada, en lugar de proporcionar un string como consulta. Los parámetros de la función se gestionan de la misma manera que <function>pg_execute</function>. Al igual que <function>pg_execute</function>, la función no funcionará en versiones anteriores a PostgreSQL 7.4.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>statement_name</parameter></term>
     <listitem>
      <para>
       El nombre de la consulta preparada a ejecutar. Si se especifica un string vacío (""), entonces se ejecuta la consulta sin nombre. El nombre debe haber sido previamente preparado utilizando <function>pg_prepare</function>, <function>pg_send_prepare</function> o un comando SQL <literal>PREPARE</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Un array de valores de parámetros para sustituir las variables $1, $2, etc. en la consulta preparada original. El número de elementos presentes en el array debe coincidir con el número de variables a reemplazar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve &true; en caso de éxito, &false; o <literal>0</literal> en caso de fallo. Utilice <function>pg_get_result</function> para determinar el resultado de la consulta.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>pg_send_execute</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect("dbname=publisher") or die("Conexión imposible");

  // Prepara una consulta para la ejecución
  if (!pg_connection_busy($dbconn)) {
    pg_send_prepare($dbconn, "my_query", 'SELECT * FROM tiendas WHERE nombre = $1');
    $res1 = pg_get_result($dbconn);
  }

  // Ejecuta la consulta preparada. Observe que no es necesario escapar el string "Joe's Widgets"
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Joe's Widgets"));
    $res2 = pg_get_result($dbconn);
  }

  // Ejecuta la misma consulta preparada, esta vez con un parámetro diferente
  if (!pg_connection_busy($dbconn)) {
    pg_execute($dbconn, "my_query", array("Ropa Ropa Ropa"));
    $res3 = pg_get_result($dbconn);
  }

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_prepare</function></member>
    <member><function>pg_send_prepare</function></member>
    <member><function>pg_execute</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
