<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_execute</refname>
  <refpurpose>
   Ejecuta una consulta preparada de PostgreSQL
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>PgSql\Result</type><type>false</type></type><methodname>pg_execute</methodname>
   <methodparam choice="opt"><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envía una consulta para ejecutar una consulta preparada con los
   argumentos dados y espera el resultado.
  </para>
  <para>
   <function>pg_execute</function> es similar a <function>pg_query_params</function>,
   pero la consulta que será ejecutada se especifica nombrando una consulta
   previamente preparada, en lugar de proporcionar una cadena como consulta.
   Esta característica permite que las consultas que serán utilizadas
   repetidamente sean analizadas y planificadas una sola vez,
   en lugar de ser ejecutadas cada vez. La consulta debe haber sido
   previamente preparada en la sesión actual.
   <function>pg_execute</function> es soportada solo con las versiones
   PostgreSQL 7.4 o más recientes; la consulta fallará si se utiliza
   con versiones anteriores.
  </para>
  <para>
   Los argumentos son idénticos a la función <function>pg_query_params</function>
   excepto por el nombre de la consulta preparada que se proporciona en lugar de la
   consulta en forma de cadena.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection-with-unspecified-default;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>stmtname</parameter></term>
     <listitem>
      <para>
       El nombre de la consulta preparada a ejecutar. Si se especifica una cadena vacía (""),
       entonces se ejecuta la consulta sin nombre. El nombre debe haber sido previamente preparado
       utilizando <function>pg_prepare</function>, <function>pg_send_prepare</function>
       o una orden SQL <literal>PREPARE</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Un array de valores de argumentos para sustituir las variables $1, $2, etc.
       en la consulta preparada original. El número de elementos presentes en
       el array debe coincidir con el número de variables a reemplazar.
      </para>
      <warning>
       <para>
        Los elementos son convertidos en strings al llamar a esta función.
       </para>
      </warning>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Una instancia de <classname>PgSql\Result</classname> en caso de éxito, &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.return-result-object;
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>pg_execute</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Conexión a una base de datos llamada "marie"
$dbconn = pg_connect("dbname=marie");

// Prepara una consulta para su ejecución
$result = pg_prepare($dbconn, "my_query", 'SELECT * FROM magasins WHERE nom = $1');

// Ejecuta la consulta preparada. Observe que no es necesario escapar
// la cadena "Joe's Widgets"
$result = pg_execute($dbconn, "my_query", array("Joe's Widgets"));

// Ejecuta la misma consulta preparada, esta vez con un argumento diferente
$result = pg_execute($dbconn, "my_query", array("Vêtements Vêtements Vêtements"));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_prepare</function></member>
    <member><function>pg_send_prepare</function></member>
    <member><function>pg_query_params</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
