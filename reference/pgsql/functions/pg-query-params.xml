<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-query-params" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_query_params</refname>
  <refpurpose>
   Envía un comando al servidor y espera el resultado, con la capacidad de
   pasar parámetros por separado del texto SQL de la consulta
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>PgSql\Result</type><type>false</type></type><methodname>pg_query_params</methodname>
   <methodparam choice="opt"><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envía un comando al servidor y espera el resultado, con la capacidad de
   pasar parámetros por separado del texto SQL de la consulta.
  </para>
  <para>
   <function>pg_query_params</function> es como <function>pg_query</function>,
   pero ofrece funcionalidades adicionales: los valores de los parámetros
   pueden especificarse por separado de la línea de comando propia.
   <function>pg_query_params</function> es soportada solo con versiones
   PostgreSQL 7.4 o posteriores; el comando fallará si se utiliza
   con versiones anteriores.
  </para>
  <para>
   Si se utilizan parámetros, se refieren a $1, $2, etc. en
   <parameter>query</parameter>. El mismo parámetro puede aparecer más de una vez
   en la consulta <parameter>query</parameter>; se utilizará el mismo valor
   en ese caso. <parameter>params</parameter> especifica los
   valores actuales de los parámetros. Un valor &null; en este array
   significa que el parámetro correspondiente es SQL &null;.
  </para>
  <para>
   La principal ventaja de <function>pg_query_params</function> sobre
   <function>pg_query</function> es que los valores de los parámetros pueden
   separarse de la consulta <parameter>query</parameter>, por lo tanto,
   se evitan los escapes de caracteres tediosos y propensos a errores.
   A diferencia de <function>pg_query</function>,
   <function>pg_query_params</function> permite solo un comando
   SQL en la cadena dada. (Puede haber puntos y coma en
   el interior pero no más de un comando.)
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection-with-unspecified-default;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       La consulta SQL con sus parámetros. Debe contener solo una
       consulta. Múltiples consultas separadas por puntos y coma no están
       permitidas. Si se utilizan parámetros, se refieren a
       $1, $2, etc.
      </para>
      <para>
       Los valores proporcionados por el usuario siempre deben
       pasarse como parámetros, y no interpolados en la cadena de
       consulta, donde pueden potencialmente formar
       <link linkend="security.database.sql-injection">inyecciones SQL</link>
       e introducir errores cuando estos datos contienen comillas.
       Si por alguna razón no se pueden utilizar parámetros,
       asegúrese de que los valores interpolados estén
       <link linkend="function.pg-escape-string">correctamente escapados</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Un array de valores de parámetros para sustituir las variables $1, $2, etc.
       en la consulta preparada original. El número de elementos presentes en
       el array debe coincidir con el número de variables a reemplazar.
      </para>
      <para>
       Los valores esperados para los campos <literal>bytea</literal> no son
       soportados como parámetros. Utilice en su lugar la función
       <function>pg_escape_bytea</function> o utilice las funciones sobre los
       objetos grandes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Una instancia <classname>PgSql\Result</classname> en caso de éxito, &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.return-result-object;
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>pg_query_params</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Conexión a una base de datos llamada "marie"
$dbconn = pg_connect("dbname=marie");

// Busca todas las tiendas llamadas Joe's Widgets. Note que no es
// necesario escapar la cadena "Joe's Widgets"
$result = pg_query_params($dbconn, 'SELECT * FROM tiendas WHERE nombre = $1', array("Joe's Widgets"));

// Comparación usando pg_query
$str = pg_escape_string("Joe's Widgets");
$result = pg_query($dbconn, "SELECT * FROM tiendas WHERE nombre = '{$str}'");

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_query</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
