<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-lo-write" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_lo_write</refname>
  <refpurpose>Escribe un objeto de gran tamaño de PostgreSQL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>pg_lo_write</methodname>
   <methodparam><type>PgSql\Lob</type><parameter>lob</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_lo_write</function> escribe datos dentro de un objeto de gran tamaño en la posición actual.
  </para>
  <para>
   Para manipular un objeto de gran tamaño (<literal>lo</literal>), es necesario colocar las operaciones dentro de un bloque de transacción.
  </para>
  <note>
   <para>
    Anteriormente, esta función se llamaba <function>pg_lowrite</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>lob</parameter></term>
     <listitem>
      &pgsql.parameter.lob;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Los datos a ser escritos en el objeto de gran tamaño. Si <parameter>length</parameter> es un <type>int</type> y es inferior al tamaño de <parameter>data</parameter>, solo los primeros <parameter>length</parameter> bytes serán escritos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Un número máximo de bytes a escribir. Debe ser superior a cero y menor al tamaño de <parameter>data</parameter>. Este argumento es opcional; si se omite, tomará por defecto el tamaño de <parameter>data</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El número de bytes escritos en el objeto de gran tamaño o &false; en caso de error.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.lob-object;
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>connection</parameter> es ahora nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>pg_lo_write</function></title>
    <programlisting role="php">
<![CDATA[
<?php
   $doc_oid = 189762345;
   $data = "Esto sobrescribirá el inicio del objeto de gran tamaño.";
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $handle = pg_lo_open($database, $doc_oid, "w");
   $data = pg_lo_write($handle, $data);
   pg_query($database, "commit");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_lo_create</function></member>
    <member><function>pg_lo_open</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
