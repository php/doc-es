<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 58645a79f1993effc0571f7b49acc9aace0e417f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-unescape-bytea" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_unescape_bytea</refname>
  <refpurpose>
   Elimina la protección de una cadena de tipo bytea
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>pg_unescape_bytea</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_unescape_bytea</function> elimina la protección de los
   caracteres de tipo bytea. Devuelve el &string; protegido, que puede
   contener datos binarios.
  </para>
  <note>
   <para>
    Al utilizar una sentencia <literal>SELECT</literal>
    con datos de tipo bytea, PostgreSQL devuelve valores
    octales, precedidos por barras invertidas \ (p. ej. \032). Los usuarios
    deben realizar la conversión al formato binario por sí mismos.
   </para>
   <para>
    <function>pg_escape_bytea</function> requiere PostgreSQL 7.2 o posterior. Con
    PostgreSQL 7.2.0 y 7.2.1, los datos de tipo bytea deben ser convertidos
    cuando se activa el soporte para cadenas de caracteres multioctetos.
    i.e. <literal>INSERT INTO test_table (image) VALUES ('$image_escaped'::bytea);</literal>.
    PostgreSQL 7.2.2 o posterior no requiere esta manipulación.
    Sin embargo, si el cliente y el servidor no utilizan el mismo juego de caracteres,
    pueden producirse errores. En ese caso, es necesario forzar la conversión
    manualmente para evitar este error.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Un &string; que contiene los datos bytea de PostgreSQL a ser convertidos
       en &string; binario de PHP.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un &string; que contiene los datos protegidos.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>pg_unescape_bytea</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  // Conexión a la base de datos
  $dbconn = pg_connect('dbname=foo');

  // Recuperación de los datos bytea
  $res = pg_query("SELECT data FROM galeria WHERE nombre='Arboles Pino'");
  $raw = pg_fetch_result($res, 'data');

  // Convierte a binario y envía al navegador
  header('Content-type: image/jpeg');
  echo pg_unescape_bytea($raw);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_escape_bytea</function></member>
    <member><function>pg_escape_string</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
