<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-update" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_update</refname>
  <refpurpose>
   Modifica las líneas de una tabla
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>bool</type></type><methodname>pg_update</methodname>
   <methodparam><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>table_name</parameter></methodparam>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
   <methodparam><type>array</type><parameter>conditions</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>PGSQL_DML_EXEC</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_update</function> modifica las líneas de la tabla
   <parameter>table_name</parameter>, que cumplen la condición
   <parameter>conditions</parameter> con <parameter>values</parameter>.
  </para>
  <para>
   Si <parameter>flags</parameter> está especificado,
   <function>pg_convert</function> se aplica a
   <parameter>values</parameter> con los flags proporcionados.
  </para>
  <para>
   Por omisión <function>pg_update</function> pasa valores sin tratar.
   Los valores deben ser escapados o el flag <constant>PGSQL_DML_ESCAPE</constant>
   debe ser especificado en <parameter>flags</parameter>.
   <constant>PGSQL_DML_ESCAPE</constant> añade comillas y escapa los argumentos/identificadores.
   Por lo tanto, los nombres de tabla/columnas se vuelven sensibles a mayúsculas/minúsculas.
  </para>
  <para>
   Tenga en cuenta que ni el escape ni las consultas preparadas pueden proteger de
   consultas LIKE, JSON, arrays, Regex, etc. Estos argumentos deben ser
   tratados según su contexto. Es decir, escapar/validar los valores.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>table_name</parameter></term>
     <listitem>
      <para>
       El nombre de la tabla en la que las líneas serán actualizadas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       Un &array; cuyos claves son los nombres de los campos en la tabla
       <parameter>table_name</parameter>, y donde los valores
       son las líneas correspondientes que serán actualizadas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>conditions</parameter></term>
     <listitem>
      <para>
       Un &array; cuyos claves son los nombres de los campos en la tabla
       <parameter>table_name</parameter>, y donde los valores son
       las condiciones que deben cumplir las líneas para ser actualizadas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Cualquier combinación de constantes entre
       <constant>PGSQL_CONV_FORCE_NULL</constant>,
       <constant>PGSQL_DML_NO_CONV</constant>,
       <constant>PGSQL_DML_ESCAPE</constant>,
       <constant>PGSQL_DML_EXEC</constant>,
       <constant>PGSQL_DML_ASYNC</constant> o
       <constant>PGSQL_DML_STRING</constant>.
       Si <constant>PGSQL_DML_STRING</constant> forma parte del argumento
       <parameter>flags</parameter>, entonces la consulta será devuelta.
       Cuando la constante <constant>PGSQL_DML_NO_CONV</constant> o la constante
       <constant>PGSQL_DML_ESCAPE</constant> está definida, no se realizará ninguna llamada a la función
       <function>pg_convert</function> internamente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;  Devuelve una &string; si <constant>PGSQL_DML_STRING</constant> es pasado
   a través del argumento <parameter>flags</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>pg_update</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  $db = pg_connect ('dbname=foo');
  $data = array('field1'=>'AA', 'field2'=>'BB');

  // Esto es seguro en cierta medida, ya que todos los valores son escapados
  // Sin embargo PostgreSSQL soporta JSON/arrays. Estos no
  // son seguros ni por escape ni por consultas preparadas.
  $res = pg_update($db, 'post_log', $_POST, $data);
  if ($res) {
      echo "Los datos han sido modificados: $res\n";
  } else {
      echo "Problema en los datos del usuario\n";
  }
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_convert</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
