<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 70ef72d94f4d5c7d7ec7492e97563d2463d56d14 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<section xml:id="ref.pdo-mysql.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.install;
 <para>
  Las distribuciones Linux incluyen versiones binarias de PHP que pueden
  ser instaladas. Incluso si estos binarios son construidos con las extensiones
  MySQL, las bibliotecas clientes deben ser a menudo instaladas mediante un paquete adicional. Verifique si es el caso para su distribución.
 </para>

 <para>
  Por ejemplo, en Ubuntu el paquete <literal>php5-mysql</literal> instala las
  extensiones PHP ext/mysql, ext/mysqli, y pdo_mysql. En CentOS, el paquete
  <literal>php-mysql</literal> también instala estas tres extensiones PHP.
 </para>

 <para>
  Alternativamente, puede compilar esta extensión usted mismo. Construir
  PHP desde las fuentes permite especificar las extensiones MySQL a incluir,
  así como las bibliotecas clientes de cada extensión.
 </para>

 <para>
  Durante la compilación utilice <option role="configure">--with-pdo-mysql[=DIR]</option>
  para instalar la extensión PDO MySQL, donde <literal>[=DIR]</literal> es la ruta
  de la biblioteca base de MySQL.
  <link linkend="book.mysqlnd">Mysqlnd</link> y la biblioteca por defecto.
  Para más detalles sobre la elección de la biblioteca, ver
  <link linkend="mysqlinfo.library.choosing">Elegir una biblioteca MySQL</link>.
 </para>
 <para>
  Opcionalmente, la opción <option role="configure">--with-mysql-sock[=DIR]</option>
  define la ruta hacia el socket Unix MySQL para todas las extensiones
  MySQL, incluyendo PDO_MYSQL. Si no se especifica, se utilizarán las rutas por defecto.
 </para>
 <para>
  Opcionalmente, la opción <option role="configure">--with-zlib-dir[=DIR]</option>
  será utilizada para definir el prefijo de instalación zlib.
 </para>
 <para>
  <screen>
<![CDATA[
$ ./configure --with-pdo-mysql --with-mysql-sock=/var/mysql/mysql.sock
]]>
  </screen>
 </para>
 <para>
  El soporte <acronym>SSL</acronym> es activado utilizando las constantes
  <constant>Pdo\Mysql::ATTR_SSL_<replaceable>*</replaceable></constant>,
  lo cual equivale a llamar a la función API C
  <link xlink:href="&url.mysql.docs.ssl.set;">mysql_ssl_set()</link>.
  Además, SSL no puede ser activado con <methodname>PDO::setAttribute</methodname>
  ya que la conexión ya existe.
  Ver también la documentación MySQL sobre
  <link xlink:href="&url.mysql.docs.ssl.using;">la conexión a MySQL con SSL</link>.
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
