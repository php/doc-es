<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 62126c55f1c6ed444043e7272c4f9e233818a44b Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.substr">
 <refnamediv>
  <refname>substr</refname>
  <refpurpose>Devuelve parte de una cadena</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>substr</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve una parte del <parameter>string</parameter> definida por los
   parámetros <parameter>offset</parameter> y <parameter>length</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters"> 
  &reftitle.parameters; 
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para> 
       La cadena de entrada. Debe ser de almenos de un caracter.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para> 
       Si <parameter>offset</parameter> no es negativo, la cadena devuelta
       comenzará en el <parameter>offset</parameter> de la posición del
       <parameter>string</parameter> empezando desde cero. Por ejemplo,
       en la cadena '<literal>abcdef</literal>', el carácter en la posición
       <literal>0</literal> es '<literal>a</literal>', el carácter en la
       posición <literal>2</literal> es 
       '<literal>c</literal>', y así sucesivamente. 
      </para>
      <para> 
       Si <parameter>offset</parameter> es negativo, la cadena devuelta
       empezará en <parameter>offset</parameter> contando desde el final de
       <parameter>string</parameter>. 
      </para>
      <para> 
       Si la longitud del <parameter>string</parameter> es menor que
       <parameter>offset</parameter>, la función devolverá &false;. 
      </para>
      <para>
       <example>
        <title>Usando un <parameter>offset</parameter> negativo</title>
        <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", -1);    // devuelve "f"
$rest = substr("abcdef", -2);    // devuelve "ef"
$rest = substr("abcdef", -3, 1); // devuelve "d"
?>
]]>
        </programlisting>
       </example>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Si se especifica el <parameter>length</parameter> y es positivo, la
       cadena devuelta contendrá como máximo de caracteres de la cantidad dada
       por <parameter>length</parameter> que comienza en <parameter>start</parameter> (dependiedo de la longitud del
       <parameter>string</parameter>).
      </para>
      <para>
       Si se especifica <parameter>length</parameter> es negativo, entonces ese número de caracteres 
       se omiten al final del <parameter>string</parameter> 
       (después de la posición inicial se ha calculado a <parameter>start</parameter> es negativo). Si
       <parameter>start</parameter> indica la posición de su truncamiento
       o más allá, se devolverá &false;.
      </para>
      <para>
       Si se omite el <parameter>length</parameter>, la subcadena empezará por
       <parameter>start</parameter> hasta el final de la cadena donde será
       devuelta.
      </para>      
      <para>
       Si se especifica <parameter>length</parameter> y es <literal>0</literal>, 
       &false; o &null; devolverá una cadena vacía.
      </para>
      <example>
       <title>Usando un <parameter>length</parameter> negativo</title>
       <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", 0, -1);  // devuelve "abcde"
$rest = substr("abcdef", 2, -1);  // devuelve "cde"
$rest = substr("abcdef", 4, -4);  // devuelve false
$rest = substr("abcdef", -3, -1); // devuelve "de"
?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues"> 
  &reftitle.returnvalues; 
  <para>
   Devuelve la parte extraída de <parameter>string</parameter>; o un
   <parameter>string</parameter> vacío.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>length</parameter> es ahora anulable.
        Cuando <parameter>length</parameter> se establece explícitamente en &null;,
        la función devuelve una subcadena que termina al final de la cadena, mientras que anteriormente devolvía una cadena vacía.
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        La función devuelve una cadena vacía donde anteriormente devolvía &false;.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples"> 
  &reftitle.examples;
  <para>
   <example>
    <title>Uso básico de <function>substr</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo substr('abcdef', 1);     // bcdef
echo substr("abcdef", 1, null); // bcdef; Antes de PHP 8.0.0, se devolvía una cadena vacía.
echo substr('abcdef', 1, 3);  // bcd
echo substr('abcdef', 0, 4);  // abcd
echo substr('abcdef', 0, 8);  // abcdef
echo substr('abcdef', -1, 1); // f

// El acceso a caracteres específicos en una cadena 
// se puede conseguir usando "corchetes"
$string = 'abcdef';
echo $string[0];                 // a
echo $string[3];                 // d
echo $string[strlen($string)-1]; // f

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Comportamiento de casting de <function>substr</function></title>
    <programlisting role="php">
<![CDATA[
<?php
class apple {
    public function __toString() {
        return "green";
    }
}

echo "1) ".var_export(substr("pear", 0, 2), true).PHP_EOL;
echo "2) ".var_export(substr(54321, 0, 2), true).PHP_EOL;
echo "3) ".var_export(substr(new apple(), 0, 2), true).PHP_EOL;
echo "4) ".var_export(substr(true, 0, 1), true).PHP_EOL;
echo "5) ".var_export(substr(false, 0, 1), true).PHP_EOL;
echo "6) ".var_export(substr("", 0, 1), true).PHP_EOL;
echo "7) ".var_export(substr(1.2e3, 0, 4), true).PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
1) 'pe'
2) '54'
3) 'gr'
4) '1'
5) ''
6) ''
7) '1200'
]]>
    </screen>
   </example>
  <example>
   <title>Rango de caracteres inválido</title>
   <para>
    Si se solicita un rango de caracteres inválido, <function>substr</function> devuelve
    una cadena vacía a partir de PHP 8.0.0; anteriormente, se devolvía &false; en su lugar.
    </para>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(substr('a', 2));
?>
]]>
   </programlisting>
   &example.outputs.8;
   <screen>
<![CDATA[
string(0) ""
]]>
   </screen>
   &example.outputs.7;
   <screen>
<![CDATA[
bool(false)
]]>
   </screen>
  </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strrchr</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_match</function></member>
    <member><function>trim</function></member>
    <member><function>mb_substr</function></member>
    <member><function>wordwrap</function></member>
    <member><link linkend="language.types.string.substr">Acceso a cadenas y modificación por caracter</link></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
