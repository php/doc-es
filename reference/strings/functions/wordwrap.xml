<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: a6ee935b0e0416084509e2c82ecea0578c7f40cc Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.wordwrap" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>wordwrap</refname>
  <refpurpose>Realiza el ajuste de línea de un string</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>wordwrap</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>width</parameter><initializer>75</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>break</parameter><initializer>"\n"</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>cut_long_words</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Realiza el ajuste de línea de un string.
   Los strings se cortan después de un carácter de espacio (U+0020) a menos que <parameter>cut_long_words</parameter>
   esté definido como &true;.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       El string de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>width</parameter></term>
     <listitem>
      <para>
       El número de caracteres a partir del cual el string será cortado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>break</parameter></term>
     <listitem>
      <para>
       La línea se rompe utilizando <parameter>break</parameter>, este parámetro opcional.
       No debe ser un string vacío.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cut_long_words</parameter></term>
     <listitem>
      <para>
       Si el parámetro <parameter>cut_long_words</parameter> vale &true;, el ajuste de línea del
       string se realizará siempre al tamaño <parameter>width</parameter> o antes.
       Si se tiene una palabra que es más larga que el tamaño de ajuste, será
       cortada en trozos: ver el segundo ejemplo. Cuando vale &false;,
       la función no cortará la palabra, incluso si el parámetro
       <parameter>width</parameter> es más pequeño que el tamaño de la palabra.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el string proporcionado cortado a la longitud especificada.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simpara>
   Si <parameter>break</parameter> es un string vacío, se lanza una <classname>ValueError</classname>.
  </simpara>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Si <parameter>break</parameter> es un string vacío,
       se lanza una <classname>ValueError</classname>;
       anteriormente, en este caso, se emitía un <constant>E_WARNING</constant> y se devolvía &false;.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>wordwrap</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$text = "Portez ce vieux whisky au juge blond qui fume.";
$newtext = wordwrap($text, 20, "<br />\n");

echo $newtext;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Portez ce vieux<br />
whisky au juge<br />
blond qui fume.
]]>
    </screen>
   </example>
   <example>
    <title>Ejemplo con <function>wordwrap</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$text = "Un mot très très loooooooooooooooooong.";
$newtext = wordwrap($text, 8, "\n", true);

echo "$newtext\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Un mot
très
très
looooooo
oooooooo
ooong.
]]>
    </screen>
   </example>
   <example>
    <title>Ejemplo con <function>wordwrap</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$text = "A very long woooooooooooooooooord. and something";
$newtext = wordwrap($text, 8, "\n", false);

echo "$newtext\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
A very
long
woooooooooooooooooord.
and
something
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>nl2br</function></member>
    <member><function>chunk_split</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
