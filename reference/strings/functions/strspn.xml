<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 422bb032237525aaf50e6a43f33362a2c610a1d7 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.strspn" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strspn</refname>
  <refpurpose>
   Encuentra la longitud del segmento inicial de un string que contiene
   todos los caracteres de una máscara dada
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strspn</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>characters</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Encuentra la longitud del segmento inicial de <parameter>string</parameter>
   que contiene <emphasis>únicamente</emphasis> los caracteres
   desde la máscara <parameter>characters</parameter>.
  </para>
  <para>
   Si los parámetros <parameter>offset</parameter> y <parameter>length</parameter>
   son omitidos, entonces todo el string <parameter>string</parameter> será
   analizado. Si son proporcionados, entonces los efectos serán idénticos a llamar
   <literal>strspn(substr($string, $offset, $length), $characters)</literal>
   (ver <xref linkend="function.substr" /> para más información).
  </para>
  <para>
   El código siguiente:
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$var = strspn("42 es la respuesta, pero ¿cuál es la pregunta?", "1234567890");
?>
]]>
    </programlisting>
   </informalexample>
   asigna <literal>2</literal> a la variable <varname>$var</varname>,
   ya que el string "42" es el segmento inicial del parámetro
   <parameter>string</parameter> cuyos caracteres están contenidos en
   "1234567890".
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       El string a analizar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>characters</parameter></term>
     <listitem>
      <para>
       La lista de caracteres autorizados.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       La posición en el string <parameter>string</parameter> a
       partir de la cual se debe buscar.
      </para>
      <para>
       Si <parameter>offset</parameter> es proporcionado y no es negativo,
       entonces <function>strspn</function> comenzará a analizar el string
       <parameter>string</parameter> en la posición <parameter>offset</parameter>.
       Por ejemplo, en el string '<literal>abcdef</literal>', el carácter
       en la posición <literal>0</literal> es '<literal>a</literal>', el carácter
       en la posición <literal>2</literal> es '<literal>c</literal>', y así
       sucesivamente.
      </para>
      <para>
       Si <parameter>offset</parameter> es proporcionado y es negativo,
       entonces <function>strspn</function> comenzará a analizar el string
       <parameter>string</parameter> en la posición <parameter>offset</parameter>
       desde el final del string <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       La longitud del string a analizar.
      </para>
      <para>
       Si <parameter>length</parameter> es proporcionado y no es negativo,
       entonces <parameter>string</parameter> será examinado sobre
       <parameter>length</parameter> caracteres después de la posición de inicio.
      </para>
      <para>
       Si <parameter>length</parameter> es proporcionado y es negativo,
       entonces <parameter>string</parameter> será examinado sobre
       <parameter>length</parameter> caracteres desde el final
       del string <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna el tamaño del segmento inicial del string
   <parameter>string</parameter> que está enteramente
   constituido de caracteres contenidos en <parameter>characters</parameter>.
  </para>
  <note>
   <para>
    Cuando el parámetro <parameter>offset</parameter> está definido, la longitud
    retornada es contada a partir de esta posición, y no desde el inicio
    del parámetro <parameter>string</parameter>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>length</parameter> es ahora nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>strspn</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// El sujeto no comienza con uno de los caracteres desde la máscara
var_dump(strspn("foo", "o"));

// Examina 2 caracteres desde el inicio del sujeto, en la posición 1
var_dump(strspn("foo", "o", 1, 2));

// Examina un carácter desde el inicio del sujeto, en la posición 1
var_dump(strspn("foo", "o", 1, 1));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(0)
int(2)
int(1)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strcspn</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
