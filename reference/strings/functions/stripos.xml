<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4b72b23513caa3a8bc520d459a0417defc7b3880 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no Maintainer: Marqitos -->
<refentry xml:id="function.stripos" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stripos</refname>
  <refpurpose>Busca la posición de la primera ocurrencia en un string, sin distinguir mayúsculas de minúsculas</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>stripos</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>string</type><parameter>needle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Busca la posición numérica de la primera ocurrencia de
   <parameter>needle</parameter> en el string <parameter>haystack</parameter>.
  </para>
  <para>
   A diferencia de la función <function>strpos</function>,
   <function>stripos</function> no distingue entre mayúsculas y minúsculas.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       El string en el que se realiza la búsqueda.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
       El string a buscar.
      </para>
      &strings.parameter.needle.non-string;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Si se especifica, la búsqueda comenzará a partir de este número
       de caracteres, contados desde el inicio del string. Si la posición
       es negativa, la búsqueda comenzará utilizando este número de caracteres
       pero comenzando desde el final del string.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la posición de la primera ocurrencia en el string
   en relación con el inicio del string <parameter>haystack</parameter>
   (independientemente del offset). Asimismo, se debe tener en cuenta que la posición
   en el string comienza en 0, y no en 1.
  </para>
  <para>
   Devuelve &false; si la ocurrencia no ha sido encontrada.
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <itemizedlist>
   <listitem>
    <simpara>
     Si <parameter>offset</parameter> es mayor que la longitud de
     <parameter>haystack</parameter>, se lanzará un
     <classname>ValueError</classname>.
    </simpara>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &strings.changelog.ascii-case-folding;
     &strings.changelog.needle-empty;
     <row>
      <entry>8.0.0</entry>
      <entry>
       Pasar un &integer; como <parameter>needle</parameter> ya no está soportado.
      </entry>
     </row>
     <row>
      <entry>7.3.0</entry>
      <entry>
       Pasar un &integer; como <parameter>before_needle</parameter> ha sido
       declarado obsoleto.
      </entry>
     </row>
     <row>
      <entry>7.1.0</entry>
      <entry>
       Se ha añadido soporte para números negativos en el parámetro <parameter>offset</parameter>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
   <title>Ejemplo con <function>stripos</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$findme    = 'a';
$mystring1 = 'xyz';
$mystring2 = 'ABC';

$pos1 = stripos($mystring1, $findme);
$pos2 = stripos($mystring2, $findme);

// No, 'a' no forma parte de 'xyz'
if ($pos1 === false) {
    echo "El string '$findme' no ha sido encontrado en el string '$mystring1'", PHP_EOL;
}

// Observe el uso de !==. Un simple != no daría el resultado esperado
// ya que la letra 'a' está en la posición 0 (la primera).
if ($pos2 !== false) {
    echo "El string '$findme' ha sido encontrado en el string '$mystring2'", PHP_EOL;
    echo " en la posición $pos2";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mb_stripos</function></member>
    <member><function>str_contains</function></member>
    <member><function>str_ends_with</function></member>
    <member><function>str_starts_with</function></member>
    <member><function>strpos</function></member>
    <member><function>strrpos</function></member>
    <member><function>strripos</function></member>
    <member><function>stristr</function></member>
    <member><function>substr</function></member>
    <member><function>str_ireplace</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
