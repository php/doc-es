<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 873f4a3d5027bd1b584f1d1e590e22cd4a08ae84 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.levenshtein" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>levenshtein</refname>
  <refpurpose>Calcula la distancia Levenshtein entre dos strings</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>levenshtein</methodname>
   <methodparam><type>string</type><parameter>string1</parameter></methodparam>
   <methodparam><type>string</type><parameter>string2</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>insertion_cost</parameter><initializer>1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>replacement_cost</parameter><initializer>1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>deletion_cost</parameter><initializer>1</initializer></methodparam>
  </methodsynopsis>
  <para>
   La distancia Levenshtein se define como el número
   mínimo de caracteres que deben ser reemplazados, insertados o eliminados
   para transformar el string <parameter>string1</parameter> en
   <parameter>string2</parameter>. La complejidad del algoritmo
   es de <literal>O(m*n)</literal>,
   donde <literal>n</literal> y <literal>m</literal> son los tamaños
   respectivos de <parameter>string1</parameter> y
   <parameter>string2</parameter>: es bastante buena, en comparación
   con <function>similar_text</function>, que es de
   <literal>O(max(n,m)**3)</literal>, pero sigue siendo muy costosa.
  </para>
  <para>
   Si <parameter>insertion_cost</parameter>, <parameter>replacement_cost</parameter>
   y/o <parameter>deletion_cost</parameter> son diferentes de <literal>1</literal>,
   el algoritmo se adapta para elegir la transformación menos costosa.
   Por ejemplo, si <code>$insertion_cost + $deletion_cost &lt; $replacement_cost</code>,
   no se realizará ningún reemplazo, sino inserciones y eliminaciones.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string1</parameter></term>
     <listitem>
      <para>
       Uno de los strings a evaluar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string2</parameter></term>
     <listitem>
      <para>
       Uno de los strings a evaluar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>insertion_cost</parameter></term>
     <listitem>
      <para>
       Define el costo de la inserción.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacement_cost</parameter></term>
     <listitem>
      <para>
       Define el costo del reemplazo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>deletion_cost</parameter></term>
     <listitem>
      <para>
       Define el costo de la eliminación.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Esta función devuelve la distancia Levenshtein entre dos strings.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Antes de esta versión, <function>levenshtein</function> debía ser llamada
       con dos o cinco argumentos.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Antes de esta versión, <function>levenshtein</function> devolvía <literal>-1</literal>
       si alguno de los strings de los argumentos superaba los 255 caracteres.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>levenshtein</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// palabra mal escrita
$input = 'carrrot';

// array de palabras a verificar
$words  = array('apple','pineapple','banana','orange',
                'radish','carrot','pea','bean','potato');

// ninguna distancia encontrada por el momento
$shortest = -1;

// bucle sobre las palabras para encontrar la más cercana
foreach ($words as $word) {

    // calcula la distancia con la palabra ingresada,
    // y la palabra actual
    $lev = levenshtein($input, $word);

    // busca una coincidencia exacta
    if ($lev == 0) {

        // la palabra más cercana es esta (coincidencia exacta)
        $closest = $word;
        $shortest = 0;

        // se sale del bucle; se ha encontrado una coincidencia exacta
        break;
    }

    // Si la distancia es más pequeña que la siguiente distancia encontrada
    // O, si la siguiente palabra más cercana aún no ha sido encontrada
    if ($lev <= $shortest || $shortest < 0) {
        // definición de la palabra más cercana y la distancia
        $closest  = $word;
        $shortest = $lev;
    }
}

echo "Palabra ingresada: $input\n";
if ($shortest == 0) {
    echo "Coincidencia exacta encontrada: $closest\n";
} else {
    echo "¿Quiso decir: $closest?\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Palabra ingresada: carrrot
¿Quiso decir: carrot?
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>soundex</function></member>
    <member><function>similar_text</function></member>
    <member><function>metaphone</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
