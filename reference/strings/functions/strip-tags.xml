<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8cdc6621f9826d04abc3e50438c010804d7e8683 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.strip-tags" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strip_tags</refname>
  <refpurpose>Elimina las etiquetas HTML y PHP de un string</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>strip_tags</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>string</type><type>null</type></type><parameter>allowed_tags</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>strip_tags</function> intenta devolver el string <parameter>string</parameter>
   después de eliminar todos los bytes nulos, todas las etiquetas PHP y HTML del código.
   Genera alertas si las etiquetas están incompletas o son erróneas. Utiliza
   el mismo motor de búsqueda que <function>fgetss</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       El string de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>allowed_tags</parameter></term>
     <listitem>
      <para>
       Puede utilizarse este argumento opcional para especificar las etiquetas
       que no deben ser eliminadas.
       Pueden ser proporcionadas como &string; o, a partir de PHP 7.4.0, como
       &array;. Consúltese los ejemplos a continuación para el formato de
       este argumento.
      </para>
      <note>
       <para>
        Los comentarios HTML y PHP también son eliminados. Este comportamiento
        no puede ser modificado con el argumento <parameter>allowed_tags</parameter>.
       </para>
      </note>
      <note>
       <para>
        Las etiquetas XHTML auto-cerradas son ignoradas y solo las etiquetas que
        no son auto-cerradas deben ser utilizadas en el string
        <parameter>allowed_tags</parameter>. Por ejemplo, para permitir tanto
        <literal>&lt;br&gt;</literal> como <literal>&lt;br/&gt;</literal>, se debe utilizar:
       </para>
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
strip_tags($input, '<br>');
?>
]]>
        </programlisting>
       </informalexample>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el string escapado.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>allowed_tags</parameter> ahora puede ser nullable.
       </entry>
      </row>
      <row>
       <entry>7.4.0</entry>
       <entry>
        <parameter>allowed_tags</parameter> ahora acepta un &array;.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>strip_tags</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$text = '<p>Test paragraph.</p><!-- Comment --> <a href="#fragment">Other text</a>';
echo strip_tags($text);
echo "\n";

// Permite <p> y <a>
echo strip_tags($text, '<p><a>');

// a partir de PHP 7.4.0 la línea anterior puede ser escrita como:
// echo strip_tags($text, ['p', 'a']);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Test paragraph. Other text
<p>Test paragraph.</p> <a href="#fragment">Other text</a>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Esta función no debería ser utilizada para prevenir ataques XSS.
    Utilizar funciones más apropiadas como <function>htmlspecialchars</function>
    u otros métodos según el contexto de la salida.
   </para>
  </warning>
  <warning>
   <para>
    Como <function>strip_tags</function> no valida el HTML,
    las etiquetas parciales o rotas pueden conducir a la eliminación de
    más texto/datos de lo deseado.
   </para>
  </warning>
  <warning>
   <para>
    <function>strip_tags</function> no modifica los atributos de las
    etiquetas que se autorizan mediante el argumento <parameter>allowed_tags</parameter>,
    incluyendo los atributos <literal>style</literal> y <literal>onmouseover</literal>, que usuarios malintencionados
    pueden utilizar.
   </para>
  </warning>
  <note>
   <para>
    Los nombres de las etiquetas en el HTML de entrada que son superiores a 1023 bytes
    de longitud serán tratados como inválidos, según el argumento
    <parameter>allowed_tags</parameter>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>htmlspecialchars</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
