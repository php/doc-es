<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.substr-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>substr_replace</refname>
  <refpurpose>Reemplaza un segmento en un string</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type></type><methodname>substr_replace</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>string</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>replace</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>int</type></type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>substr_replace</function> reemplaza un segmento del string
   <parameter>string</parameter> por el string <parameter>replace</parameter>.
   El segmento está delimitado por <parameter>offset</parameter> y eventualmente
   por <parameter>length</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       El string de entrada.
      </para>
      <para>
       Puede proporcionarse un array de strings, y en este caso,
       los reemplazos se realizarán en cada uno de los strings. En esta situación,
       los parámetros <parameter>replace</parameter>, <parameter>offset</parameter>
       y <parameter>length</parameter> deben proporcionarse ya sea como valores escalares
       a aplicar a cada string, o como arrays donde el elemento
       correspondiente del array será utilizado para cada string de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
       El string de reemplazo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Si <parameter>offset</parameter> no es negativo, el reemplazo
       se realizará a partir del carácter número <parameter>offset</parameter>
       en <parameter>string</parameter>.
      </para>
      <para>
       Si <parameter>offset</parameter> es negativo, el reemplazo
       se realizará a partir del <parameter>offset</parameter>-ésimo carácter
       contando desde el final del string <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Si <parameter>length</parameter> es proporcionado y positivo, representará
       la longitud del segmento de código reemplazado en el
       string <parameter>string</parameter>. Si es negativo, representará
       el número de caracteres desde el final del string
       <parameter>string</parameter> donde detener el reemplazo. Si es omitido,
       tomará el valor por omisión del tamaño
       del string, y reemplazará todo hasta el final del string
       <parameter>string</parameter>. Por supuesto, si
       <parameter>length</parameter> vale 0, entonces, esta función
       tendrá como efecto insertar <parameter>replace</parameter> en
       <parameter>string</parameter> en la posición
       <parameter>offset</parameter> dada.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El string resultante es retornado. Si el parámetro
   <parameter>string</parameter> es un array, entonces un
   array será retornado.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>length</parameter> ahora es nullable.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>substr_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$var = 'ABCDEFGH:/MNRPQR/';
echo "Original : $var<hr />\n";

// Reemplaza todo el string $var por 'bob'.
echo substr_replace($var, 'bob', 0) . "<br />\n";
echo substr_replace($var, 'bob', 0, strlen($var)) . "<br />\n";

// Inserta 'bob' al inicio del string
echo substr_replace($var, 'bob', 0, 0) . "<br />\n";

// Reemplaza la secuencia 'MNRPQR' por 'bob'.
echo substr_replace($var, 'bob', 10, -1) . "<br />\n";
echo substr_replace($var, 'bob', -7, -1) . "<br />\n";

// Borra la secuencia 'MNRPQR' de $var.
echo substr_replace($var, '', 10, -1) . "<br />\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     Uso de <function>substr_replace</function> para reemplazar múltiples
     strings de una sola vez
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array('A: XXX', 'B: XXX', 'C: XXX');

// Un caso simple: reemplazar XXX en cada string por YYY.
echo implode('; ', substr_replace($input, 'YYY', 3, 3))."\n";

// Un caso más complejo donde cada reemplazo es diferente.
$replace = array('AAA', 'BBB', 'CCC');
echo implode('; ', substr_replace($input, $replace, 3, 3))."\n";

// Reemplaza un número diferente de caracteres cada vez.
$length = array(1, 2, 3);
echo implode('; ', substr_replace($input, $replace, 3, $length))."\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
A: YYY; B: YYY; C: YYY
A: AAA; B: BBB; C: CCC
A: AAAXX; B: BBBX; C: CCC
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>substr</function></member>
    <member><link linkend="language.types.string.substr">Acceso y modificación de un string, por carácter</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
