<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 45042fef652f1b4e904e809fcbfcf31f6c60670b Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.str-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>str_replace</refname>
  <refpurpose>Reemplaza todas las ocurrencias en una string</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type></type><methodname>str_replace</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>search</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>replace</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>str_replace</function> devuelve una string o un array,
   donde todas las ocurrencias de <parameter>search</parameter> en
   <parameter>subject</parameter> han sido reemplazadas por
   <parameter>replace</parameter>.
  </para>
  <para>
   Para reemplazar un texto en función de un patrón en lugar de una string fija,
   utilice <function>preg_replace</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Si los argumentos <parameter>search</parameter> y <parameter>replace</parameter>
   son arrays, entonces la función <function>str_replace</function>
   tomará un valor de cada array y los utilizará para la búsqueda y
   el reemplazo en <parameter>subject</parameter>. Si el argumento
   <parameter>replace</parameter> tiene menos valores que el argumento
   <parameter>search</parameter>, entonces una string vacía será utilizada
   como valor para el resto de los valores de reemplazo. Si el argumento
   <parameter>search</parameter> es un array y el argumento
   <parameter>replace</parameter> es una string, entonces esta string
   de reemplazo será utilizada para cada valor de <parameter>search</parameter>.
   Lo inverso no tiene sentido.
  </para>
  <para>
   Si <parameter>search</parameter> o <parameter>replace</parameter>
   son arrays, los elementos son procesados del primero al último.
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>search</parameter></term>
     <listitem>
      <para>
       El valor a buscar, también conocido como <emphasis>patrón</emphasis>.
       Un array puede ser utilizado para designar múltiples patrones.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
       El valor de reemplazo a sustituir por los valores encontrados.
       Un array puede ser utilizado para designar múltiples valores
       de reemplazo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       La string o el array sobre el cual se realizará la
       búsqueda y el reemplazo, también conocido como
       <emphasis>pajar</emphasis>.
      </para>
      <para>
       Si <parameter>subject</parameter> es un array, entonces el
       reemplazo se realizará en cada elemento del mismo, y
       el valor devuelto será también un array.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <para>
       Si se proporciona, esta variable contendrá el número de reemplazos realizados.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Esta función devuelve una string, o un array, conteniendo los valores
   reemplazados.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo 1 con <function>str_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Genera: <body text='black'>
$bodytag = str_replace("%body%", "black", "<body text='%body%'>");
echo $bodytag, PHP_EOL;

// Genera: Hll Wrld f PHP
$vowels = array("a", "e", "i", "o", "u", "A", "E", "I", "O", "U");
$onlyconsonants = str_replace($vowels, "", "Hello World of PHP");
echo $onlyconsonants, PHP_EOL;

// Genera: You should eat pizza, beer, and ice cream every day
$phrase  = "You should eat fruits, vegetables, and fiber every day.";
$healthy = array("fruits", "vegetables", "fiber");
$yummy   = array("pizza", "beer", "ice cream");

$newphrase = str_replace($healthy, $yummy, $phrase);
echo $newphrase, PHP_EOL;

// Genera: good goy miss moy
$str = str_replace("ll", "", "good golly miss molly!", $count);
echo $count, PHP_EOL;

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo 2 con <function>str_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Orden de los reemplazos
$str     = "Line 1\nLine 2\rLine 3\r\nLine 4\n";
$order   = array("\r\n", "\n", "\r");
$replace = '<br />';

// Procesamiento del primer \r\n, no serán convertidos dos veces.
$newstr = str_replace($order, $replace, $str);
echo $newstr, PHP_EOL;

// Muestra F porque A es reemplazado por B, luego B es reemplazado por C, y así sucesivamente...
// Finalmente, E es reemplazado por F
$search  = array('A', 'B', 'C', 'D', 'E');
$replace = array('B', 'C', 'D', 'E', 'F');
$subject = 'A';
echo str_replace($search, $replace, $subject), PHP_EOL;

// Muestra: apearpearle pear
// Por las mismas razones que arriba
$letters = array('a', 'p');
$fruit   = array('apple', 'pear');
$text    = 'a p';
$output  = str_replace($letters, $fruit, $text);
echo $output, PHP_EOL;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  <caution>
   <title>Orden de reemplazo</title>
   <para>
    Debido a que la función <function>str_replace</function>
    realiza los reemplazos de izquierda a derecha, puede
    reemplazar un valor previamente insertado durante múltiples
    reemplazos.
   </para>
  </caution>
  <note>
   <para>
    Esta función es sensible a mayúsculas y minúsculas. Utilice la función
    <function>str_ireplace</function> para un reemplazo insensible a mayúsculas y minúsculas.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_ireplace</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>strtr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
