<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 45042fef652f1b4e904e809fcbfcf31f6c60670b Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.explode" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>explode</refname>
  <refpurpose>Divide una string en segmentos</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>explode</methodname>
   <methodparam><type>string</type><parameter>separator</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer><constant>PHP_INT_MAX</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>explode</function> retorna un array de strings, cada una de ellas siendo una substring del parámetro <parameter>string</parameter> extraída utilizando el separador <parameter>separator</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>separator</parameter></term>
     <listitem>
      <para>
       El separador.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La string inicial.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Si <parameter>limit</parameter> está definido y es positivo, el array retornado contiene, como máximo, <parameter>limit</parameter> elementos, y el último elemento contendrá el resto de la string.
      </para>
      <para>
       Si el parámetro <parameter>limit</parameter> es negativo, todos los elementos, excepto los últimos -<parameter>limit</parameter> elementos, son retornados.
      </para>
      <para>
       Si <parameter>limit</parameter> vale cero, es tratado como si valiera 1.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <note>
   <para>
    Antes de PHP 8.0, <function>implode</function> aceptaba sus parámetros en cualquier orden. <function>explode</function> nunca ha soportado esto: se debe asegurar que el parámetro <parameter>separator</parameter> esté colocado antes del parámetro <parameter>string</parameter>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna un &array; de strings creadas al dividir la string del parámetro <parameter>string</parameter> en varios trozos siguiendo el parámetro <parameter>separator</parameter>.
  </para>
  <para>
   Si <parameter>separator</parameter> es una string vacía (""), <function>explode</function> lanzará una <classname>ValueError</classname>. Si <parameter>separator</parameter> contiene un valor que no está contenido en <parameter>string</parameter> así como un valor negativo para el parámetro <parameter>limit</parameter>, entonces <function>explode</function> retornará un &array; vacío, de lo contrario, un &array; conteniendo la string <parameter>string</parameter> entera. Si los valores de <parameter>separator</parameter> aparecen al inicio o al final de <parameter>string</parameter>, estos valores serán añadidos como un valor de un <type>array</type> vacío ya sea en la primera o última posición del <type>array</type> retornado respectivamente.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <function>explode</function> lanzará ahora una <classname>ValueError</classname> cuando el parámetro <parameter>separator</parameter> es una string vacía (<literal>""</literal>). Anteriormente, <function>explode</function> retornaba &false;.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>explode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Ejemplo 1
$pizza  = "piece1 piece2 piece3 piece4 piece5 piece6";
$pieces = explode(" ", $pizza);
echo $pieces[0], PHP_EOL; // piece1
echo $pieces[1], PHP_EOL; // piece2

// Ejemplo 2
$data = "foo:*:1023:1000::/home/foo:/bin/sh";
list($user, $pass, $uid, $gid, $gecos, $home, $shell) = explode(":", $data);
echo $user, PHP_EOL; // foo
echo $pass, PHP_EOL; // *

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo de valores retornados por la función <function>explode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Una string que no contiene delimitador retornará un array
   conteniendo solo un elemento representando la string original */
$input1 = "hello";
$input2 = "hello,there";
$input3 = ',';
var_dump( explode( ',', $input1 ) );
var_dump( explode( ',', $input2 ) );
var_dump( explode( ',', $input3 ) );

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(1)
(
    [0] => string(5) "hello"
)
array(2)
(
    [0] => string(5) "hello"
    [1] => string(5) "there"
)
array(2)
(
    [0] => string(0) ""
    [1] => string(0) ""
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo con <function>explode</function> y el parámetro <parameter>limit</parameter></title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'one|two|three|four';

// limit positivo
print_r(explode('|', $str, 2));

// limit negativo
print_r(explode('|', $str, -1));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => one
    [1] => two|three|four
)
Array
(
    [0] => one
    [1] => two
    [2] => three
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_split</function></member>
    <member><function>str_split</function></member>
    <member><function>mb_split</function></member>
    <member><function>str_word_count</function></member>
    <member><function>strtok</function></member>
    <member><function>implode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
