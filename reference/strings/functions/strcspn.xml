<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 89990d6588947665d4e9c029ee83696f1a9d3d11 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.strcspn" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strcspn</refname>
  <refpurpose>Encuentra un segmento de string que no contiene ciertos caracteres</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strcspn</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>characters</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve la longitud del primer segmento de <parameter>string</parameter>
   que no contiene <emphasis>ninguno</emphasis> de los caracteres de
   <parameter>characters</parameter>.
  </para>
  <para>
   Si <parameter>offset</parameter> y <parameter>length</parameter>
   son omitidos, entonces se examinará la totalidad de <parameter>string</parameter>.
   Si se incluyen, el efecto será idéntico a
   llamar a <literal>strcspn(substr($string, $offset, $length),
   $characters)</literal> (ver <xref linkend="function.substr"/> para más
   información).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       El string a examinar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>characters</parameter></term>
     <listitem>
      <para>
       El string que contiene todos los caracteres desactivados.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       La posición en <parameter>string</parameter> desde la cual se comienza a buscar.
      </para>
      <para>
       Si <parameter>offset</parameter> es proporcionado y no es negativo,
       entonces <function>strcspn</function> comenzará a examinar
       <parameter>string</parameter> en la
       posición <parameter>offset</parameter>. Por ejemplo, en
       el string '<literal>abcdef</literal>', el carácter en la posición
       <literal>0</literal> es '<literal>a</literal>', el carácter
       en la posición <literal>2</literal> es
       '<literal>c</literal>', y así sucesivamente.
      </para>
      <para>
       Si <parameter>offset</parameter> es proporcionado y es negativo,
       entonces <function>strspn</function> comenzará a examinar
       <parameter>string</parameter> en la
       posición <parameter>offset</parameter> desde el final de
       <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       La longitud del segmento de <parameter>string</parameter>
       a examinar.
      </para>
      <para>
       Si <parameter>length</parameter> es proporcionado y no es negativo,
       entonces <parameter>string</parameter> será examinado
       desde <parameter>length</parameter> caracteres después de la posición de
       inicio.
      </para>
      <para>
       Si <parameter>length</parameter> es proporcionado y es negativo,
       entonces <parameter>string</parameter> será examinado desde la
       posición de inicio hasta <parameter>length</parameter>
       caracteres desde el final de <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la longitud del segmento inicial de <parameter>string</parameter>
   que contiene solo caracteres que no están <emphasis>no</emphasis>
   en <parameter>characters</parameter>.
  </para>
  <note>
   <para>
    Cuando el parámetro <parameter>offset</parameter> está definido, la
    longitud devuelta se cuenta desde esta posición, y no desde
    el inicio de <parameter>string</parameter>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.4.0</entry>
      <entry>
       <simpara>
        Antes de PHP 8.4.0, cuando <parameter>characters</parameter> era un string vacío,
        la búsqueda se detenía incorrectamente en el primer byte nulo en <parameter>string</parameter>.
       </simpara>
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>length</parameter> ahora es nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="strcspn.example">
   <title>Ejemplo con <function>strcspn</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$a = strcspn('banana', 'a');
$b = strcspn('banana', 'abcd');
$c = strcspn('banana', 'z');
$d = strcspn('abcdhelloabcd', 'a', -9);
$e = strcspn('abcdhelloabcd', 'a', -9, -5);

var_dump($a);
var_dump($b);
var_dump($c);
var_dump($d);
var_dump($e);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
int(1)
int(0)
int(6)
int(5)
int(4)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strspn</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
