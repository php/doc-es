<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 099842f34289b4cf932863e1f83d0e9a144d3b06 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.printf">
 <refnamediv>
  <refname>printf</refname>
  <refpurpose>Muestra una string formateada</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>printf</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>values</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Muestra una string formateada.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &strings.parameter.format;
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la longitud de la string mostrada.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &strings.errors.sprintf;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  &strings.changelog.sprintf;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>printf</function>: varios ejemplos</title>
    <programlisting role="php">
<![CDATA[
<?php
$n =  43951789;
$u = -43951789;
$c = 65; // ASCII 65 es 'A'

// note el doble %%, esto muestra un carácter '%' literal
printf("%%b = '%b'\n", $n); // representación binaria
printf("%%c = '%c'\n", $c); // muestra el carácter ascii, como la función chr()
printf("%%d = '%d'\n", $n); // representación estándar de un integer
printf("%%e = '%e'\n", $n); // notación científica
printf("%%u = '%u'\n", $n); // representación de integer sin signo de un integer positivo
printf("%%u = '%u'\n", $u); // representación de integer sin signo de un integer negativo
printf("%%f = '%f'\n", $n); // representación en coma flotante
printf("%%o = '%o'\n", $n); // representación octal
printf("%%s = '%s'\n", $n); // representación string
printf("%%x = '%x'\n", $n); // representación hexadecimal (minúscula)
printf("%%X = '%X'\n", $n); // representación hexadecimal (mayúscula)

printf("%%+d = '%+d'\n", $n); // indicación del signo para un integer positivo
printf("%%+d = '%+d'\n", $u); // indicación del signo para un integer negativo
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
%b = '10100111101010011010101101'
%c = 'A'
%d = '43951789'
%e = '4.39518e+7'
%u = '43951789'
%u = '4251015507'
%f = '43951789.000000'
%o = '247523255'
%s = '43951789'
%x = '29ea6ad'
%X = '29EA6AD'
%+d = '+43951789'
%+d = '-43951789'
]]>
    </screen>
   </example>
   <example>
    <title><function>printf</function>: especificadores de strings</title>
    <programlisting role="php">
<![CDATA[
<?php
$s = 'monkey';
$t = 'many monkeys';

printf("[%s]\n",        $s); // muestra de una string estándar
printf("[%10s]\n",      $s); // alineación a la derecha con espacios
printf("[%-10s]\n",     $s); // alineación a la izquierda con espacios
printf("[%010s]\n",     $s); // el espaciado nulo funciona también en strings
printf("[%'#10s]\n",    $s); // uso del carácter personalizado de separación '#'
printf("[%'#*s]\n", 10, $s); // Proporcionar el ancho de alineación como argumento adicional
printf("[%10.9s]\n",    $t); // alineación a la derecha pero con corte a 8 caracteres
printf("[%-10.9s]\n",   $t); // alineación a la izquierda pero con corte a 8 caracteres
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
[monkey]
[    monkey]
[monkey    ]
[0000monkey]
[####monkey]
[####monkey]
[ many monk]
[many monk ]
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>print</function></member>
    <member><function>sprintf</function></member>
    <member><function>fprintf</function></member>
    <member><function>vprintf</function></member>
    <member><function>vsprintf</function></member>
    <member><function>vfprintf</function></member>
    <member><function>sscanf</function></member>
    <member><function>fscanf</function></member>
    <member><function>number_format</function></member>
    <member><function>date</function></member>
    <member><function>flush</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
