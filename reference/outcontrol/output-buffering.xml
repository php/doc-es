<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 7ad99aeafea66a1562f668aa3cb11dcc9d9cb951 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<chapter xml:id="outcontrol.output-buffering" xmlns="http://docbook.org/ns/docbook">
 <title>Bufferización de salida</title>
 <para>
  La bufferización de salida es el almacenamiento en búfer (temporal) de la salida
  antes de que sea volcada (enviada y eliminada) al navegador (en un contexto web)
  o al shell (en línea de comandos).
  Mientras la bufferización de salida esté activa, ninguna salida es enviada por el script,
  en su lugar, la salida es almacenada en un búfer interno.
 </para>

 <section>
  <title>Efectos de la bufferización en PHP</title>
  <para>
   PHP depende de la infraestructura lógica/material subyacente
   al vaciar el búfer de la salida.
   La bufferización implementada por las consolas en línea de comandos (por ejemplo, en modo línea)
   o los servidores web y los navegadores en un contexto web (por ejemplo, completamente bufferizado)
   afectan cuándo se muestra la salida al usuario final.
   Algunos de estos efectos pueden ser eliminados ajustando finamente los parámetros del servidor
   y/o alineando los tamaños de los búferes de las diferentes capas.
  </para>
 </section>

 <section>
  <title>Control de la bufferización de salida en PHP</title>
  <para>
   PHP proporciona un búfer de salida de usuario completamente bufferizado
   con funciones para iniciar, manipular y desactivar el búfer
   (la mayoría de las funciones <link linkend="ref.outcontrol">ob_<replaceable>*</replaceable></link>),
   y dos funciones para vaciar los búferes del sistema subyacentes
   (<function>flush</function> y <function>ob_implicit_flush</function>).
   Algunas de estas funcionalidades pueden ser definidas y/o configuradas
   utilizando los parámetros &php.ini; apropiados.
  </para>
 </section>

 <section>
  <title>Casos de uso</title>
  <para>
   La bufferización de salida es generalmente útil en situaciones donde la salida bufferizada
   es modificada o inspeccionada, o es utilizada más de una vez en una petición;
   o cuando se desea el vaciado controlado del búfer de la salida.
   Los casos de uso específicos incluyen:
   <itemizedlist>
    <listitem>
     <simpara>
      almacenar en caché el resultado de scripts de cálculo/tiempo intensivos
      por ejemplo generando páginas <literal>HTML</literal> estáticas
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      reutilizar la salida generada al mostrarla, guardarla en un fichero
      y/o enviarla por correo electrónico
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      vaciar la <literal>head</literal> de una página <literal>HTML</literal>
      separada del <literal>body</literal> permite a los navegadores
      cargar recursos externos mientras el script ejecuta
      procesos potencialmente más largos
      (por ejemplo, acceso a una base de datos/fichero, conexión de red externa).
      Esto es útil únicamente si el código de estado <literal>HTTP</literal>
      no puede cambiar después del envío de las cabeceras
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      extraer información de funciones que producirían de otro modo una salida
      (por ejemplo <function>phpinfo</function>)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      controlar la salida de código de terceros al modificar/utilizar partes
      (por ejemplo, extraer datos, reemplazar palabras/frases,
      añadir etiquetas <literal>HTML</literal> faltantes),
      o al eliminarla completamente bajo ciertas condiciones (por ejemplo, errores)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Polyfiller ciertas funcionalidades de servidor web no disponibles
      (por ejemplo, comprimir o codificar la salida)
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </section>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
