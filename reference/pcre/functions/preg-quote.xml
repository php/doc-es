<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 22e850b66cd9a4b8f0e002bd5850f9839caaf152 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.preg-quote" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_quote</refname>
  <refpurpose>Protección de caracteres especiales de expresiones regulares</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>preg_quote</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>delimiter</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>preg_quote</function> añade una barra invertida antes de cada carácter de la cadena <parameter>str</parameter> que forma parte de la sintaxis de expresiones regulares.
   Esto es muy útil si se tiene una cadena que va a
   servir como máscara, pero que es generada
   durante la ejecución.
  </para>
  <para>
   Los caracteres especiales que serán protegidos son los siguientes:
   <literal>. \ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | : - #</literal>
  </para>
  <para>
   Tenga en cuenta que <literal>/</literal> no es un carácter especial de expresión regular.
  </para>
  <note>
   <para>
    Tenga en cuenta que <function>preg_quote</function> no está destinado a ser aplicado a
    las cadenas $replacement de <function>preg_replace</function> etc.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>delimiter</parameter></term>
     <listitem>
      <para>
       Si el argumento opcional <parameter>delimiter</parameter> es proporcionado,
       también será escapado. Esto es práctico para escapar
       el delimitador requerido por las funciones PCRE. La barra <literal>/</literal> es el
       delimitador más común.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna la cadena protegida.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.3.0</entry>
       <entry>
        El carácter <literal>#</literal> ahora es protegido
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <parameter>delimiter</parameter> ahora es nullable.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>preg_quote</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$keywords = '$40 para un g3/400';
$keywords = preg_quote($keywords, '/');
echo $keywords; // retorna \$40 para un g3\/400
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Poner en cursiva una palabra en un texto</title>
    <programlisting role="php">
<![CDATA[
<?php
// En este ejemplo, preg_quote($word) sirve para evitar que los asteriscos
// tengan un valor especial en la expresión regular.

$textbody = "Este libro es *muy* difícil de encontrar.";
$word = "*muy*";
$textbody = preg_replace ("/" . preg_quote($word, '/') . "/",
                          "<i>" . $word . "</i>",
                          $textbody);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="pcre.pattern">Máscaras PCRE</link></member>
    <member><function>escapeshellcmd</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
