<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 41c8533ff5a8f93ba9fdf0732d05dd5ab79864c9 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: seros -->

<refentry xml:id="function.preg-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_replace</refname>
  <refpurpose>Realiza una búsqueda y sustitución de una expresión regular</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type><type>null</type></type><methodname>preg_replace</methodname>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>pattern</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>replacement</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Busca en <parameter>subject</parameter> coincidencias de
   <parameter>pattern</parameter> y las reemplaza con
   <parameter>replacement</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       El patrón de búsqueda. Puede ser tanto una cadena como un array de
       cadenas.
      </para>
      <para>
       También hay disponibles varios
       <link linkend="reference.pcre.pattern.modifiers">modificadores de PCRE</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacement</parameter></term>
     <listitem>
      <para>
       La cadena o array de cadenas a reemplazar. Si este parámetro es una
       cadena y el parámetro <parameter>pattern</parameter> es un array,
       todos los patrones serán sustituidos por esa cadena. Si ambos parámetros,
       <parameter>pattern</parameter> y <parameter>replacement</parameter>,
       son arrays, cada <parameter>pattern</parameter> será reemplazado
       por el <parameter>replacement</parameter> equivalente. Si
       hay menos elementos en el array <parameter>replacement</parameter>
       que en el array <parameter>pattern</parameter>, cualquier
       <parameter>pattern</parameter> extra será reemplazado por una cadena vacía.
      </para>
      <para>
       <parameter>replacement</parameter> puede contener referencias de la forma
       <literal>\\<replaceable>n</replaceable></literal> o
       <literal>$<replaceable>n</replaceable></literal>, siendo preferida la
       última forma. Cada referencia de este tipo será sustituida por el texto
       capturado por el <replaceable>n</replaceable>-simo patrón entre paréntesis.
       <replaceable>n</replaceable> puede ser desde 0 a 99, y
       <literal>\\0</literal> o <literal>$0</literal> se refiere al texto coincidido
       por el patrón completo. Los paréntesis de apertura se cuentan de izquierda a derecha
       (comenzando por 1) para obtener el número de sub-patrones de captura.
       Se debe doblar la barra invertida para poder usarla en la sustitución
       (cadena PHP <literal>"\\\\"</literal>).
      </para>
      <para>
       Cuando se trabaja con un patrón de sustitución donde una retroreferencia es
       immediatamente seguida de otro número (p.ej.: colocar un número literal
       immediatamente después de un patrón coincidido), no puede usar la notación familiar
       <literal>\\1</literal> para sus retroreferencias.
       <literal>\\11</literal>, por ejemplo, confundiría a
       <function>preg_replace</function> ya que no sabe si quiere que
       la retroreferencia <literal>\\1</literal> esté seguida por un literal
       <literal>1</literal>, o que la retroreferencia <literal>\\11</literal>
       esté seguida de nada. En este caso la solución es usar
       <literal>${1}1</literal>. Esto crea una retroreferencia
       <literal>$1</literal> aislada, dejando el <literal>1</literal>
       como un literal.
      </para>
      <para>
       Cuando se usa el modificador obsoleto <literal>e</literal>, esta función escapa
       algunos caracteres (a saber, <literal>'</literal>, <literal>"</literal>,
       <literal>\</literal> y NULL) en la cadena que sustituye a las
       retroreferencias. Esto está hecho para asegurarse de que no surjan errores de sintaxis
       en el uso de retroreferencias con comillas simples o dobles (p.ej.
       <literal>'strlen(\'$1\')+strlen("$2")'</literal>). Asegúrese de que
       conoce la <link linkend="language.types.string">sintaxis de
       cadena</link> para saber cómo se asemejarán las cadenas interpretadas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       La cadena o array de cadenas a buscar y sustituir.
      </para>
      <para>
       Si <parameter>subject</parameter> es un array, entonces la búsqueda y
       sustitución se llevan a cabo para cada entrada de <parameter>subject</parameter>,
       y el valor devuelto también es un array.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Las sustituciones máximas posibles por cada patrón en cada
       cadena <parameter>subject</parameter>. Por defecto es
       <literal>-1</literal> (sin límite).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <para>
       Si se especifica, esta variable será rellenada con el número de
       sustituciones hechas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>preg_replace</function> devuelve un array si el
   parámetro <parameter>subject</parameter> es un array, o, de lo contrario,
   una cadena.
  </para>
  <para>
   Si se encuentran coincidencias, el nuevo <parameter>subject</parameter> será
   devuelto, de lo contrario, <parameter>subject</parameter> será
   devuelto sin cambios o &null; si se produjo un error.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Usando el modificador "\e" es un error;
   y un <constant>E_WARNING</constant> es emitido en este caso.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Usar retroreferencias seguidas de literales numéricos</title>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = 'Abril 15, 2003';
$patrón = '/(\w+) (\d+), (\d+)/i';
$sustitución = '${1}1,$3';
echo preg_replace($patrón, $sustitución, $cadena);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Abril1,2003
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Emplear arrays indexados con <function>preg_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = 'El veloz murciélago hindú comía feliz cardillo y kiwi.';
$patrones = array();
$patrones[0] = '/veloz/';
$patrones[1] = '/hindú/';
$patrones[2] = '/murciélago/';
$sustituciones = array();
$sustituciones[2] = 'galápago';
$sustituciones[1] = 'africano';
$sustituciones[0] = 'lento';
echo preg_replace($patrones, $sustituciones, $cadena);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
El galápago lento africano comía feliz cardillo y kiwi.
]]>
    </screen>
    <para>
     Al usar ksort en patrones y sustituciones, podríamos obtener lo que buscábamos.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
ksort($patrones);
ksort($sustituciones);
echo preg_replace($patrones, $sustituciones, $cadena);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
El lento galápago africano comía feliz cardillo y kiwi.
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Sustituir varios valores</title>
    <programlisting role="php">
<![CDATA[
<?php
$patrones = array ('/(19|20)(\d{2})-(\d{1,2})-(\d{1,2})/',
                   '/^\s*{(\w+)}\s*=/');
$sustitución = array ('\4/\3/\1\2', '$\1 =');
echo preg_replace($patrones, $sustitución, '{fechaInicio} = 1999-5-27');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
$fechaInicio = 27/5/1999
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Quitar los espacios en blanco</title>
    <para>
     Este ejemplo quita los espacios en blanco en exceso de una cadena.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = 'foo   o';
$cadena = preg_replace('/\s\s+/', ' ', $cadena);
// Ahora esto será 'foo o'
echo $cadena;
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Usar el parámetro <parameter>count</parameter></title>
    <programlisting role="php">
<![CDATA[
<?php
$cuenta = 0;

echo preg_replace(array('/\d/', '/\s/'), '*', 'xp 4 to', -1 , $cuenta);
echo $cuenta; //3
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
xp***to
3
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Cuando se usan arrays con <parameter>pattern</parameter> y
    <parameter>replacement</parameter>, las claves se procesan en el orden
    en que aparecen en el array. Éste <emphasis>no es necesariamente</emphasis> el
    mismo que el orden de índice numérico. Si usa índices para identificar qué
    <parameter>pattern</parameter> debería ser sustituido por cuál
    <parameter>replacement</parameter>, debería usar
    <function>ksort</function> en cada array antes de llamar a
    <function>preg_replace</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="pcre.pattern">Patrones de PCRE</link></member>
    <member><function>preg_quote</function></member>
    <member><function>preg_filter</function></member>
    <member><function>preg_match</function></member>
    <member><function>preg_replace_callback</function></member>
    <member><function>preg_split</function></member>
    <member><function>preg_last_error</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
