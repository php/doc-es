<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 561e36d646b8e48dc53a910234ee9f30cba147d0 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->

<appendix xml:id="stream.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <title>
   Opciones disponibles para el <parameter>flags</parameter> de
   <function>stream_socket_client</function>
  </title>

  <varlistentry xml:id="constant.stream-client-async-connect">
   <term>
    <constant>STREAM_CLIENT_ASYNC_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Abre el socket cliente de manera asíncrona.
     Esta opción debe utilizarse con el flag
     <constant>STREAM_CLIENT_CONNECT</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-client-connect">
   <term>
    <constant>STREAM_CLIENT_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Abre la conexión del socket cliente.
     Los sockets cliente deben incluir siempre este flag.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-client-persistent">
   <term>
    <constant>STREAM_CLIENT_PERSISTENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     El socket cliente debe permanecer persistente entre las cargas de página.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <variablelist>
  <title>
   Flags disponibles para el parámetro <parameter>flags</parameter> de la función
   <function>stream_socket_server</function>.
  </title>

  <varlistentry xml:id="constant.stream-server-bind">
   <term>
    <constant>STREAM_SERVER_BIND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indica que un flujo debe enlazarse al objetivo especificado.
     Los sockets servidor deben incluir siempre este flag.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-server-listen">
   <term>
    <constant>STREAM_SERVER_LISTEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indica que un flujo enlazado con el flag
     <constant>STREAM_SERVER_BIND</constant> debe comenzar a escuchar el socket.
     Los transportes orientados a conexión (como TCP) deben utilizar este flag,
     de lo contrario el socket servidor no se activará.
     Utilizar este flag para transportes sin conexión (como UDP) es un error.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <variablelist>
  <title>
   Valores para el parámetro <parameter>mode</parameter> de
   <function>stream_socket_shutdown</function>
  </title>

  <varlistentry xml:id="constant.stream-shut-rd">
   <term>
    <constant>STREAM_SHUT_RD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Desactivar las recepciones adicionales.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-shut-wr">
   <term>
    <constant>STREAM_SHUT_WR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Desactivar las transmisiones adicionales.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-shut-rdwr">
   <term>
    <constant>STREAM_SHUT_RDWR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Desactivar las recepciones y transmisiones adicionales.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <variablelist>
  <title>Flags de transferencia de socket de flujo</title>
  <simpara>
   Estas constantes se utilizan para el parámetro <parameter>flags</parameter>
   de las funciones <function>stream_socket_recvfrom</function> y
   <function>stream_socket_sendto</function>.
  </simpara>

  <varlistentry xml:id="constant.stream-oob">
   <term>
    <constant>STREAM_OOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Procesa los datos OOB (<literal>fuera de banda</literal>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-peek">
   <term>
    <constant>STREAM_PEEK</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Recupera los datos del socket, pero sin consumir el búfer.
    </simpara>
    <simpara>
     Las llamadas siguientes a <function>fread</function> o
     <function>stream_socket_recvfrom</function> verán los mismos datos.
    </simpara>
    <note>
     <simpara>
      No es un flag válido para <function>stream_socket_sendto</function>.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
 </variablelist>

 <variablelist>
  <title>Constantes de filtro de flujo</title>
  <simpara>
   Estas constantes se utilizan para las funciones
   <function>stream_filter_append</function> y
   <function>stream_filter_prepend</function>.
  </simpara>

  <varlistentry xml:id="constant.stream-filter-read">
   <term>
    <constant>STREAM_FILTER_READ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indica que el filtro especificado debe aplicarse únicamente durante la
     <emphasis>lectura</emphasis>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-filter-write">
   <term>
    <constant>STREAM_FILTER_WRITE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Indica que el filtro especificado debe aplicarse únicamente durante la
     <emphasis>escritura</emphasis>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.stream-filter-all">
   <term>
    <constant>STREAM_FILTER_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Equivalente a <code>STREAM_FILTER_READ | STREAM_FILTER_WRITE</code>.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <variablelist>
  <title>
   Métodos Crypto de Flujo
  </title>

   <varlistentry xml:id="constant.stream-crypto-method-any-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_ANY_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Cualquier versión de TLS o SSL en un flujo cliente.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv2-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv2_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      SSL 2 en un flujo cliente.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv3-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv3_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      SSL 3 en un flujo cliente.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv23-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv23_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.0, 1.1 o 1.2 en un flujo cliente.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tls-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLS_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Cualquier versión de TLS en un flujo cliente.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-0-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.0 en un flujo cliente.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-1-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.1 en un flujo cliente.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-2-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.2 en un flujo cliente.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-3-client">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_3_CLIENT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.3 en un flujo cliente.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-any-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_ANY_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Cualquier versión de TLS o SSL en un flujo servidor.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv2-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv2_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      SSL 2 en un flujo servidor.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv3-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv3_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      SSL 3 en un flujo servidor.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-sslv23-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_SSLv23_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.0, 1.1 o 1.2 en un flujo servidor.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tls-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLS_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Cualquier versión de TLS en un flujo servidor.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-0-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_0_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.0 en un flujo servidor.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-1-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_1_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.1 en un flujo servidor.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-2-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_2_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.2 en un flujo servidor.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-method-tlsv1-3-server">
    <term>
     <constant>STREAM_CRYPTO_METHOD_TLSv1_3_SERVER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      TLS 1.3 en un flujo servidor.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-proto-sslv3">
    <term>
     <constant>STREAM_CRYPTO_PROTO_SSLv3</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      &Alias; <constant>STREAM_CRYPTO_METHOD_SSLv3_SERVER</constant>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-proto-tlsv1-0">
    <term>
     <constant>STREAM_CRYPTO_PROTO_TLSv1_0</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      &Alias; <constant>STREAM_CRYPTO_METHOD_TLSv1_0_SERVER</constant>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-proto-tlsv1-1">
    <term>
     <constant>STREAM_CRYPTO_PROTO_TLSv1_1</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      &Alias; <constant>STREAM_CRYPTO_METHOD_TLSv1_1_SERVER</constant>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-proto-tlsv1-2">
    <term>
     <constant>STREAM_CRYPTO_PROTO_TLSv1_2</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      &Alias; <constant>STREAM_CRYPTO_METHOD_TLSv1_2_SERVER</constant>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-crypto-proto-tlsv1-3">
    <term>
     <constant>STREAM_CRYPTO_PROTO_TLSv1_3</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      &Alias; <constant>STREAM_CRYPTO_METHOD_TLSv1_3_SERVER</constant>.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>
    Constantes internas no utilizadas
   </title>

   <varlistentry xml:id="constant.stream-must-seek">
    <term>
     <constant>STREAM_MUST_SEEK</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Asegura que el flujo sea accesible en lectura/escritura.
      Esto puede provocar la creación de una copia del flujo.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.stream-ignore-url">
    <term>
     <constant>STREAM_IGNORE_URL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      No utilizar los wrappers de complementos.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>

  <simplesect>
   <title>
    Constantes utilizadas con <function>stream_socket_pair</function>
   </title>
   <note>
    <simpara>
     No todas las constantes están necesariamente disponibles en un sistema dado.
    </simpara>
   </note>
   <variablelist>
    <title>
     Constantes para el parámetro <parameter>domain</parameter>
    </title>
    <varlistentry xml:id="constant.stream-pf-inet">
     <term>
      <constant>STREAM_PF_INET</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Protocolo de Internet Versión 4 (IPv4).
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-pf-inet6">
     <term>
      <constant>STREAM_PF_INET6</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Protocolo de Internet Versión 6 (IPv6).
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-pf-unix">
     <term>
      <constant>STREAM_PF_UNIX</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Protocolos internos del sistema Unix.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Constantes para el parámetro <parameter>type</parameter>
    </title>
    <varlistentry xml:id="constant.stream-sock-dgram">
     <term>
      <constant>STREAM_SOCK_DGRAM</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Proporciona datagramas, que son mensajes sin conexión.
       Por ejemplo: UDP.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-sock-raw">
     <term>
      <constant>STREAM_SOCK_RAW</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Proporciona un socket crudo, dando acceso a los protocolos
       e interfaces de red internas.
       Generalmente, este tipo de socket está reservado para el usuario root.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-sock-rdm">
     <term>
      <constant>STREAM_SOCK_RDM</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Proporciona un socket RDM (mensajes entregados de manera confiable).
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-sock-seqpacket">
     <term>
      <constant>STREAM_SOCK_SEQPACKET</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Proporciona un socket de flujo de paquetes secuenciados.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-sock-stream">
     <term>
      <constant>STREAM_SOCK_STREAM</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Proporciona flujos bidireccionales secuenciados con un mecanismo de
       transmisión para los datos fuera de banda.
       Por ejemplo: TCP.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Constantes para el parámetro <parameter>protocol</parameter>
    </title>
    <varlistentry xml:id="constant.stream-ipproto-icmp">
     <term>
      <constant>STREAM_IPPROTO_ICMP</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Proporciona un socket ICMP.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-ipproto-ip">
     <term>
      <constant>STREAM_IPPROTO_IP</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Proporciona un socket IP.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-ipproto-raw">
     <term>
      <constant>STREAM_IPPROTO_RAW</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Proporciona un socket RAW.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-ipproto-tcp">
     <term>
      <constant>STREAM_IPPROTO_TCP</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Proporciona un socket TCP.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-ipproto-udp">
     <term>
      <constant>STREAM_IPPROTO_UDP</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Proporciona un socket UDP.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </simplesect>

  <simplesect>
   <title>
    Constantes utilizadas con <function>stream_notification_callback</function>
   </title>
   <variablelist>
    <title>
     Valores para el parámetro <parameter>notification_code</parameter>
    </title>

    <varlistentry xml:id="constant.stream-notify-resolve">
     <term>
      <constant>STREAM_NOTIFY_RESOLVE</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Una dirección remota requerida para este flujo ha sido resuelta,
       o la resolución ha fallado.
      </simpara>
      <simpara>
       Consulte <parameter>severity</parameter> para saber qué ha ocurrido.
      </simpara>
      <warning>
       <simpara>
        El soporte para este código de notificación aún no está implementado.
       </simpara>
      </warning>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-connect">
     <term>
      <constant>STREAM_NOTIFY_CONNECT</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Se ha establecido una conexión con un recurso externo.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-auth-required">
     <term>
      <constant>STREAM_NOTIFY_AUTH_REQUIRED</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Se requiere autorización adicional para acceder al recurso especificado.
      </simpara>
      <simpara>
       Normalmente emitido con un nivel <parameter>severity</parameter> de
       <constant>STREAM_NOTIFY_SEVERITY_ERR</constant>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-mime-type-is">
     <term>
      <constant>STREAM_NOTIFY_MIME_TYPE_IS</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Se ha identificado el <literal>tipo MIME</literal> del recurso.
      </simpara>
      <simpara>
       Consulte <parameter>message</parameter> para una descripción del tipo descubierto.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-file-size-is">
     <term>
      <constant>STREAM_NOTIFY_FILE_SIZE_IS</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Se ha descubierto el <literal>tamaño</literal> del recurso.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-redirected">
     <term>
      <constant>STREAM_NOTIFY_REDIRECTED</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       El recurso externo ha redirigido el flujo a otra ubicación.
      </simpara>
      <simpara>
       Consulte <parameter>message</parameter>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-progress">
     <term>
      <constant>STREAM_NOTIFY_PROGRESS</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indica el progreso actual de la transferencia de flujo en
       <parameter>bytes_transferred</parameter> y eventualmente
       <parameter>bytes_max</parameter> también.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-completed">
     <term>
      <constant>STREAM_NOTIFY_COMPLETED</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       No hay datos adicionales disponibles en el flujo.
       (Implementado por primera vez a partir de PHP 8.3.0.)
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-failure">
     <term>
      <constant>STREAM_NOTIFY_FAILURE</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Ha ocurrido un error genérico en el flujo.
      </simpara>
      <simpara>
       Consulte <parameter>message</parameter> y
       <parameter>message_code</parameter> para más detalles.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-auth-result">
     <term>
      <constant>STREAM_NOTIFY_AUTH_RESULT</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       La autorización ha sido completada (con o sin éxito).
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valores para el parámetro <parameter>severity</parameter>
    </title>

    <varlistentry xml:id="constant.stream-notify-severity-info">
     <term>
      <constant>STREAM_NOTIFY_SEVERITY_INFO</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Notificación normal, sin relación con un error.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-severity-warn">
     <term>
      <constant>STREAM_NOTIFY_SEVERITY_WARN</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Condición de error no crítica.
       El procesamiento puede continuar.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-notify-severity-err">
     <term>
      <constant>STREAM_NOTIFY_SEVERITY_ERR</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Ha ocurrido un error crítico.
       El procesamiento no puede continuar.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </simplesect>

  <simplesect>
   <title>Constantes relacionadas con <classname>streamWrapper</classname></title>

   <variablelist>
    <title>
     Flags válidos para <function>stream_wrapper_register</function>
    </title>

    <varlistentry xml:id="constant.stream-is-url">
     <term>
      <constant>STREAM_IS_URL</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indica que el protocolo de la interfaz de flujo es un
       protocolo <acronym>URL</acronym>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valores para el parámetro <parameter>cast_as</parameter> de
     <methodname>streamWrapper::stream_cast</methodname>
    </title>

    <varlistentry xml:id="constant.stream-cast-for-select">
     <term>
      <constant>STREAM_CAST_FOR_SELECT</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indica que <methodname>streamWrapper::stream_cast</methodname>
       ha sido llamado por <methodname>streamWrapper::stream_select</methodname>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-cast-as-stream">
     <term>
      <constant>STREAM_CAST_AS_STREAM</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indica que <methodname>streamWrapper::stream_cast</methodname>
       ha sido llamado por un método distinto de
       <methodname>streamWrapper::stream_select</methodname>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valores para el parámetro <parameter>option</parameter> de
     <methodname>streamWrapper::stream_metadata</methodname>
    </title>

    <varlistentry xml:id="constant.stream-meta-touch">
     <term>
      <constant>STREAM_META_TOUCH</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indica una llamada a <function>touch</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-meta-owner">
     <term>
      <constant>STREAM_META_OWNER</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indica una llamada a <function>chown</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-meta-owner-name">
     <term>
      <constant>STREAM_META_OWNER_NAME</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indica una llamada a <function>chown</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-meta-group">
     <term>
      <constant>STREAM_META_GROUP</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indica una llamada a <function>chgrp</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-meta-group-name">
     <term>
      <constant>STREAM_META_GROUP_NAME</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indica una llamada a <function>chgrp</function>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-meta-access">
     <term>
      <constant>STREAM_META_ACCESS</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Indica una llamada a <function>chmod</function>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Flags válidos para
     <methodname>streamWrapper::mkdir</methodname>
     y
     <methodname>streamWrapper::rmdir</methodname>
    </title>

    <varlistentry xml:id="constant.stream-mkdir-recursive">
     <term>
      <constant>STREAM_MKDIR_RECURSIVE</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Flag recursivo para los parámetros de opciones de
       <function>mkdir</function> y <function>rmdir</function>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valores para el parámetro <parameter>options</parameter> de
     <methodname>streamWrapper::stream_open</methodname>
    </title>

    <varlistentry xml:id="constant.stream-use-path">
     <term>
      <constant>STREAM_USE_PATH</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Flag que indica que las rutas relativas deben utilizar la ruta de inclusión para
       localizar el recurso.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-report-errors">
     <term>
      <constant>STREAM_REPORT_ERRORS</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Flag que indica que la interfaz de flujo debe reportar errores.
       Si el flag no está definido, no se debe reportar ningún error.
      </simpara>
      <simpara>
       Los errores generalmente se reportan mediante el uso de la
       función <function>trigger_error</function>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valores para el parámetro <parameter>option</parameter> de
     <methodname>streamWrapper::stream_set_option</methodname>
    </title>

    <varlistentry xml:id="constant.stream-option-blocking">
     <term>
      <constant>STREAM_OPTION_BLOCKING</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Establece el modo de bloqueo/no bloqueo en un flujo.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-option-read-buffer">
     <term>
      <constant>STREAM_OPTION_READ_BUFFER</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Establece el búfer de lectura en un flujo.
      </simpara>
      <variablelist>
       <title>
        Valores de opción válidos
       </title>
       <varlistentry xml:id="constant.stream-buffer-none">
        <term>
         <constant>STREAM_BUFFER_NONE</constant>
         (<type>int</type>)
        </term>
        <listitem>
         <simpara>
          Sin búfer.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry xml:id="constant.stream-buffer-line">
        <term>
         <constant>STREAM_BUFFER_LINE</constant>
         (<type>int</type>)
        </term>
        <listitem>
         <simpara>
          Búfer por línea.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry xml:id="constant.stream-buffer-full">
        <term>
         <constant>STREAM_BUFFER_FULL</constant>
         (<type>int</type>)
        </term>
        <listitem>
         <simpara>
          Búfer completo.
         </simpara>
        </listitem>
       </varlistentry>
      </variablelist>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-option-read-timeout">
     <term>
      <constant>STREAM_OPTION_READ_TIMEOUT</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Establece el tiempo de espera de lectura en un flujo.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-option-write-buffer">
     <term>
      <constant>STREAM_OPTION_WRITE_BUFFER</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Establece el búfer de escritura en un flujo.
      </simpara>
      <simpara>
       Ver <constant>STREAM_OPTION_READ_BUFFER</constant>
       para las opciones de búfer válidas.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Valores para el parámetro <parameter>flags</parameter> de
     <methodname>streamWrapper::url_stat</methodname>
    </title>

    <varlistentry xml:id="constant.stream-url-stat-link">
     <term>
      <constant>STREAM_URL_STAT_LINK</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Solo se debe devolver información sobre el enlace en sí,
       y no sobre el recurso apuntado por el enlace.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.stream-url-stat-quiet">
     <term>
      <constant>STREAM_URL_STAT_QUIET</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       La interfaz de flujo no debe generar errores.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </simplesect>

  <simplesect>
   <title>Constantes relacionadas con <classname>php_user_filter</classname></title>

   <variablelist>
    <title>
     Valores de retorno válidos para
     <methodname>php_user_filter::filter</methodname>
    </title>

    <varlistentry xml:id="constant.psfs-pass-on">
     <term>
      <constant>PSFS_PASS_ON</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Valor de retorno que indica que el filtro de usuario
       ha devuelto cubos en <parameter>$out</parameter>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.psfs-feed-me">
     <term>
      <constant>PSFS_FEED_ME</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Valor de retorno que indica que el filtro de usuario
       no ha devuelto cubos en <parameter>$out</parameter>.
       (es decir, no hay datos disponibles).
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.psfs-err-fatal">
     <term>
      <constant>PSFS_ERR_FATAL</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Valor de retorno que indica que el filtro de usuario
       ha encontrado un error irrecuperable.
       (es decir, datos no válidos recibidos).
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <title>
     Constantes internas no utilizadas
    </title>

    <varlistentry xml:id="constant.psfs-flag-normal">
     <term>
      <constant>PSFS_FLAG_NORMAL</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Lectura/escritura normal.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.psfs-flag-flush-inc">
     <term>
      <constant>PSFS_FLAG_FLUSH_INC</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Un vaciado incremental.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="constant.psfs-flag-flush-close">
     <term>
      <constant>PSFS_FLAG_FLUSH_CLOSE</constant>
      (<type>int</type>)
     </term>
     <listitem>
      <simpara>
       Vaciado final antes del cierre.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
</simplesect>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
