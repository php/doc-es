<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e50e79746736dbdfbabe9bd3566793b3ddf38f58 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.stream-socket-recvfrom" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stream_socket_recvfrom</refname>
  <refpurpose>Lee datos desde un socket, conectado o no</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>stream_socket_recvfrom</methodname>
   <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter role="reference">address</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
   <para>
    <function>stream_socket_recvfrom</function> acepta datos
    desde un socket remoto, hasta un total de <parameter>length</parameter>
    bytes.
   </para>
  </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       El socket remoto.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       El número de bytes a recibir de <parameter>socket</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       El valor de <parameter>flags</parameter> puede ser la combinación
       de las constantes siguientes:
       <table>
        <title>Valores posibles para <parameter>flags</parameter></title>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry><constant>STREAM_OOB</constant></entry>
           <entry>
            Procesa los datos en modo OOB (<literal>out-of-band</literal>).
           </entry>
          </row>
          <row>
           <entry><constant>STREAM_PEEK</constant></entry>
           <entry>
            Lee datos desde el socket, pero no utiliza el buffer.
            Las próximas llamadas a <function>fread</function> o
            <function>stream_socket_recvfrom</function> leerán los mismos
            datos.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>address</parameter></term>
     <listitem>
      <para>
       Si el argumento <parameter>address</parameter> es proporcionado, recibirá
       la dirección del socket remoto.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve los datos leídos, como &string;, &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
     <title>Ejemplo con <function>stream_socket_recvfrom</function></title>
     <programlisting role="php">
<![CDATA[
<?php
/* Abre un socket en el puerto 1234 de localhost */
$server = stream_socket_server('tcp://127.0.0.1:1234');

/* Acepta una conexión */
$socket = stream_socket_accept($server);

/* Lee un paquete (1500 es el tamaño clásico MTU) de datos OOB */
echo "Recibido Out-Of-Band: '" . stream_socket_recvfrom($socket, 1500, STREAM_OOB) . "'\n";

/* Lee los datos normales in-band, pero no modifica nada */
echo "Datos: '" . stream_socket_recvfrom($socket, 1500, STREAM_PEEK) . "'\n";

/* Vuelve a leer el mismo paquete, pero vacía el buffer. */
echo "Datos: '" . stream_socket_recvfrom($socket, 1500) . "'\n";

/* Finalización */
fclose($socket);
fclose($server);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
    <note>
     <para>
      Si el mensaje recibido es más grande que <parameter>length</parameter>,
      los datos adicionales pueden ser destruidos, dependiendo del tipo
      de socket utilizado (por ejemplo UDP).
     </para>
    </note>
    <note>
     <para>
      La llamada a <function>stream_socket_recvfrom</function> en flujos
      basados en socket, después de la llamada a funciones de flujo basadas en
      buffer (como <function>fread</function> o
      <function>stream_get_line</function>) lee directamente los datos desde
      el socket y evita el uso del buffer con el flujo.
     </para>
    </note>
   </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>stream_socket_sendto</function></member>
   <member><function>stream_socket_client</function></member>
   <member><function>stream_socket_server</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
