<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 761d72245071f89a626903c9bcdc6aaff1252d54 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.min" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>min</refname>
  <refpurpose>El valor más pequeño</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>min</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>values</parameter></methodparam>
  </methodsynopsis>
  <simpara>Firma alternativa (no soportada con argumentos nombrados):</simpara>
  <methodsynopsis>
   <type>mixed</type><methodname>min</methodname>
   <methodparam><type>array</type><parameter>value_array</parameter></methodparam>
  </methodsynopsis>
  <para>
   Si el primer y único parámetro es un array, <function>min</function>
   retornará el valor más pequeño contenido en el array. Si el
   primer parámetro es un entero, una cadena o un número decimal,
   deben proporcionarse al menos dos parámetros y <function>min</function>
   retornará el más pequeño de estos valores.
  </para>
  <note>
   <para>
    Los valores de diferentes tipos serán comparados utilizando
    las <link linkend="language.operators.comparison">reglas de
    comparación estándar</link>. Actualmente, una cadena no numérica
    será comparada con un &integer;, como si fuera la valor
    <literal>0</literal>, pero varias &string; no numéricas serán comparadas de forma
    alfanumérica. El valor actual retornado será del mismo tipo que
    el original y ninguna conversión de tipo será aplicada.
   </para>
  </note>
  <caution>
   <simpara>
    Tenga cuidado al pasar argumentos con tipos diferentes,
    ya que <function>min</function> puede producir resultados impredecibles.
   </simpara>
  </caution>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Cualquier valor <link linkend="language.operators.comparison">comparable</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       Cualquier valor <link linkend="language.operators.comparison">comparable</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value_array</parameter></term>
     <listitem>
      <para>
       Un array que contiene los valores.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   La función <function>min</function> retorna el valor del parámetro
   considerado como "inferior" según la comparación estándar.
   Si varios valores de tipos diferentes son evaluados como iguales
   (i.e. <literal>0</literal> y <literal>'abc'</literal>), el primero proporcionado
   a la función será retornado.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si se pasa un array vacío, la función <function>min</function> lanza una <classname>ValueError</classname>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <function>min</function> ahora lanza una <classname>ValueError</classname> en caso de fallo;
       previamente, &false; era retornado y un error <constant>E_WARNING</constant> era emitido.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Como las <link linkend="migration80.incompatible.core.string-number-comparision">
       comparaciones entre las cadenas y los números</link> han sido cambiadas,
       <function>min</function> ya no retorna un valor diferente
       basado en el orden de los argumentos en estos casos.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>min</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo min(2, 3, 1, 6, 7), PHP_EOL;  // 1
echo min(array(2, 4, 5)), PHP_EOL; // 2

// Aquí, comparamos -1 < 0, por lo tanto, -1 es el valor más bajo
echo min('hello', -1), PHP_EOL;    // -1

// Con varios arrays de diferentes tamaños, min retorna el más corto
$val = min(array(2, 2, 2), array(1, 1, 1, 1)); // array(2, 2, 2)
var_dump($val);

// Varios arrays del mismo tamaño son comparados desde la izquierda hacia la derecha,
// por lo tanto, en nuestro ejemplo: 2 == 2, pero 4 < 5
$val = min(array(2, 4, 8), array(2, 5, 1)); // array(2, 4, 8)
var_dump($val);

// Si se proporciona un array y un no-array, el array nunca será retornado
// ya que las comparaciones tratan los arrays como mayores que cualquier valor
$val = min('string', array(2, 5, 7), 42);   // string
var_dump($val);

// Si un argumento es NULL o un booleano, será comparado con
// otras valores utilizando la regla FALSE < TRUE según los otros
// tipos proporcionados. En el ejemplo de abajo, tanto -10 como 10 son tratados
// como valiendo TRUE en la comparación
$val = min(-10, FALSE, 10); // FALSE
var_dump($val);

$val = min(-10, NULL, 10);  // NULL
var_dump($val);

// Por otro lado, 0 es tratado como valiendo FALSE, por lo tanto, es "más pequeño que" TRUE
$val = min(0, TRUE); // 0
var_dump($val);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>max</function></member>
    <member><function>count</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
