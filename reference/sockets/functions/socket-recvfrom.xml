<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: de9c65c91ff1710d8b2d2ec955caea0162679305 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.socket-recvfrom" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_recvfrom</refname>
  <refpurpose>Recibe datos de un socket, conectado o no</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>socket_recvfrom</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">data</parameter></methodparam>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
   <methodparam><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">address</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">port</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   La función <function>socket_recvfrom</function> recibe
   <parameter>length</parameter> bytes de datos del buffer <parameter>data</parameter>
   desde <parameter>address</parameter> en el puerto <parameter>port</parameter> (si el socket
   no es del tipo <constant>AF_UNIX</constant>), utilizando
   <parameter>socket</parameter>. <function>socket_recvfrom</function> puede ser utilizado
   para recuperar los datos desde sockets conectadas o no. Asimismo,
   uno o varios flags pueden ser especificados para modificar este comportamiento.
  </para>
  <para>
   Los parámetros <parameter>address</parameter> y <parameter>port</parameter>
   deben ser pasados por referencia. Si el socket no está conectado,
   <parameter>address</parameter> contendrá la dirección internet del host remoto o
   la ruta del socket Unix. Si el socket está conectado, <parameter>address</parameter>
   valdrá &null;. Asimismo, el parámetro <parameter>port</parameter> contendrá
   el puerto del host remoto en el caso de un socket <constant>AF_INET</constant> o
   <constant>AF_INET6</constant>.
  </para>
  &note.bin-safe;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       El parámetro <parameter>socket</parameter> debe ser una instancia
       de <classname>Socket</classname> creada por <function>socket_create</function>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Los datos recuperados serán colocados en la variable especificada
       por este parámetro.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Hasta <parameter>length</parameter> bytes deben ser recuperados
       del host remoto.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       El valor de este parámetro puede ser una combinación de los flags siguientes,
       unidos por un OR binario (<literal>|</literal>).
      </para>

      <table>
       <title>Valores posibles para <parameter>flags</parameter></title>
       <tgroup cols="2">
        <thead>
         <row>
          <entry>Flag</entry>
          <entry>Descripción</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><constant>MSG_OOB</constant></entry>
          <entry>
           Procesamiento fuera de la banda de datos.
          </entry>
         </row>
         <row>
          <entry><constant>MSG_PEEK</constant></entry>
          <entry>
           Recibe los datos desde el inicio de la cola de recepción
           sin eliminarlos de esta cola.
          </entry>
         </row>
         <row>
          <entry><constant>MSG_WAITALL</constant></entry>
          <entry>
           Bloquea hasta que al menos <parameter>length</parameter> bytes hayan
           sido recibidos. Sin embargo, si se recibe una señal o el host remoto
           se desconecta, la función podrá retornar menos datos.
          </entry>
         </row>
         <row>
          <entry><constant>MSG_DONTWAIT</constant></entry>
          <entry>
           Cuando este flag está definido, la función retorna datos
           incluso si debería permanecer bloqueada.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>address</parameter></term>
     <listitem>
      <para>
       Si el socket es del tipo <constant>AF_UNIX</constant>,
       <parameter>address</parameter> será la ruta hacia este fichero. De lo contrario,
       para los sockets no-conectados, <parameter>address</parameter> es la dirección
       IP del host remoto, o &null; si el socket está conectado.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Este argumento solo se aplica a los sockets <constant>AF_INET</constant> y
       <constant>AF_INET6</constant>, y especifica el puerto remoto desde el cual
       los datos son recibidos. Si el socket está conectado,
       <parameter>port</parameter> valdrá &null;.
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>socket_recvfrom</function> retorna el número de bytes
   recibidos, o &false; si ocurre un error. El código de error actual puede
   ser obtenido llamando a la función <function>socket_last_error</function>.
   Este código de error puede ser pasado a la función <function>socket_strerror</function>
   para obtener una explicación textual del error.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &sockets.changelog.socket-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>socket_recvfrom</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$socket = socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);
socket_bind($socket, '127.0.0.1', 1223);

$from = '';
$port = 0;
socket_recvfrom($socket, $buf, 12, 0, $from, $port);

echo "Recepción de $buf desde la dirección remota $from y del puerto remoto $port" . PHP_EOL;
?>
]]>
    </programlisting>
    <para>
     Este ejemplo inicializa un socket UDP en el puerto 1223 de la dirección
     127.0.0.1 y muestra al menos 12 caracteres recibidos desde el host remoto.
    </para>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_recv</function></member>
    <member><function>socket_send</function></member>
    <member><function>socket_sendto</function></member>
    <member><function>socket_create</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
