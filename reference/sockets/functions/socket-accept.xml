<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 14dc7c47365f2b71f6c907a5ba5bccf42534d5a9 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.socket-accept" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_accept</refname>
  <refpurpose>Acepta una conexión en un socket</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>Socket</type><type>false</type></type><methodname>socket_accept</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
  </methodsynopsis>
  <para>
   Una vez que el socket <parameter>socket</parameter> ha sido creado con la
   función <function>socket_create</function>, vinculado a un nombre con la función
   <function>socket_bind</function>, y puesto en espera de conexión con la
   función <function>socket_listen</function>,
   <function>socket_accept</function> acepta las conexiones en este
   socket. Una vez que se establece una conexión, se devuelve una nueva instancia de
   <classname>Socket</classname>. Esta puede ser utilizada para las comunicaciones.
   Si hay varias conexiones en espera, se utilizará la primera. Si
   no hay conexiones en espera, <function>socket_accept</function> se
   bloqueará hasta que se presente una conexión. Si
   <parameter>socket</parameter> ha sido configurado como no bloqueante, gracias a
   <function>socket_set_blocking</function> o
   <function>socket_set_nonblock</function>, se devolverá &false;.
  </para>
  <para>
   La instancia de <classname>Socket</classname> devuelta por
   <function>socket_accept</function> no debe ser utilizada
   para aceptar nuevas conexiones. El socket original
   <parameter>socket</parameter>, que está en espera, permanece abierto
   y puede ser reutilizado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Una instancia de <classname>Socket</classname> creada por <function>socket_create</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una nueva instancia de <classname>Socket</classname> en caso de éxito o &false; en caso
   de error. El código de error generado puede ser obtenido llamando a la función
   <function>socket_last_error</function>. Este código de error puede ser pasado a
   la función <function>socket_strerror</function> para obtener un mensaje
   de error legible por humanos.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       En caso de éxito, esta función devuelve ahora una instancia de <classname>Socket</classname> ;
       anteriormente, se devolvía un <type>resource</type>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_connect</function></member>
    <member><function>socket_listen</function></member>
    <member><function>socket_create</function></member>
    <member><function>socket_bind</function></member>
    <member><function>socket_strerror</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
