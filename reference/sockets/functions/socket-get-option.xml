<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e50e79746736dbdfbabe9bd3566793b3ddf38f58 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.socket-get-option" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_get_option</refname>
  <refpurpose>Lee las opciones del socket</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>int</type><type>false</type></type><methodname>socket_get_option</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
   <methodparam><type>int</type><parameter>level</parameter></methodparam>
   <methodparam><type>int</type><parameter>option</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>socket_get_option</function> recupera el valor de la opción
   especificada por el argumento <parameter>option</parameter> para el socket
   especificado por el argumento <parameter>socket</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Una instancia de <classname>Socket</classname> creada por
       <function>socket_create</function> o <function>socket_accept</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>level</parameter></term>
     <listitem>
      <para>
       El argumento <parameter>level</parameter> especifica la capa de
       protocolo de la opción. Por ejemplo, para conocer las opciones de
       la capa socket, el valor <constant>SOL_SOCKET</constant> del argumento
       <parameter>level</parameter> será utilizado. Otros niveles, como
       <constant>TCP</constant>, pueden ser utilizados especificando el
       número del protocolo de esta capa. Los números de protocolos
       pueden ser encontrados utilizando la función
       <function>getprotobyname</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <table>
       <title>Opciones disponibles para los sockets</title>
       <tgroup cols="3">
        <thead>
         <row>
          <entry>Opción</entry>
          <entry>Descripción</entry>
          <entry>Tipo</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><constant>SO_DEBUG</constant></entry>
          <entry>
           Reporta si las informaciones de depuración son registradas o no.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_BROADCAST</constant></entry>
          <entry>
           Reporta si la transmisión de anuncios globales es soportada o no.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_REUSEADDR</constant></entry>
          <entry>
           Indica si las direcciones locales pueden ser reutilizadas o no.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_REUSEPORT</constant></entry>
          <entry>
           Indica si los puertos locales pueden ser reutilizados.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_KEEPALIVE</constant></entry>
          <entry>
           Reporta si las conexiones son persistentes con transmisiones
           periódicas de mensajes o no. Si el socket conectado falla en
           respuesta a estos mensajes, la conexión es interrumpida y el proceso
           escribirá sobre este socket una notificación con un señal SIGPIPE.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_LINGER</constant></entry>
          <entry>
           <para>
            Reporta si el socket <parameter>socket</parameter> se demora en
            la función <function>socket_close</function> si hay datos presentes o no. Por omisión, cuando el socket es cerrado,
            <function>socket_close</function> intenta enviar todos los
            datos que no han sido enviados aún.
           </para>
           <para>
            Si <varname>l_onoff</varname> no vale cero y que
            <varname>l_linger</varname> vale cero, todos los datos
            que no han sido enviados aún serán cancelados y RST
            (reinicialización) será enviado en el caso de una conexión
            orientada socket.
           </para>
           <para>
            Por otro lado, si <varname>l_onoff</varname> no vale cero
            y <varname>l_linger</varname> no vale cero,
            <function>socket_close</function> bloqueará hasta que los datos
            no enviados sean enviados o durante el tiempo especificado por
            <varname>l_linger</varname>. Si el socket es no-bloqueante,
            <function>socket_close</function> fallará y retornará un
            error.
           </para>
          </entry>
          <entry>
           <type>array</type>. El array contendrá 2 claves :
           <varname>l_onoff</varname> y
           <varname>l_linger</varname>.
          </entry>
         </row>
         <row>
          <entry><constant>SO_OOBINLINE</constant></entry>
          <entry>
           Reporta si el socket <parameter>socket</parameter> parte sobre datos en
           línea out-of-band o no.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDBUF</constant></entry>
          <entry>
           Reporta las informaciones sobre el tamaño del buffer enviado.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVBUF</constant></entry>
          <entry>
           Reporta las informaciones sobre el tamaño del buffer recibido.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_ERROR</constant></entry>
          <entry>
           Reporta las informaciones sobre el estado de error y lo vacía.
          </entry>
          <entry>
           <type>int</type> (no puede ser definido por la función
           <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>SO_TYPE</constant></entry>
          <entry>
           Reporta el tipo del socket <parameter>socket</parameter> (ej.
           <constant>SOCK_STREAM</constant>).
          </entry>
          <entry>
           <type>int</type> (no puede ser definido por la función
           <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>SO_DONTROUTE</constant></entry>
          <entry>
           Reporta si los mensajes salientes desvían los equipos estándar de encaminamiento.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVLOWAT</constant></entry>
          <entry>
           Reporta el número mínimo de octetos al proceso para las operaciones
           entrantes sobre el socket <parameter>socket</parameter>.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVTIMEO</constant></entry>
          <entry>
           Reporta el valor del tiempo límite para las operaciones entrantes.
          </entry>
          <entry>
           <type>array</type>. El array contendrá 2 claves :
           <varname>sec</varname> que es la parte representando los segundos
           del valor del tiempo de espera y <varname>usec</varname> que es
           la parte representando los microsegundos.
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDTIMEO</constant></entry>
          <entry>
           Reporta el valor del tiempo límite especificando el tiempo máximo de ejecución
           para las funciones salientes bloqueantes porque el comando de flujo
           impide que los datos sean enviados.
          </entry>
          <entry>
           <type>array</type>. El array contendrá 2 claves :
           <varname>sec</varname> que es la parte representando los segundos
           del valor del tiempo de espera y <varname>usec</varname> que es
           la parte representando los microsegundos.
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDLOWAT</constant></entry>
          <entry>
           Reporta el número mínimo de octetos al proceso para las operaciones
           salientes sobre el socket <parameter>socket</parameter>.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_NODELAY</constant></entry>
          <entry>
           Indica si el algoritmo Nagle TCP está desactivado.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_JOIN_GROUP</constant></entry>
          <entry>
           Se une a un grupo multicast.
          </entry>
          <entry>
           Un array con una clave <literal>"group"</literal>,
           especificando un string con las direcciones multicast IPv4 o IPv6
           y una clave <literal>"interface"</literal>, especificando ya sea un
           número de interfaz (de tipo <type>int</type>), ya sea un
           string con el nombre de la interfaz, como
           <literal>"eth0"</literal>.
           <literal>0</literal> puede ser especificado para indicar que la interfaz
           debe ser seleccionada utilizando las reglas de encaminamiento (no puede ser
           utilizado más que con la función <function>socket_set_option</function>).
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_LEAVE_GROUP</constant></entry>
          <entry>
           Abandona un grupo multicast.
          </entry>
          <entry>
           Un array. Ver la constante <constant>MCAST_JOIN_GROUP</constant>
           para más informaciones (no puede ser utilizado más que con la función
           <function>socket_set_option</function>).
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_BLOCK_SOURCE</constant></entry>
          <entry>
           Bloquea paquetes llegando desde una fuente específica
           hacia un grupo multicast específico, que habrá debido ser unido
           anteriormente.
          </entry>
          <entry>
           Un array conteniendo las mismas claves que las de la constante
           <constant>MCAST_JOIN_GROUP</constant>, con una clave adicional
           <literal>source</literal>, ligado a un string especificando
           una dirección IPv4 o IPv6 de la fuente a bloquear
           (no puede ser utilizado más que con la función
           <function>socket_set_option</function>).
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_UNBLOCK_SOURCE</constant></entry>
          <entry>
           Desbloquea (recomienza a recibir) los paquetes llegando desde
           una fuente específica hacia un grupo multicast específico,
           que habrá debido ser unido anteriormente.
          </entry>
          <entry>
           Un array en el mismo formato que el de la constante
           <constant>MCAST_BLOCK_SOURCE</constant>
           (no puede ser utilizado más que con la función
           <function>socket_set_option</function>).
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_JOIN_SOURCE_GROUP</constant></entry>
          <entry>
           Recibe paquetes destinados a un grupo multicast específico
           cuya dirección fuente corresponde a un valor específico.
          </entry>
          <entry>
           Un array en el mismo formato que el de la constante
           <constant>MCAST_BLOCK_SOURCE</constant>
           (no puede ser utilizado más que con la función
           <function>socket_set_option</function>).
          </entry>
         </row>
         <row>
          <entry><constant>MCAST_LEAVE_SOURCE_GROUP</constant></entry>
          <entry>
           Deja de recibir paquetes destinados a un grupo multicast
           específico cuya dirección fuente corresponde a un valor específico.
          </entry>
          <entry>
           Un array en el mismo formato que el de la constante
           <constant>MCAST_BLOCK_SOURCE</constant>
           (no puede ser utilizado más que con la función
           <function>socket_set_option</function>).
          </entry>
         </row>
         <row>
          <entry><constant>IP_MULTICAST_IF</constant></entry>
          <entry>
           La interfaz de salida para los paquetes multicast IPv4.
          </entry>
          <entry>
           Ya sea un entero especificando el número de la interfaz, ya sea un
           string representando el nombre de la interfaz, por ejemplo,
           <literal>eth0</literal>. El valor <type>0</type>
           puede ser utilizado para indicar la tabla de encaminamiento a utilizar
           en la selección de la interfaz. La función
           <function>socket_get_option</function> retorna un índice de interfaz.
           Note que, a diferencia de la API C, esta opción no toma
           como argumento una dirección IP. Esto elimina la diferencia de interfaz
           entre las constantes <constant>IP_MULTICAST_IF</constant> y
           <constant>IPV6_MULTICAST_IF</constant>.
          </entry>
         </row>
         <row>
          <entry><constant>IPV6_MULTICAST_IF</constant></entry>
          <entry>
           La interfaz de salida para los paquetes multicast IPv6.
          </entry>
          <entry>
           Idéntico a la constante <constant>IP_MULTICAST_IF</constant>.
          </entry>
         </row>
         <row>
          <entry><constant>IP_MULTICAST_LOOP</constant></entry>
          <entry>
           La política de la bucla local multicast para los paquetes
           IPv4 activa o desactiva el buclaje de las multidifusiones salientes,
           que deben haber sido unidas anteriormente. El efecto difiere sin embargo
           según que se aplique a Unix o a Windows, el primero siendo sobre el
           camino de recepción mientras que el segundo sobre el camino de envío.
          </entry>
          <entry>
           Un entero (ya sea <literal>0</literal>, ya sea <literal>1</literal>).
           Para la función <function>socket_set_option</function>,
           cualquier valor será aceptado y será convertido
           en un booleano siguiendo las reglas habituales de PHP.
          </entry>
         </row>
         <row>
          <entry><constant>IPV6_MULTICAST_LOOP</constant></entry>
          <entry>
           Idéntico a la constante <constant>IP_MULTICAST_LOOP</constant>,
           pero para el IPv6.
          </entry>
          <entry>
           Un entero. Ver la constante <constant>IP_MULTICAST_LOOP</constant>.
          </entry>
         </row>
         <row>
          <entry><constant>IP_MULTICAST_TTL</constant></entry>
          <entry>
           La duración de vida de los paquetes salientes multicast IPv4.
           Esto debe ser un valor comprendido entre 0 (no salir
           de la interfaz) y 255. Por omisión, el valor es a 1 (solo
           la red local es alcanzada).
          </entry>
          <entry>
           Un entero entre 0 y 255.
          </entry>
         </row>
         <row>
          <entry><constant>IPV6_MULTICAST_HOPS</constant></entry>
          <entry>
           Idéntico a la constante <constant>IP_MULTICAST_TTL</constant>,
           pero para los paquetes IPv6. El valor -1 es igualmente aceptado,
           significando que la ruta por omisión debe ser utilizada.
          </entry>
          <entry>
           Un entero comprendido entre -1 y 255.
          </entry>
         </row>
         <row>
          <entry><constant>SO_MARK</constant></entry>
          <entry>
           Define un identificador sobre el socket para el propósito de filtrar
           los paquetes sobre Linux.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_ACCEPTFILTER</constant></entry>
          <entry>
           Añade un filtro de aceptación sobre el socket escuchado (FreeBSD/NetBSD).
           Un módulo kernel de filtro de aceptación debe ser cargado
           primero sobre FreeBSD (ej. accf_http).
          </entry>
          <entry>
           <type>string</type> nombre del filtro (longitud 15 max).
          </entry>
         </row>
         <row>
          <entry><constant>SO_USER_COOKIE</constant></entry>
          <entry>
           Define un identificador sobre el socket para el propósito de filtrar
           los paquetes sobre FreeBSD.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RTABLE</constant></entry>
          <entry>
           Define un identificador sobre el socket para el propósito de filtrar
           los paquetes sobre OpenBSD.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_DONTTRUNC</constant></entry>
          <entry>
           Conserva los datos no leídos.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_WANTMORE</constant></entry>
          <entry>
           Proporciona un índice cuando más datos están listos.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_DEFER_ACCEPT</constant></entry>
          <entry>
           No notificar un socket que escucha hasta que los datos no estén listos.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_INCOMING_CPU</constant></entry>
          <entry>
           Recupera/Define la afinidad del cpu para un socket.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_MEMINFO</constant></entry>
          <entry>
           Recupera toda la meminfo de un socket.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_BPF_EXTENSIONS</constant></entry>
          <entry>
           Recupera las extensiones BPF soportadas por el kernel para adjuntar a un socket.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_SETFIB</constant></entry>
          <entry>
           Define la tabla de encaminamiento (FIB) de un socket. (FreeBSD solamente)
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SOL_FILTER</constant></entry>
          <entry>
           Filtros atribuidos a un socket. (Solaris/Illumos solamente)
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_KEEPCNT</constant></entry>
          <entry>
           Define el número máximo de sondas keepalive TCP debería enviar antes de soltar la conexión.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_KEEPIDLE</constant></entry>
          <entry>
           Define el tiempo que la conexión debe permanecer inactiva.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_KEEPINTVL</constant></entry>
          <entry>
           Define el tiempo entre las sondas keepalive individuales.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_KEEPALIVE</constant></entry>
          <entry>
           Define el tiempo que la conexión debe permanecer inactiva. (macOS solamente)
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_NOTSENT_LOWAT</constant></entry>
          <entry>
           Define el número límite de datos no enviados en la cola de escritura
           por el flujo de socket. (Linux solamente)
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna el valor de la opción proporcionada, &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &sockets.changelog.socket-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>socket_get_option</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$socket = socket_create_listen(1223);

$linger = array('l_linger' => 1, 'l_onoff' => 1);
socket_set_option($socket, SOL_SOCKET, SO_LINGER, $linger);

var_dump(socket_get_option($socket, SOL_SOCKET, SO_REUSEADDR));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_create_listen</function></member>
    <member><function>socket_set_option</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
