<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f1446c725b05024034664159db4d5f34b56421d0 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.shmop-open" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>shmop_open</refname>
  <refpurpose>Crea o abre un bloque de memoria compartida</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>Shmop</type><type>false</type></type><methodname>shmop_open</methodname>
   <methodparam><type>int</type><parameter>key</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
   <methodparam><type>int</type><parameter>permissions</parameter></methodparam>
   <methodparam><type>int</type><parameter>size</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>shmop_open</function> puede crear o abrir un bloque
   de memoria compartida.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Identificador del sistema para el bloque de memoria compartida.
       Este argumento puede ser pasado como un decimal o
       un hexadecimal.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Se pueden utilizar:
       <itemizedlist>
        <listitem>
         <simpara>
          <literal>"a"</literal> para acceso (utiliza <literal>SHM_RDONLY</literal> para shmat)
          utilice esta opción para abrir un bloque ya existente en modo solo lectura.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <literal>"c"</literal> para creación (utiliza <literal>IPC_CREATE</literal>)
          utilice esta opción para crear un nuevo bloque, o, si un
          segmento con el mismo identificador existe, intentar acceder a él en
          modo lectura y escritura.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <literal>"w"</literal> para acceso en lectura y escritura. Utilice
          esta opción cuando se deba acceder en lectura y
          escritura a un segmento de memoria compartida.
          Este es el caso más común.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <literal>"n"</literal> crea un nuevo segmento de memoria compartida
          (utiliza <literal>IPC_CREATE|IPC_EXCL</literal>). Utilice esta opción
          cuando se quiera crear un nuevo segmento de memoria
          compartida a menos que ya exista uno corrupto con la
          misma opción. Esto es muy útil por razones de seguridad, para evitar
          agujeros de seguridad que exploten la carrera por los recursos.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>permissions</parameter></term>
     <listitem>
      <para>
       Los permisos que se otorgan a este bloque. Son
       los mismos que para los archivos. Estos permisos deben
       ser pasados en formato octal (i.e. 0644).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>
       El tamaño del bloque de memoria compartida que se quiere crear, en bytes
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <note>
    <para>
     Nota: Los tercer y cuarto argumentos deben ser pasados a 0 si se quiere abrir un bloque de memoria compartida ya existente.
    </para>
   </note>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   En caso de éxito, <function>shmop_open</function> devuelve una
   instancia de <classname>Shmop</classname> que puede ser utilizada para acceder a la memoria que
   se acaba de crear. &false; será devuelto en caso de fallo.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si <parameter>mode</parameter> es inválido, o si <parameter>size</parameter> es inferior o igual a cero,
   se lanza una <classname>ValueError</classname>.
   En otros casos de fallo, se emite un <constant>E_WARNING</constant>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>shmop</parameter> ahora espera una instancia de <classname>Shmop</classname>
       anteriormente se esperaba un <type>resource</type>.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Si <parameter>mode</parameter> es inválido, o si <parameter>size</parameter> es inferior o igual a cero,
       se lanza una <classname>ValueError</classname>; anteriormente, se emitía un <constant>E_WARNING</constant> en su lugar,
       y la función devolvía &false;.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Crear un nuevo bloque de memoria compartida Shmop</title>
    <programlisting role="php">
<![CDATA[
<?php
$shm_key = ftok(__FILE__, 't');
$shm_id = shmop_open($shm_key, "c", 0644, 100);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Este ejemplo abre un nuevo bloque de memoria compartida,
   cuyo identificador es devuelto por <function>ftok</function>.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>shmop_close</function></member>
    <member><function>shmop_delete</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
